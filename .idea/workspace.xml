<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="LLVM" targetName="install-LLVMSparcCodeGen" />
      <config projectName="LLVM" targetName="LLVMXCoreDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-mips" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg" />
      <config projectName="LLVM" targetName="llvm-objdump" />
      <config projectName="LLVM" targetName="check-llvm-tools-dsymutil-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inferaddressspaces-nvptx" />
      <config projectName="LLVM" targetName="install-verify-uselistorder" />
      <config projectName="LLVM" targetName="LLVMDemangle" />
      <config projectName="LLVM" targetName="AVRCommonTableGen" />
      <config projectName="LLVM" targetName="install-LLVMAVRInfo-stripped" />
      <config projectName="LLVM" targetName="llvm-cxxfilt" />
      <config projectName="LLVM" targetName="LLVMRISCVDesc" />
      <config projectName="LLVM" targetName="install-LLVMAggressiveInstCombine-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms" />
      <config projectName="LLVM" targetName="LLVMLanaiDesc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-makeguardsexplicit" />
      <config projectName="LLVM" targetName="install-llvm-ranlib" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-hwaddresssanitizer-x86" />
      <config projectName="LLVM" targetName="llvm-lipo" />
      <config projectName="LLVM" targetName="install-LLVMHexagonCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-readobj-elf" />
      <config projectName="LLVM" targetName="check-llvm-transforms-indvarsimplify-x86" />
      <config projectName="LLVM" targetName="yaml2obj" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-mips32r6" />
      <config projectName="LLVM" targetName="install-LLVMHexagonInfo" />
      <config projectName="LLVM" targetName="LLVMSystemZDesc" />
      <config projectName="LLVM" targetName="MCTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constanthoisting" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopversioninglicm" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-elf" />
      <config projectName="LLVM" targetName="SancusModuleCreator" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-elf-riscv" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXCodeGen" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-amdgpu" />
      <config projectName="LLVM" targetName="install-LLVMSelectionDAG" />
      <config projectName="LLVM" targetName="llvm-link" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand" />
      <config projectName="LLVM" targetName="LLVMTableGenGlobalISel" />
      <config projectName="LLVM" targetName="OptionTests" />
      <config projectName="LLVM" targetName="install-llvm-bitcode-strip" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-elf-arm" />
      <config projectName="LLVM" targetName="install-LLVMAVRDesc" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-elf-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-x86" />
      <config projectName="LLVM" targetName="llvm-reduce" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-instrorderfile" />
      <config projectName="LLVM" targetName="check-llvm-codegen-x86-globalisel" />
      <config projectName="LLVM" targetName="install-LLVMAnalysis-stripped" />
      <config projectName="LLVM" targetName="LLVMTestingSupport" />
      <config projectName="LLVM" targetName="install-llvm-exegesis" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constantmerge" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instmerge" />
      <config projectName="LLVM" targetName="check-llvm-transforms-indvarsimplify-arm" />
      <config projectName="LLVM" targetName="install-llvm-undname-stripped" />
      <config projectName="LLVM" targetName="install-LLVMInstrumentation-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-systemz" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-addresssanitizer" />
      <config projectName="LLVM" targetName="llvm-special-case-list-fuzzer" />
      <config projectName="LLVM" targetName="install-LLVMLanaiDisassembler-stripped" />
      <config projectName="LLVM" targetName="install-LLVMTarget" />
      <config projectName="LLVM" targetName="ModuleMaker" />
      <config projectName="LLVM" targetName="LLJITDumpObjects" />
      <config projectName="LLVM" targetName="install-llvm-cxxfilt" />
      <config projectName="LLVM" targetName="llvm-rtdyld" />
      <config projectName="LLVM" targetName="install-LLVMLineEditor" />
      <config projectName="LLVM" targetName="LLVMSystemZDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-transforms-indvarsimplify-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-coff-armnt" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objcopy" />
      <config projectName="LLVM" targetName="install-LLVMInstCombine-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-gcovprofiling" />
      <config projectName="LLVM" targetName="install-LLVMWindowsManifest-stripped" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir-x86" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-cstmaterialization" />
      <config projectName="LLVM" targetName="LibOptionsTableGen" />
      <config projectName="LLVM" targetName="llvm-ifs" />
      <config projectName="LLVM" targetName="LLVMCoverage" />
      <config projectName="LLVM" targetName="check-llvm-tools-llc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-guardwidening" />
      <config projectName="LLVM" targetName="check-llvm-tools-dsymutil-x86" />
      <config projectName="LLVM" targetName="LLVMExegesisMips" />
      <config projectName="LLVM" targetName="LLVMCFGuard" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-opt-report" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-libtool-darwin" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-memorysanitizer" />
      <config projectName="LLVM" targetName="LLVMMSP430CodeGen" />
      <config projectName="LLVM" targetName="install-llvm-cxxdump-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-earlycse-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-instverify" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-llvm-ir" />
      <config projectName="LLVM" targetName="LLVMExegesisPowerPCTests" />
      <config projectName="LLVM" targetName="check-llvm-codegen-bpf-btf" />
      <config projectName="LLVM" targetName="check-llvm-feature" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-nvptx" />
      <config projectName="LLVM" targetName="LLVMWebAssemblyDesc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-scalarizemaskedmemintrin-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMLanaiDisassembler" />
      <config projectName="LLVM" targetName="install-LLVMAVRAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-octeon" />
      <config projectName="LLVM" targetName="install-llvm-cov" />
      <config projectName="LLVM" targetName="check-llvm-object-x86" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-readobj-elf-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopinstsimplify" />
      <config projectName="LLVM" targetName="install-LLVMIRReader" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instsimplify-constprop" />
      <config projectName="LLVM" targetName="check-llvm-transforms-gvnsink" />
      <config projectName="LLVM" targetName="check-llvm-transforms-reassociate" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-amdgpu" />
      <config projectName="LLVM" targetName="install-LLVMCoroutines-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-readobj-wasm" />
      <config projectName="LLVM" targetName="BPFCommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-analysis-memoryssa" />
      <config projectName="LLVM" targetName="install-LLVMXCoreDesc-stripped" />
      <config projectName="LLVM" targetName="install-llvm-ranlib-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-preiselintrinsiclowering" />
      <config projectName="LLVM" targetName="install-LLVMARMCodeGen-stripped" />
      <config projectName="LLVM" targetName="LLVMBPFDesc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-placesafepoints" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoCodeView-stripped" />
      <config projectName="LLVM" targetName="install-LLVMRISCVAsmParser" />
      <config projectName="LLVM" targetName="install-LLVMFileCheck-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-uniqueinternallinkagenames" />
      <config projectName="LLVM" targetName="LLVMBinaryFormat" />
      <config projectName="LLVM" targetName="install-sanstats-stripped" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-sanitizercoverage" />
      <config projectName="LLVM" targetName="llvm-size" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loadstorevectorizer-x86" />
      <config projectName="LLVM" targetName="JITLinkTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-phaseordering-x86" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-memorysanitizer-x86" />
      <config projectName="LLVM" targetName="install-llvm-ml-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-expandmemcmp-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMOption-stripped" />
      <config projectName="LLVM" targetName="install-lli-stripped" />
      <config projectName="LLVM" targetName="install-llvm-objdump" />
      <config projectName="LLVM" targetName="LLVMDebugInfoGSYM" />
      <config projectName="LLVM" targetName="install-cmake-exports-stripped" />
      <config projectName="LLVM" targetName="install-LLVMSparcAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-exegesis-mips" />
      <config projectName="LLVM" targetName="install-LLVMWebAssemblyDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips" />
      <config projectName="LLVM" targetName="check-llvm-analysis-loopcacheanalysis-powerpc" />
      <config projectName="LLVM" targetName="llvm-dwp" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Desc" />
      <config projectName="LLVM" targetName="check-llvm-objectyaml-codeview" />
      <config projectName="LLVM" targetName="check-llvm-codegen-x86-gc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-hexagon" />
      <config projectName="LLVM" targetName="LLVMCore" />
      <config projectName="LLVM" targetName="install-LLVMExtensions-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-generic-mirstripdebug" />
      <config projectName="LLVM" targetName="install-LLVMDlltoolDriver-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler" />
      <config projectName="LLVM" targetName="LLJITWithGDBRegistrationListener" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunrollandjam" />
      <config projectName="LLVM" targetName="lli" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codeextractor-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-phaseordering" />
      <config projectName="LLVM" targetName="llvm-jitlink" />
      <config projectName="LLVM" targetName="llvm-opt-report" />
      <config projectName="LLVM" targetName="llvm-cvtres" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loweratomic" />
      <config projectName="LLVM" targetName="install-LLVMVectorize" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoPDB-stripped" />
      <config projectName="LLVM" targetName="install-LLVMDemangle" />
      <config projectName="LLVM" targetName="MtTableGen" />
      <config projectName="LLVM" targetName="llc" />
      <config projectName="LLVM" targetName="llvm-yaml-numeric-parser-fuzzer" />
      <config projectName="LLVM" targetName="LLVMRISCVUtils" />
      <config projectName="LLVM" targetName="install-llvm-dlltool-stripped" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir-arm" />
      <config projectName="LLVM" targetName="check-llvm-mc-elf" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopidiom-amdgpu" />
      <config projectName="LLVM" targetName="install-LLVMLinker-stripped" />
      <config projectName="LLVM" targetName="LLVMARMInfo" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll-arm" />
      <config projectName="LLVM" targetName="install-LLVMARMDesc" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoDWARF-stripped" />
      <config projectName="LLVM" targetName="install-LLVMSparcInfo" />
      <config projectName="LLVM" targetName="llvm-cfi-verify" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cfi-verify" />
      <config projectName="LLVM" targetName="check-llvm-codegen-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-analysis-legacydivergenceanalysis-amdgpu" />
      <config projectName="LLVM" targetName="install-LLVMHexagonCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-pdb" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine" />
      <config projectName="LLVM" targetName="AutomataTestTableGen" />
      <config projectName="LLVM" targetName="LLVMAVRInfo" />
      <config projectName="LLVM" targetName="check-llvm-codegen-thumb2-lowoverheadloops" />
      <config projectName="LLVM" targetName="install-llvm-elfabi-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-extract" />
      <config projectName="LLVM" targetName="check-llvm-transforms-canonicalizealiases" />
      <config projectName="LLVM" targetName="install-LLVMDemangle-stripped" />
      <config projectName="LLVM" targetName="install-llvm-xray" />
      <config projectName="LLVM" targetName="check-llvm-codegen-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lcssa" />
      <config projectName="LLVM" targetName="check-llvm-reduce" />
      <config projectName="LLVM" targetName="install-llvm-cfi-verify" />
      <config projectName="LLVM" targetName="check-llvm-analysis-scalarevolution" />
      <config projectName="LLVM" targetName="install-llvm-pdbutil-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-obj2yaml-xcoff" />
      <config projectName="LLVM" targetName="check-llvm-analysis-lint" />
      <config projectName="LLVM" targetName="LLVMExegesisAArch64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopfusion" />
      <config projectName="LLVM" targetName="install-LLVMSupport-stripped" />
      <config projectName="LLVM" targetName="check-llvm" />
      <config projectName="LLVM" targetName="check-llvm-codegen-arm-globalisel" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare" />
      <config projectName="LLVM" targetName="install-opt" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-virt" />
      <config projectName="LLVM" targetName="check-llvm-transforms-expandmemcmp" />
      <config projectName="LLVM" targetName="obj.llvm-tblgen" />
      <config projectName="LLVM" targetName="install-llvm-cxxmap-stripped" />
      <config projectName="LLVM" targetName="install-LLVMMSP430AsmParser-stripped" />
      <config projectName="LLVM" targetName="install-llvm-cxxmap" />
      <config projectName="LLVM" targetName="GlobalISelTests" />
      <config projectName="LLVM" targetName="LLVMARMAsmParser" />
      <config projectName="LLVM" targetName="LLVMAArch64CodeGen" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-interpreter" />
      <config projectName="LLVM" targetName="install-llvm-lib" />
      <config projectName="LLVM" targetName="check-llvm-objectyaml-coff" />
      <config projectName="LLVM" targetName="install-LLVMTextAPI-stripped" />
      <config projectName="LLVM" targetName="sancov" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cxxdump" />
      <config projectName="LLVM" targetName="install-LLVMWebAssemblyAsmParser" />
      <config projectName="LLVM" targetName="LLVMDebugInfoPDB" />
      <config projectName="LLVM" targetName="check-llvm-transforms-callsitesplitting" />
      <config projectName="LLVM" targetName="VectorizeTests" />
      <config projectName="LLVM" targetName="install-llvm-dwarfdump-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-canonicalizefreezeinloops" />
      <config projectName="LLVM" targetName="check-llvm-transforms-functionimport" />
      <config projectName="LLVM" targetName="install-llvm-jitlink" />
      <config projectName="LLVM" targetName="install-LLVMLinker" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-nm-wasm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopidiom-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-openmp" />
      <config projectName="LLVM" targetName="install-LLVMAVRDisassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-object-arm" />
      <config projectName="LLVM" targetName="install-LLVMSparcCodeGen-stripped" />
      <config projectName="LLVM" targetName="LLVMTextAPI" />
      <config projectName="LLVM" targetName="LLJITWithInitializers" />
      <config projectName="LLVM" targetName="check-llvm-codegen-generic" />
      <config projectName="LLVM" targetName="install-LLVMSymbolize-stripped" />
      <config projectName="LLVM" targetName="llvm-gsymutil" />
      <config projectName="LLVM" targetName="llvm-mca" />
      <config projectName="LLVM" targetName="install-LLVMProfileData-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-cnmipsp" />
      <config projectName="LLVM" targetName="StripOptsTableGen" />
      <config projectName="LLVM" targetName="install-LLVMOrcError-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-stripdeadprototypes" />
      <config projectName="LLVM" targetName="install-LLVMLanaiCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-bindings-ocaml" />
      <config projectName="LLVM" targetName="LTO_exports" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codeextractor" />
      <config projectName="LLVM" targetName="install-LLVMMipsAsmParser-stripped" />
      <config projectName="LLVM" targetName="LLVMX86CodeGen" />
      <config projectName="LLVM" targetName="check-llvm-codegen-x86-amx" />
      <config projectName="LLVM" targetName="install-LLVMSupport" />
      <config projectName="LLVM" targetName="DummyYAML" />
      <config projectName="LLVM" targetName="AnalysisTests" />
      <config projectName="LLVM" targetName="check-llvm-codegen-arm-paralleldsp" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-config" />
      <config projectName="LLVM" targetName="llvm-cxxmap" />
      <config projectName="LLVM" targetName="check-llvm-transforms-gvnhoist" />
      <config projectName="LLVM" targetName="LLVMLineEditor" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips1" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips3" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips2" />
      <config projectName="LLVM" targetName="NVPTXCommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips5" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips4" />
      <config projectName="LLVM" targetName="CvtResTableGen" />
      <config projectName="LLVM" targetName="LLVMXRay" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-straightlinestrengthreduce-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-transforms-earlycse" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Disassembler" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constanthoisting-aarch64" />
      <config projectName="LLVM" targetName="llvm-addr2line" />
      <config projectName="LLVM" targetName="llvm-exegesis" />
      <config projectName="LLVM" targetName="check-llvm-codegen-xcore" />
      <config projectName="LLVM" targetName="install-LLVMWebAssemblyCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-codegen-thumb2-mve-intrinsics" />
      <config projectName="LLVM" targetName="install-LLVMX86Desc" />
      <config projectName="LLVM" targetName="AMDGPUTests" />
      <config projectName="LLVM" targetName="install-LLVMLanaiCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-bpf" />
      <config projectName="LLVM" targetName="LLVMMCJIT" />
      <config projectName="LLVM" targetName="check-llvm-yamlparser" />
      <config projectName="LLVM" targetName="omp_gen" />
      <config projectName="LLVM" targetName="check-llvm-tablegen-gicombineremitter" />
      <config projectName="LLVM" targetName="install-SLLVM" />
      <config projectName="LLVM" targetName="check-llvm-transforms-naryreassociate-nvptx" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips32r6" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCDesc" />
      <config projectName="LLVM" targetName="llvm-undname" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips32r5" />
      <config projectName="LLVM" targetName="LLVMSymbolize" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips32r2" />
      <config projectName="LLVM" targetName="install-LLVMCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips32r3" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-micromips-dsp" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-riscv" />
      <config projectName="LLVM" targetName="AMDGPUDwarfTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopdataprefetch-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-elf-hexagon" />
      <config projectName="LLVM" targetName="check-llvm-object" />
      <config projectName="LLVM" targetName="check-llvm-transforms-expandmemcmp-x86" />
      <config projectName="LLVM" targetName="install-LLVMLanaiInfo" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir-systemz" />
      <config projectName="LLVM" targetName="install-LLVMSystemZDisassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-indvarsimplify-nvptx" />
      <config projectName="LLVM" targetName="check-llvm-transforms-speculativeexecution" />
      <config projectName="LLVM" targetName="LLVMAsmPrinter" />
      <config projectName="LLVM" targetName="LLVMExegesisTests" />
      <config projectName="LLVM" targetName="LLVMMipsDesc" />
      <config projectName="LLVM" targetName="install-LLVMJITLink" />
      <config projectName="LLVM" targetName="install-llvm-lto" />
      <config projectName="LLVM" targetName="LLVMAMDGPUInfo" />
      <config projectName="LLVM" targetName="install-LLVMAggressiveInstCombine" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constanthoisting-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-x86" />
      <config projectName="LLVM" targetName="BitcodeStripOptsTableGen" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-mcjit" />
      <config projectName="LLVM" targetName="install-llvm-strings" />
      <config projectName="LLVM" targetName="check-llvm-mc-hexagon-extensions" />
      <config projectName="LLVM" targetName="check-llvm-transforms-scalarizemaskedmemintrin" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-nvptx" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-gsymutil-arm_aarch64" />
      <config projectName="LLVM" targetName="install-LLVMRISCVDisassembler" />
      <config projectName="LLVM" targetName="install-LLVMXRay-stripped" />
      <config projectName="LLVM" targetName="install-LLVMBPFInfo-stripped" />
      <config projectName="LLVM" targetName="llvm-dis" />
      <config projectName="LLVM" targetName="llvm-itanium-demangle-fuzzer" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopsimplify" />
      <config projectName="LLVM" targetName="install-LLVMOrcError" />
      <config projectName="LLVM" targetName="install-LLVMTextAPI" />
      <config projectName="LLVM" targetName="llvm-pdbutil" />
      <config projectName="LLVM" targetName="LLJITWithThinLTOSummaries" />
      <config projectName="LLVM" targetName="check-llvm-mc-coff-arm" />
      <config projectName="LLVM" targetName="LLJITWithObjectLinkingLayerPlugin" />
      <config projectName="LLVM" targetName="LLVMScalarOpts" />
      <config projectName="LLVM" targetName="LLVMProfileData" />
      <config projectName="LLVM" targetName="llvm-PerfectShuffle" />
      <config projectName="LLVM" targetName="check-llvm-transforms-internalize" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUUtils-stripped" />
      <config projectName="LLVM" targetName="install-LLVMBPFAsmParser" />
      <config projectName="LLVM" targetName="LLJITWithObjectCache" />
      <config projectName="LLVM" targetName="LLVMAMDGPUAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loadstorevectorizer-nvptx" />
      <config projectName="LLVM" targetName="install-LLVMOption" />
      <config projectName="LLVM" targetName="install-LLVMRISCVInfo" />
      <config projectName="LLVM" targetName="check-llvm-tools-opt-viewer" />
      <config projectName="LLVM" targetName="ADTTests" />
      <config projectName="LLVM" targetName="install-split-file-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll-hexagon" />
      <config projectName="LLVM" targetName="install-LLVMLineEditor-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-divrempairs" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-mirparser" />
      <config projectName="LLVM" targetName="LLVMMipsDisassembler" />
      <config projectName="LLVM" targetName="install-LLVMBitReader" />
      <config projectName="LLVM" targetName="check-llvm-mc-systemz" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-eva" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-systemz" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Desc-stripped" />
      <config projectName="LLVM" targetName="LLVMHello_exports" />
      <config projectName="LLVM" targetName="check-llvm-transforms-vectorcombine-x86" />
      <config projectName="LLVM" targetName="IRTests" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-readobj-elf-riscv" />
      <config projectName="LLVM" targetName="check-llvm-codegen-wincfguard" />
      <config projectName="LLVM" targetName="install-llvm-objdump-stripped" />
      <config projectName="LLVM" targetName="install-LLVMSparcDisassembler-stripped" />
      <config projectName="LLVM" targetName="LLVMFrontendOpenMP" />
      <config projectName="LLVM" targetName="check-llvm-tools-yaml2obj-elf" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-elfabi" />
      <config projectName="LLVM" targetName="split-file" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-dsp" />
      <config projectName="LLVM" targetName="install-sanstats" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir-instrref" />
      <config projectName="LLVM" targetName="install-LLVMSystemZCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-znver1" />
      <config projectName="LLVM" targetName="check-llvm-tablegen-fixedlendecoderemitter" />
      <config projectName="LLVM" targetName="check-llvm-transforms-safestack" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-broadwell" />
      <config projectName="LLVM" targetName="install-LLVMInstrumentation" />
      <config projectName="LLVM" targetName="LinkerTests" />
      <config projectName="LLVM" targetName="install-LLVMInterfaceStub-stripped" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCDesc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-dce" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-znver2" />
      <config projectName="LLVM" targetName="LLVMXCoreInfo" />
      <config projectName="LLVM" targetName="install-llvm-lipo-stripped" />
      <config projectName="LLVM" targetName="LLVMSparcDisassembler" />
      <config projectName="LLVM" targetName="install-LLVMCore-stripped" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-pdb-dia" />
      <config projectName="LLVM" targetName="LLVMARMUtils" />
      <config projectName="LLVM" targetName="install-LLVMSystemZInfo-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-partialinlining" />
      <config projectName="LLVM" targetName="check-llvm-filecheck-comment" />
      <config projectName="LLVM" targetName="check-llvm-mc-x86-alignedbundling" />
      <config projectName="LLVM" targetName="LLVMMSP430Info" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-sparc" />
      <config projectName="LLVM" targetName="check-llvm-bitcode" />
      <config projectName="LLVM" targetName="check-llvm-analysis-divergenceanalysis-amdgpu" />
      <config projectName="LLVM" targetName="install-llvm-rc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-float2int" />
      <config projectName="LLVM" targetName="llvm-split" />
      <config projectName="LLVM" targetName="DebugInfoPDBTests" />
      <config projectName="LLVM" targetName="check-llvm-codegen" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-coff-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-sccp" />
      <config projectName="LLVM" targetName="check-llvm-lto-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-amdgpu" />
      <config projectName="LLVM" targetName="install-llvm-dwarfdump" />
      <config projectName="LLVM" targetName="llvm-extract" />
      <config projectName="LLVM" targetName="install-LLVMAsmPrinter" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-powerpc" />
      <config projectName="LLVM" targetName="llvm-lto" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-msp430" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-arm" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-gsymutil-x86" />
      <config projectName="LLVM" targetName="llvm-xray" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUInfo-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-ginv" />
      <config projectName="LLVM" targetName="check-llvm-bindings-llvm-c-x86" />
      <config projectName="LLVM" targetName="install-LLVMMCJIT" />
      <config projectName="LLVM" targetName="check-llvm-transforms-fixirreducible" />
      <config projectName="LLVM" targetName="install-LLVMBPFAsmParser-stripped" />
      <config projectName="LLVM" targetName="install-LLVMIRReader-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-powerpc" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUUtils" />
      <config projectName="LLVM" targetName="check-llvm-transforms-hardwareloops" />
      <config projectName="LLVM" targetName="check-llvm-analysis-ddg" />
      <config projectName="LLVM" targetName="install-LLVMTableGen-stripped" />
      <config projectName="LLVM" targetName="LLVMSystemZAsmParser" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXDesc" />
      <config projectName="LLVM" targetName="install-LLVMObjectYAML" />
      <config projectName="LLVM" targetName="install-SancusModuleCreator" />
      <config projectName="LLVM" targetName="cmake-exports" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-aarch64-falkor" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand-arm" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objcopy-coff" />
      <config projectName="LLVM" targetName="prepare-check-lit" />
      <config projectName="LLVM" targetName="check-llvm-codegen-hexagon-vect" />
      <config projectName="LLVM" targetName="install-LLVMHelloNew-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-webassembly" />
      <config projectName="LLVM" targetName="install-llvm-as-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-hexagon-autohvx" />
      <config projectName="LLVM" targetName="LLVMJITLink" />
      <config projectName="LLVM" targetName="install-LLVMMipsDesc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-globalisel-irtranslator" />
      <config projectName="LLVM" targetName="check-llvm-transforms-attributor-reduced" />
      <config projectName="LLVM" targetName="LLVMGlobalISel" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-hotcoldsplit" />
      <config projectName="LLVM" targetName="check-llvm-transforms-metarenamer" />
      <config projectName="LLVM" targetName="check-llvm-mc-sparc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowerexpectintrinsic" />
      <config projectName="LLVM" targetName="check-llvm-thinlto-x86" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-inline-asm" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-features" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-lto" />
      <config projectName="LLVM" targetName="check-llvm-bindings-llvm-c" />
      <config projectName="LLVM" targetName="DebugInfoCodeViewTests" />
      <config projectName="LLVM" targetName="check-llvm-tablegen-common" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-virt" />
      <config projectName="LLVM" targetName="LLVMFrontendTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-mips" />
      <config projectName="LLVM" targetName="check-llvm-transforms-separateconstoffsetfromgep" />
      <config projectName="LLVM" targetName="ProfileDataTests" />
      <config projectName="LLVM" targetName="install-LLVMFileCheck" />
      <config projectName="LLVM" targetName="PipSqueak" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-gsymutil" />
      <config projectName="LLVM" targetName="install-llvm-jitlink-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-aarch64" />
      <config projectName="LLVM" targetName="LLVMAArch64Desc" />
      <config projectName="LLVM" targetName="FileCheck" />
      <config projectName="LLVM" targetName="SystemZCommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-mc-amdgpu-regression" />
      <config projectName="LLVM" targetName="install-llvm-libraries" />
      <config projectName="LLVM" targetName="check-llvm-object-lanai" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-intrinsics" />
      <config projectName="LLVM" targetName="install-LLVMOrcJIT-stripped" />
      <config projectName="LLVM" targetName="LLVMDebugInfoMSF" />
      <config projectName="LLVM" targetName="check-llvm-transforms-nameanonglobals" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-longbranch" />
      <config projectName="LLVM" targetName="check-llvm-analysis-valuetracking" />
      <config projectName="LLVM" targetName="llvm-libraries" />
      <config projectName="LLVM" targetName="LLVMMC" />
      <config projectName="LLVM" targetName="install-LLVMRISCVDisassembler-stripped" />
      <config projectName="LLVM" targetName="HowToUseJIT" />
      <config projectName="LLVM" targetName="install-LLVMipo" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-sandybridge" />
      <config projectName="LLVM" targetName="llvm_vcsrevision_h" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowermatrixintrinsics" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopreroll" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-generic" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-symbolizer-pdb" />
      <config projectName="LLVM" targetName="check-llvm-codegen-webassembly" />
      <config projectName="LLVM" targetName="BugpointPasses" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-octeonp" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips32r3" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips32r6" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-addresssanitizer-x86" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips32r5" />
      <config projectName="LLVM" targetName="opt" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopidiom-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-hotcoldsplit-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowerconstantintrinsics" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-analysis-ivusers" />
      <config projectName="LLVM" targetName="LLVMSparcCodeGen" />
      <config projectName="LLVM" targetName="install-LLVMLibDriver" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips32r2" />
      <config projectName="LLVM" targetName="install-llvm-reduce-stripped" />
      <config projectName="LLVM" targetName="check-llvm-demangle" />
      <config projectName="LLVM" targetName="install-llvm-install-name-tool-stripped" />
      <config projectName="LLVM" targetName="LLVMFrontendOpenACC" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce-power" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-msp430" />
      <config projectName="LLVM" targetName="llvm-dwarfdump" />
      <config projectName="LLVM" targetName="install-llvm-size-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips" />
      <config projectName="LLVM" targetName="OrcV2CBindingsBasicUsage" />
      <config projectName="LLVM" targetName="check-llvm-codegen-thumb2" />
      <config projectName="LLVM" targetName="check-llvm-transforms-straightlinestrengthreduce-x86" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-calling-conv-c" />
      <config projectName="LLVM" targetName="check-llvm-lto" />
      <config projectName="LLVM" targetName="check-llvm-analysis-loopnestanalysis" />
      <config projectName="LLVM" targetName="check-llvm-mc-x86-amx" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-lib" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-lto2-x86" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-readobj-elf-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-hexagon" />
      <config projectName="LLVM" targetName="install-llvm-lto-stripped" />
      <config projectName="LLVM" targetName="LLVMHexagonInfo" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand-x86" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-xray" />
      <config projectName="LLVM" targetName="LLVMARMDisassembler" />
      <config projectName="LLVM" targetName="LLVMPowerPCAsmParser" />
      <config projectName="LLVM" targetName="LLVMPasses" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-isel-fuzzer" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips64r6" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-micromips32r6" />
      <config projectName="LLVM" targetName="install-LLVMLTO" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips64r5" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips64r3" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips64r2" />
      <config projectName="LLVM" targetName="install-LLVMSystemZAsmParser-stripped" />
      <config projectName="LLVM" targetName="install-LLVMLanaiAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-alignmentfromassumptions" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-split" />
      <config projectName="LLVM" targetName="check-llvm-transforms-looploadelim" />
      <config projectName="LLVM" targetName="LLVMAArch64Utils" />
      <config projectName="LLVM" targetName="check-llvm-lto-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-entryexitinstrumenter" />
      <config projectName="LLVM" targetName="check-llvm-analysis-legacydivergenceanalysis" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-lit" />
      <config projectName="LLVM" targetName="install-LLVMRISCVDesc" />
      <config projectName="LLVM" targetName="BinaryFormatTests" />
      <config projectName="LLVM" targetName="check-llvm-analysis-globalsmodref" />
      <config projectName="LLVM" targetName="DsymutilTableGen" />
      <config projectName="LLVM" targetName="llvm-lib" />
      <config projectName="LLVM" targetName="install-LLVMDWARFLinker-stripped" />
      <config projectName="LLVM" targetName="RemarksTests" />
      <config projectName="LLVM" targetName="install-LLVMObject" />
      <config projectName="LLVM" targetName="install-llc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-vectorcombine" />
      <config projectName="LLVM" targetName="install-LLVMFrontendOpenMP-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-xray-x86" />
      <config projectName="LLVM" targetName="LLVMExegesisARMTests" />
      <config projectName="LLVM" targetName="LLVMSparcAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-codegen-hexagon" />
      <config projectName="LLVM" targetName="install-llvm-cxxfilt-stripped" />
      <config projectName="LLVM" targetName="install-LLVMLTO-stripped" />
      <config projectName="LLVM" targetName="install-llvm-readobj" />
      <config projectName="LLVM" targetName="ocaml_all" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-webassembly" />
      <config projectName="LLVM" targetName="LLVMX86Disassembler" />
      <config projectName="LLVM" targetName="install-llvm-lto2-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-separateconstoffsetfromgep-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-analysis-stacksafetyanalysis" />
      <config projectName="LLVM" targetName="check-llvm-tools-obj2yaml-coff" />
      <config projectName="LLVM" targetName="test-depends" />
      <config projectName="LLVM" targetName="install-LLVMMipsDesc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-webassembly" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXCodeGen-stripped" />
      <config projectName="LLVM" targetName="TestPlugin" />
      <config projectName="LLVM" targetName="llvm-microsoft-demangle-fuzzer" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-examples-irtransforms" />
      <config projectName="LLVM" targetName="OrcV2CBindingsReflectProcessSymbols" />
      <config projectName="LLVM" targetName="LLVMSelectionDAG" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-memorysanitizer-powerpc" />
      <config projectName="LLVM" targetName="install-LLVMMSP430CodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-eliminateavailableexternally" />
      <config projectName="LLVM" targetName="install-LLVMBPFCodeGen-stripped" />
      <config projectName="LLVM" targetName="install-LLVMDlltoolDriver" />
      <config projectName="LLVM" targetName="LLVMLanaiDisassembler" />
      <config projectName="LLVM" targetName="LLVMInstrumentation" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-llvm-objectyaml-wasm" />
      <config projectName="LLVM" targetName="install-LLVMAsmPrinter-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-msa" />
      <config projectName="LLVM" targetName="install-llvm-libraries-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowerswitch" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand-sparc" />
      <config projectName="LLVM" targetName="LLVMPowerPCInfo" />
      <config projectName="LLVM" targetName="install-llvm-install-name-tool" />
      <config projectName="LLVM" targetName="check-llvm-analysis-divergenceanalysis" />
      <config projectName="LLVM" targetName="llvm-modextract" />
      <config projectName="LLVM" targetName="install-LLVMLanaiInfo-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-globalisel-legalizer" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-nvptx" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll" />
      <config projectName="LLVM" targetName="check-llvm-mc-hexagon" />
      <config projectName="LLVM" targetName="BitstreamTests" />
      <config projectName="LLVM" targetName="check-llvm-analysis-phivalues" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-arm" />
      <config projectName="LLVM" targetName="check-llvm-analysis-functionpropertiesanalysis" />
      <config projectName="LLVM" targetName="install-sancov-stripped" />
      <config projectName="LLVM" targetName="LLVMExegesisPowerPC" />
      <config projectName="LLVM" targetName="install-LLVMX86Disassembler" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUInfo" />
      <config projectName="LLVM" targetName="LLVMX86Desc" />
      <config projectName="LLVM" targetName="install-LLVMRISCVUtils" />
      <config projectName="LLVM" targetName="gtest" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-orclazy" />
      <config projectName="LLVM" targetName="install-Remarks-stripped" />
      <config projectName="LLVM" targetName="install-llvm-objcopy" />
      <config projectName="LLVM" targetName="check-llvm-transforms-gvn" />
      <config projectName="LLVM" targetName="install-LLVMXCoreDesc" />
      <config projectName="LLVM" targetName="install-llvm-libtool-darwin" />
      <config projectName="LLVM" targetName="install-llvm-exegesis-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-bdver2" />
      <config projectName="LLVM" targetName="check-llvm-transforms-scalarizer" />
      <config projectName="LLVM" targetName="check-llvm-tools-updatetestchecks-update_llc_test_checks" />
      <config projectName="LLVM" targetName="LLVMCFIVerify" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline" />
      <config projectName="LLVM" targetName="install-LLVMARMDisassembler" />
      <config projectName="LLVM" targetName="LLVMWebAssemblyCodeGen" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-earlycse-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-codegen-lanai" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-exegesis-x86-lbr" />
      <config projectName="LLVM" targetName="check-llvm-transforms-speculatearoundphis" />
      <config projectName="LLVM" targetName="install-LLVMXCoreCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-integration" />
      <config projectName="LLVM" targetName="install-LLVMXCoreInfo-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand-amdgpu" />
      <config projectName="LLVM" targetName="install-llvm-extract-stripped" />
      <config projectName="LLVM" targetName="install-LLVMX86CodeGen" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-earlycse-x86" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-nm-arm" />
      <config projectName="LLVM" targetName="SpeculativeJIT" />
      <config projectName="LLVM" targetName="check-llvm-analysis-cflaliasanalysis-steensgaard" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCAsmParser" />
      <config projectName="LLVM" targetName="LLVMMCParser" />
      <config projectName="LLVM" targetName="llvm-cov" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-arm" />
      <config projectName="LLVM" targetName="install-LLVMExecutionEngine-stripped" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cov" />
      <config projectName="LLVM" targetName="check-llvm-analysis-lazycallgraph" />
      <config projectName="LLVM" targetName="check-llvm-mc-aarch64-sve" />
      <config projectName="LLVM" targetName="MITests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-safestack-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMAArch64AsmParser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-transforms-adddiscriminators" />
      <config projectName="LLVM" targetName="install-LLVMGlobalISel" />
      <config projectName="LLVM" targetName="check-llvm-analysis-loopinfo" />
      <config projectName="LLVM" targetName="check-llvm-bindings" />
      <config projectName="LLVM" targetName="install-llvm-lto2" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-globalisel-mips-prelegalizer-combiner" />
      <config projectName="LLVM" targetName="install-llvm-link-stripped" />
      <config projectName="LLVM" targetName="SymbolizerOptsTableGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-coroutines" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-sparc" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-symbolizer" />
      <config projectName="LLVM" targetName="check-llvm-transforms-structurizecfg-workarounds" />
      <config projectName="LLVM" targetName="install-LLVMARMDesc-stripped" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUDisassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-dspr2" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-relax-mem" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-strings" />
      <config projectName="LLVM" targetName="install-llvm-dlltool" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-hexagon" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-analysis-postdominators" />
      <config projectName="LLVM" targetName="llvm-bcanalyzer" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objcopy-macho" />
      <config projectName="LLVM" targetName="install-llvm-diff-stripped" />
      <config projectName="LLVM" targetName="llvm-test-depends" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-nvptx" />
      <config projectName="LLVM" targetName="install-llvm-opt-report" />
      <config projectName="LLVM" targetName="install-LLVMBitWriter" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUDesc-stripped" />
      <config projectName="LLVM" targetName="LLVMLinker" />
      <config projectName="LLVM" targetName="check-llvm-transforms-pgoprofile-x86" />
      <config projectName="LLVM" targetName="check-llvm-mc-asmparser" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-readobj-macho" />
      <config projectName="LLVM" targetName="install-llvm-c-test" />
      <config projectName="LLVM" targetName="OptsTestTableGen" />
      <config projectName="LLVM" targetName="check-lit" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-xcoff" />
      <config projectName="LLVM" targetName="check-llvm-transforms-vectorcombine-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-profdata" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-nm-x86" />
      <config projectName="LLVM" targetName="install-LLVMLibDriver-stripped" />
      <config projectName="LLVM" targetName="install-LLVMCoroutines" />
      <config projectName="LLVM" targetName="check-llvm-analysis-basicaa" />
      <config projectName="LLVM" targetName="check-llvm-transforms-mem2reg" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-aarch64" />
      <config projectName="LLVM" targetName="install-llvm-cat" />
      <config projectName="LLVM" targetName="install-LLVMMipsCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-macho-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-tools-sancov-aarch64" />
      <config projectName="LLVM" targetName="LLVMOrcError" />
      <config projectName="LLVM" targetName="install-LLVMX86Desc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-aarch64" />
      <config projectName="LLVM" targetName="LLVMInstCombine" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunswitch-amdgpu" />
      <config projectName="LLVM" targetName="install-LLVMRISCVCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-aarch64" />
      <config projectName="LLVM" targetName="distribution" />
      <config projectName="LLVM" targetName="install-LLVMHelloNew" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-jitlink-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-bindings-llvm-c-arm" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-msa" />
      <config projectName="LLVM" targetName="LLVMMCA" />
      <config projectName="LLVM" targetName="install-llvm-gsymutil-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-eva" />
      <config projectName="LLVM" targetName="LLVMAggressiveInstCombine" />
      <config projectName="LLVM" targetName="check-llvm-transforms-looprotate" />
      <config projectName="LLVM" targetName="install-opt-stripped" />
      <config projectName="LLVM" targetName="install-bugpoint-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mt" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-powerpc" />
      <config projectName="LLVM" targetName="InstCombineTableGen" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwarfdump-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-x86" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-exegesis-aarch64" />
      <config projectName="LLVM" targetName="LLVMRemarks" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instsimplify" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-globalisel" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-x86" />
      <config projectName="LLVM" targetName="install-SancusModuleCreator-stripped" />
      <config projectName="LLVM" targetName="LLVMXCoreCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-sampleprofile" />
      <config projectName="LLVM" targetName="check-llvm-mc-macho-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inferfunctionattrs" />
      <config projectName="LLVM" targetName="check-llvm-analysis-lazyvalueanalysis" />
      <config projectName="LLVM" targetName="UnitTests" />
      <config projectName="LLVM" targetName="install-LLVMCoverage" />
      <config projectName="LLVM" targetName="install-LLVMCoverage-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-reg2mem" />
      <config projectName="LLVM" targetName="check-llvm-transforms-mergeicmps-x86" />
      <config projectName="LLVM" targetName="llvm-libtool-darwin" />
      <config projectName="LLVM" targetName="ParallelJIT" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cfi-verify-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMSystemZInfo" />
      <config projectName="LLVM" targetName="LLVMCodeGen" />
      <config projectName="LLVM" targetName="install-LLVMWebAssemblyDesc-stripped" />
      <config projectName="LLVM" targetName="install-llvm-strip" />
      <config projectName="LLVM" targetName="install-LLVMOrcJIT" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-memorysanitizer-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-pseudo" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoMSF" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoGSYM" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-generic" />
      <config projectName="LLVM" targetName="install-LLVMMCA" />
      <config projectName="LLVM" targetName="check-llvm-tools-updatetestchecks-update_test_checks" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-skylakeclient" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-amdgpu" />
      <config projectName="LLVM" targetName="HexagonCommonTableGen" />
      <config projectName="LLVM" targetName="LLVMSparcInfo" />
      <config projectName="LLVM" targetName="check-llvm-transforms-interleavedaccess" />
      <config projectName="LLVM" targetName="llvm-cxxdump" />
      <config projectName="LLVM" targetName="install-LLVMSystemZDesc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-thinlto" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-fast-isel" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-globalisel-instruction-select" />
      <config projectName="LLVM" targetName="LLVMWebAssemblyInfo" />
      <config projectName="LLVM" targetName="check-llvm-transforms-mergeicmps" />
      <config projectName="LLVM" targetName="srpm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-globalmerge" />
      <config projectName="LLVM" targetName="AArch64Tests" />
      <config projectName="LLVM" targetName="LLVMAnalysis" />
      <config projectName="LLVM" targetName="install-LLVMCFGuard" />
      <config projectName="LLVM" targetName="check-llvm-transforms-deadstoreelimination" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simpleloopunswitch" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-lanai" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopsimplifycfg" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mips" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-hwaddresssanitizer" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-indirect-jump-hazard" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopversioning" />
      <config projectName="LLVM" targetName="check-llvm-codegen-hexagon-intrinsics" />
      <config projectName="LLVM" targetName="install-split-file" />
      <config projectName="LLVM" targetName="check-llvm-codegen-amdgpu-globalisel" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCInfo-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-lto" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-x86" />
      <config projectName="LLVM" targetName="UtilsTests" />
      <config projectName="LLVM" targetName="LLVMIRReader" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-mcjit-remote" />
      <config projectName="LLVM" targetName="check-llvm-transforms-divrempairs-x86" />
      <config projectName="LLVM" targetName="install-llvm-c-test-stripped" />
      <config projectName="LLVM" targetName="LLVMipo" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-amdgpu" />
      <config projectName="LLVM" targetName="llvm-cat" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-aarch64" />
      <config projectName="LLVM" targetName="install-llvm-bitcode-strip-stripped" />
      <config projectName="LLVM" targetName="check-llvm-analysis-mustexecute" />
      <config projectName="LLVM" targetName="DemangleTests" />
      <config projectName="LLVM" targetName="install-llvm-bcanalyzer-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand-riscv" />
      <config projectName="LLVM" targetName="X86Tests" />
      <config projectName="LLVM" targetName="check-llvm-analysis-loopcacheanalysis" />
      <config projectName="LLVM" targetName="check-llvm-transforms-safestack-arm" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-systemz" />
      <config projectName="LLVM" targetName="DebugInfoGSYMTests" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dlltool" />
      <config projectName="LLVM" targetName="install-llvm-stress-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-x86" />
      <config projectName="LLVM" targetName="check-llvm-analysis-assumptioncache" />
      <config projectName="LLVM" targetName="BugpointPasses_exports" />
      <config projectName="LLVM" targetName="install-LLVMWebAssemblyAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-x86" />
      <config projectName="LLVM" targetName="install-llvm-readobj-stripped" />
      <config projectName="LLVM" targetName="intrinsics_gen" />
      <config projectName="LLVM" targetName="check-llvm-mc-elf-arm" />
      <config projectName="LLVM" targetName="check-llvm-mc-coff" />
      <config projectName="LLVM" targetName="check-llvm-transforms-divrempairs-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopdeletion" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-xray-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCDisassembler-stripped" />
      <config projectName="LLVM" targetName="install-LLVMX86Info" />
      <config projectName="LLVM" targetName="llvm-ar" />
      <config projectName="LLVM" targetName="llvm-as" />
      <config projectName="LLVM" targetName="LLVMAArch64Disassembler" />
      <config projectName="LLVM" targetName="check-llvm-transforms-hardwareloops-arm" />
      <config projectName="LLVM" targetName="LLVMAMDGPUUtils" />
      <config projectName="LLVM" targetName="llvm-install-name-tool" />
      <config projectName="LLVM" targetName="check-llvm-codegen-x86-avx512-shuffles" />
      <config projectName="LLVM" targetName="install-LLVMWindowsManifest" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instsimplify-constprop-amdgpu" />
      <config projectName="LLVM" targetName="LLVMAVRCodeGen" />
      <config projectName="LLVM" targetName="LLVMExegesis" />
      <config projectName="LLVM" targetName="LLVMMipsCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instsimplify-constprop-webassembly" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Utils" />
      <config projectName="LLVM" targetName="install-llvm-modextract-stripped" />
      <config projectName="LLVM" targetName="install-LLVMJITLink-stripped" />
      <config projectName="LLVM" targetName="install-LLVMAMDGPUDesc" />
      <config projectName="LLVM" targetName="check-llvm-symbolrewriter" />
      <config projectName="LLVM" targetName="RcTableGen" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-compactbranches" />
      <config projectName="LLVM" targetName="check-llvm-analysis-profilesummary" />
      <config projectName="LLVM" targetName="check-llvm-transforms-attributor-argumentpromotion-x86" />
      <config projectName="LLVM" targetName="install-LLVMARMInfo-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-yaml2obj-coff" />
      <config projectName="LLVM" targetName="check-llvm-object-mips" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCInfo" />
      <config projectName="LLVM" targetName="install-LLVMMipsCodeGen-stripped" />
      <config projectName="LLVM" targetName="DynamicLibraryTests" />
      <config projectName="LLVM" targetName="install-LLVMAVRCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-scalarizemaskedmemintrin-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce-x86" />
      <config projectName="LLVM" targetName="check-llvm-objectyaml-elf" />
      <config projectName="LLVM" targetName="check-llvm-bindings-go" />
      <config projectName="LLVM" targetName="install-opt-viewer-stripped" />
      <config projectName="LLVM" targetName="install-LLVMCore" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce" />
      <config projectName="LLVM" targetName="check-llvm-mc-riscv" />
      <config projectName="LLVM" targetName="install-opt-viewer" />
      <config projectName="LLVM" targetName="install-LLVMInterpreter-stripped" />
      <config projectName="LLVM" targetName="LLVMNVPTXDesc" />
      <config projectName="LLVM" targetName="install-llvm-profdata" />
      <config projectName="LLVM" targetName="install-LLVMMipsDisassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-analysis-dominators" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoMSF-stripped" />
      <config projectName="LLVM" targetName="LLVMDebugInfoCodeView" />
      <config projectName="LLVM" targetName="LLVMExegesisX86" />
      <config projectName="LLVM" targetName="check-llvm-tools-not" />
      <config projectName="LLVM" targetName="LineEditorTests" />
      <config projectName="LLVM" targetName="check-llvm-mc-riscv-rvv" />
      <config projectName="LLVM" targetName="check-llvm-transforms-syntheticcountspropagation" />
      <config projectName="LLVM" targetName="check-llvm-analysis-aliasset" />
      <config projectName="LLVM" targetName="LLVMAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-support" />
      <config projectName="LLVM" targetName="check-llvm-transforms-branchfolding" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-linker" />
      <config projectName="LLVM" targetName="TableGenTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-pgoprofile" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowerguardintrinsic" />
      <config projectName="LLVM" targetName="install-LLVMMSP430Disassembler" />
      <config projectName="LLVM" targetName="install-llvm-split-stripped" />
      <config projectName="LLVM" targetName="install-llvm-ar-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-arc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-arm" />
      <config projectName="LLVM" targetName="check-llvm-mc-msp430" />
      <config projectName="LLVM" targetName="SecondLib" />
      <config projectName="LLVM" targetName="check-llvm-mc-aarch64-sve2" />
      <config projectName="LLVM" targetName="TextAPITests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-rewritestatepointsforgc" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-btver2" />
      <config projectName="LLVM" targetName="install-LLVMAVRDesc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-readobj" />
      <config projectName="LLVM" targetName="install-llvm-modextract" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwp" />
      <config projectName="LLVM" targetName="install-LLVMAVRCodeGen" />
      <config projectName="LLVM" targetName="LLVMWebAssemblyAsmParser" />
      <config projectName="LLVM" targetName="LLVMMipsInfo" />
      <config projectName="LLVM" targetName="install-LLVMBPFInfo" />
      <config projectName="LLVM" targetName="install-LLVMMC-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-yaml2obj" />
      <config projectName="LLVM" targetName="llvm-opt-fuzzer" />
      <config projectName="LLVM" targetName="install-llvm-mt-stripped" />
      <config projectName="LLVM" targetName="not" />
      <config projectName="LLVM" targetName="check-llvm-tools-split-file" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constanthoisting-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-thinltobitcodewriter" />
      <config projectName="LLVM" targetName="check-llvm-transforms-partiallyinlinelibcalls" />
      <config projectName="LLVM" targetName="check-llvm-tools-updatetestchecks" />
      <config projectName="LLVM" targetName="check-llvm-transforms-safestack-x86" />
      <config projectName="LLVM" targetName="check-llvm-analysis-branchprobabilityinfo" />
      <config projectName="LLVM" targetName="install-llvm-cat-stripped" />
      <config projectName="LLVM" targetName="llvm-elfabi" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-x86" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-jitlink" />
      <config projectName="LLVM" targetName="check-llvm-examples-kaleidoscope" />
      <config projectName="LLVM" targetName="LLVMObject" />
      <config projectName="LLVM" targetName="check-llvm-transforms-naryreassociate" />
      <config projectName="LLVM" targetName="install-LLVMAArch64CodeGen" />
      <config projectName="LLVM" targetName="install-LLVMMIRParser" />
      <config projectName="LLVM" targetName="check-llvm-tools-obj2yaml-minidump" />
      <config projectName="LLVM" targetName="llvm-locstats" />
      <config projectName="LLVM" targetName="install-LLVMBPFDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cov-gcov" />
      <config projectName="LLVM" targetName="llvm-lto2" />
      <config projectName="LLVM" targetName="check-llvm-transforms-deadstoreelimination-mssa-x86" />
      <config projectName="LLVM" targetName="install-LLVMXCoreDisassembler-stripped" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inferaddressspaces" />
      <config projectName="LLVM" targetName="install-LLVMRISCVCodeGen" />
      <config projectName="LLVM" targetName="install-llvm-readelf" />
      <config projectName="LLVM" targetName="check-llvm-tools-obj2yaml-elf-dwarf" />
      <config projectName="LLVM" targetName="check-llvm-lto-resolution" />
      <config projectName="LLVM" targetName="check-llvm-transforms-irce" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mt" />
      <config projectName="LLVM" targetName="LLVMAMDGPUDesc" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoDWARF" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips32" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-arm" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-link" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-size" />
      <config projectName="LLVM" targetName="check-llvm-transforms-objcarc" />
      <config projectName="LLVM" targetName="LLVMMSP430Desc" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-readobj-xcoff" />
      <config projectName="LLVM" targetName="check-llvm-analysis-cflaliasanalysis-andersen" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cxxmap" />
      <config projectName="LLVM" targetName="check-llvm-codegen-hexagon-pipeliner" />
      <config projectName="LLVM" targetName="install-LLVMRemarks-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-interleavedaccess-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMBPFCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-typepromotion" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-hexagon" />
      <config projectName="LLVM" targetName="DllOptionsTableGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-globalopt" />
      <config projectName="LLVM" targetName="install-LLVMX86CodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-msp430" />
      <config projectName="LLVM" targetName="ARMTests" />
      <config projectName="LLVM" targetName="check-llvm-codegen-arm-windows" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-opt-fuzzer" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-powerpc" />
      <config projectName="LLVM" targetName="LLVMLanaiCodeGen" />
      <config projectName="LLVM" targetName="bugpoint" />
      <config projectName="LLVM" targetName="AsmParserTests" />
      <config projectName="LLVM" targetName="LLVMBPFCodeGen" />
      <config projectName="LLVM" targetName="llvm-config" />
      <config projectName="LLVM" targetName="check-llvm-filecheck" />
      <config projectName="LLVM" targetName="install-LLVMSystemZDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-riscv" />
      <config projectName="LLVM" targetName="install-LLVMInstCombine" />
      <config projectName="LLVM" targetName="install-llvm-profdata-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce-arm" />
      <config projectName="LLVM" targetName="LLVMBitReader" />
      <config projectName="LLVM" targetName="install-LLVMDWARFLinker" />
      <config projectName="LLVM" targetName="check-llvm-analysis-irsimilarityidentifier" />
      <config projectName="LLVM" targetName="BrainF" />
      <config projectName="LLVM" targetName="FuzzMutateTests" />
      <config projectName="LLVM" targetName="install-LLVMSparcAsmParser-stripped" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXDesc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-lipo" />
      <config projectName="LLVM" targetName="llvm-nm" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-pdbutil" />
      <config projectName="LLVM" targetName="install-LLVMMIRParser-stripped" />
      <config projectName="LLVM" targetName="install-LLVMXCoreCodeGen-stripped" />
      <config projectName="LLVM" targetName="LLVMRISCVInfo" />
      <config projectName="LLVM" targetName="llvm-mt" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-ifs" />
      <config projectName="LLVM" targetName="install-llvm-rtdyld-stripped" />
      <config projectName="LLVM" targetName="WebAssemblyCommonTableGen" />
      <config projectName="LLVM" targetName="install-llvm-symbolizer" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-micromips-dsp" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips64" />
      <config projectName="LLVM" targetName="LLVMLanaiInfo" />
      <config projectName="LLVM" targetName="install-LLVMWebAssemblyInfo" />
      <config projectName="LLVM" targetName="llvm-mc" />
      <config projectName="LLVM" targetName="LLVMLTO" />
      <config projectName="LLVM" targetName="check-llvm-tools-sancov" />
      <config projectName="LLVM" targetName="install-LLVMMSP430Desc" />
      <config projectName="LLVM" targetName="PluginsTests" />
      <config projectName="LLVM" targetName="install-llvm-mca-stripped" />
      <config projectName="LLVM" targetName="llvm-isel-fuzzer" />
      <config projectName="LLVM" targetName="llvm-ml" />
      <config projectName="LLVM" targetName="install-LLVMExecutionEngine" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objcopy-wasm" />
      <config projectName="LLVM" targetName="install-LLVMMSP430AsmParser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-indvarsimplify" />
      <config projectName="LLVM" targetName="check-llvm-transforms-hellonew" />
      <config projectName="LLVM" targetName="LLVMXCoreDesc" />
      <config projectName="LLVM" targetName="Kaleidoscope" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoCodeView" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-micromips" />
      <config projectName="LLVM" targetName="install-LLVMPasses" />
      <config projectName="LLVM" targetName="install-llvm-config" />
      <config projectName="LLVM" targetName="LLVMCoroutines" />
      <config projectName="LLVM" targetName="LLVMSystemZInfo" />
      <config projectName="LLVM" targetName="check-llvm-tools-obj2yaml-elf" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Disassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-argumentpromotion" />
      <config projectName="LLVM" targetName="llvm-headers" />
      <config projectName="LLVM" targetName="check-llvm-verifier-mips" />
      <config projectName="LLVM" targetName="check-llvm-transforms-indirectbrexpand" />
      <config projectName="LLVM" targetName="check-llvm-transforms-gvn-pre" />
      <config projectName="LLVM" targetName="LLVMSupport" />
      <config projectName="LLVM" targetName="check-llvm-jitlistener" />
      <config projectName="LLVM" targetName="check-llvm-analysis-legacydivergenceanalysis-nvptx" />
      <config projectName="LLVM" targetName="MipsCommonTableGen" />
      <config projectName="LLVM" targetName="install-LLVMTarget-stripped" />
      <config projectName="LLVM" targetName="install-sancov" />
      <config projectName="LLVM" targetName="install-LLVMAArch64AsmParser-stripped" />
      <config projectName="LLVM" targetName="PowerPCCommonTableGen" />
      <config projectName="LLVM" targetName="llvm-rc" />
      <config projectName="LLVM" targetName="count" />
      <config projectName="LLVM" targetName="install-LLVMAnalysis" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel" />
      <config projectName="LLVM" targetName="install-LLVMMCDisassembler" />
      <config projectName="LLVM" targetName="install-llvm-symbolizer-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-sroa" />
      <config projectName="LLVM" targetName="install-llvm-headers-stripped" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-boundschecking" />
      <config projectName="LLVM" targetName="install-LLVMBinaryFormat" />
      <config projectName="LLVM" targetName="check-llvm-transforms-tailcallelim" />
      <config projectName="LLVM" targetName="check-llvm-analysis-memorydependenceanalysis" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir" />
      <config projectName="LLVM" targetName="check-llvm-integer" />
      <config projectName="LLVM" targetName="check-llvm-object-riscv" />
      <config projectName="LLVM" targetName="install-LLVMMSP430CodeGen" />
      <config projectName="LLVM" targetName="LLVMRISCVDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-cconv" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXInfo" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-dataflowsanitizer" />
      <config projectName="LLVM" targetName="check-llvm-tools-obj2yaml-macho" />
      <config projectName="LLVM" targetName="ScalarTests" />
      <config projectName="LLVM" targetName="install-LLVMHexagonDesc" />
      <config projectName="LLVM" targetName="LLVMBPFInfo" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-x86" />
      <config projectName="LLVM" targetName="install-LLVMInterpreter" />
      <config projectName="LLVM" targetName="install-LLVMFrontendOpenACC" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-ginv" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-exegesis" />
      <config projectName="LLVM" targetName="XCoreCommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-bdce" />
      <config projectName="LLVM" targetName="install-llvm-gsymutil" />
      <config projectName="LLVM" targetName="install-LLVMARMAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-mips" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-xcore" />
      <config projectName="LLVM" targetName="check-llvm-analysis-divergenceanalysis-nvptx" />
      <config projectName="LLVM" targetName="check-llvm-mc-bpf" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-xray-arm" />
      <config projectName="LLVM" targetName="check-llvm-analysis-loopaccessanalysis" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cfi-verify-x86" />
      <config projectName="LLVM" targetName="install-LLVMX86Disassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-arm" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-aarch64-cortex" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constanthoisting-riscv" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips" />
      <config projectName="LLVM" targetName="check-llvm-transforms-aggressiveinstcombine" />
      <config projectName="LLVM" targetName="check-llvm-mc-avr-out-of-range-fixups" />
      <config projectName="LLVM" targetName="check-llvm-other" />
      <config projectName="LLVM" targetName="LLVMAMDGPUDisassembler" />
      <config projectName="LLVM" targetName="install-LLVMX86Info-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-slm" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips64r6" />
      <config projectName="LLVM" targetName="check-llvm-transforms-licm-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips64r5" />
      <config projectName="LLVM" targetName="check-llvm-transforms-memcpyopt" />
      <config projectName="LLVM" targetName="AMDGPUCommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-lto-resolution-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constanthoisting-x86" />
      <config projectName="LLVM" targetName="install-LLVMBPFDisassembler-stripped" />
      <config projectName="LLVM" targetName="install-LLVMLanaiAsmParser" />
      <config projectName="LLVM" targetName="install-llvm-tblgen-stripped" />
      <config projectName="LLVM" targetName="install-dsymutil-stripped" />
      <config projectName="LLVM" targetName="opt-viewer" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips64r3" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips64r2" />
      <config projectName="LLVM" targetName="LLVMLanaiAsmParser" />
      <config projectName="LLVM" targetName="install-LLVMMCA-stripped" />
      <config projectName="LLVM" targetName="check-llvm-bugpoint" />
      <config projectName="LLVM" targetName="check-llvm-codegen-riscv" />
      <config projectName="LLVM" targetName="check-llvm-transforms-util-debugify" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-systemz" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-dspr2" />
      <config projectName="LLVM" targetName="check-llvm-transforms-argumentpromotion-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopinterchange" />
      <config projectName="LLVM" targetName="check-llvm-codegen-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-coff" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir" />
      <config projectName="LLVM" targetName="check-llvm-transforms-structurizecfg" />
      <config projectName="LLVM" targetName="install-LLVMObject-stripped" />
      <config projectName="LLVM" targetName="install-LLVMipo-stripped" />
      <config projectName="LLVM" targetName="install-LLVMBinaryFormat-stripped" />
      <config projectName="LLVM" targetName="llvm-stress" />
      <config projectName="LLVM" targetName="install-llvm-cfi-verify-stripped" />
      <config projectName="LLVM" targetName="install-LTO" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-cnmips" />
      <config projectName="LLVM" targetName="MSP430CommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-transforms-util" />
      <config projectName="LLVM" targetName="install-LLVMARMAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-webassembly" />
      <config projectName="LLVM" targetName="install-LLVMSystemZCodeGen-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-deadstoreelimination-mssa" />
      <config projectName="LLVM" targetName="LLVMOrcJIT" />
      <config projectName="LLVM" targetName="check-llvm-tools-dsymutil" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch2" />
      <config projectName="LLVM" targetName="LLVMFileCheck" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch3" />
      <config projectName="LLVM" targetName="ObjectYAMLTests" />
      <config projectName="LLVM" targetName="install-llvm-dis-stripped" />
      <config projectName="LLVM" targetName="install-LLVMMSP430Desc-stripped" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch4" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir-aarch64" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch5" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch6" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch7" />
      <config projectName="LLVM" targetName="LLVMPowerPCCodeGen" />
      <config projectName="LLVM" targetName="WebAssemblyTests" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch8" />
      <config projectName="LLVM" targetName="LLVMObjCARCOpts" />
      <config projectName="LLVM" targetName="Kaleidoscope-Ch9" />
      <config projectName="LLVM" targetName="check-llvm-mc-lanai" />
      <config projectName="LLVM" targetName="install-LLVMObjCARCOpts-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-yaml2obj-minidump" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-x86" />
      <config projectName="LLVM" targetName="MCJITTests" />
      <config projectName="LLVM" targetName="check-llvm-mc-aarch64" />
      <config projectName="LLVM" targetName="install-llvm-cov-stripped" />
      <config projectName="LLVM" targetName="install-llvm-elfabi" />
      <config projectName="LLVM" targetName="check-llvm-feature-operandbundles" />
      <config projectName="LLVM" targetName="check-llvm-mc-hexagon-instructions" />
      <config projectName="LLVM" targetName="install-llvm-nm-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-gold-powerpc" />
      <config projectName="LLVM" targetName="install-LLVMARMCodeGen" />
      <config projectName="LLVM" targetName="PowerPCTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-xcore" />
      <config projectName="LLVM" targetName="install-LLVMWebAssemblyCodeGen-stripped" />
      <config projectName="LLVM" targetName="install-LLVMWebAssemblyInfo-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-crossdsocfi" />
      <config projectName="LLVM" targetName="LLVMMCDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-codegen-msp430" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowertypetests" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-x86" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-crc" />
      <config projectName="LLVM" targetName="LLVMAArch64AsmParser" />
      <config projectName="LLVM" targetName="install-llvm-diff" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-atomics" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-hexagon" />
      <config projectName="LLVM" targetName="install-LLVMTransformUtils-stripped" />
      <config projectName="LLVM" targetName="install-LLVMXRay" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Info" />
      <config projectName="LLVM" targetName="install-LLVMRISCVInfo-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-stripsymbols" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize" />
      <config projectName="LLVM" targetName="LLVMDlltoolDriver" />
      <config projectName="LLVM" targetName="check-llvm-mc-arm-windows" />
      <config projectName="LLVM" targetName="install-LLVMFrontendOpenMP" />
      <config projectName="LLVM" targetName="LLVMAMDGPUCodeGen" />
      <config projectName="LLVM" targetName="LLVMSystemZCodeGen" />
      <config projectName="LLVM" targetName="install-LLVMBitReader-stripped" />
      <config projectName="LLVM" targetName="install-LLVMMCParser-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-riscv-globalisel" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand-hexagon" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-arm" />
      <config projectName="LLVM" targetName="install-llvm-bcanalyzer" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instsimplify-constprop-arm" />
      <config projectName="LLVM" targetName="check-llvm-examples" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-x86-keylocker" />
      <config projectName="LLVM" targetName="HowToUseLLJIT" />
      <config projectName="LLVM" targetName="install-LLVMSparcDesc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-unifyfunctionexitnodes" />
      <config projectName="LLVM" targetName="check-llvm-analysis-demandedbits" />
      <config projectName="LLVM" targetName="X86CommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-mc-hexagon-packetrules" />
      <config projectName="LLVM" targetName="check-llvm-transforms-looppredication" />
      <config projectName="LLVM" targetName="check-llvm-mc-arm-alignedbundling" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-x86-amx" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMRuntimeDyld-stripped" />
      <config projectName="LLVM" targetName="install-LLVMWebAssemblyDisassembler-stripped" />
      <config projectName="LLVM" targetName="benchmark_main" />
      <config projectName="LLVM" targetName="llvm-readelf" />
      <config projectName="LLVM" targetName="check-llvm-analysis-delinearization" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-micromips32r6" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-micromips32r3" />
      <config projectName="LLVM" targetName="check-llvm-other-x86" />
      <config projectName="LLVM" targetName="BitcodeTests" />
      <config projectName="LLVM" targetName="check-llvm-verifier" />
      <config projectName="LLVM" targetName="install-llvm-tblgen" />
      <config projectName="LLVM" targetName="check-llvm-verifier-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-codegen-systemz" />
      <config projectName="LLVM" targetName="LLVMExecutionEngine" />
      <config projectName="LLVM" targetName="llvm-strip" />
      <config projectName="LLVM" targetName="LLVMExegesisX86Tests" />
      <config projectName="LLVM" targetName="check-llvm-tools-gold-x86-v1.16" />
      <config projectName="LLVM" targetName="check-llvm-tools-sanstats" />
      <config projectName="LLVM" targetName="LLVMDWARFLinker" />
      <config projectName="LLVM" targetName="check-llvm-analysis-cflaliasanalysis" />
      <config projectName="LLVM" targetName="install-llvm-lib-stripped" />
      <config projectName="LLVM" targetName="LLVMTableGen" />
      <config projectName="LLVM" targetName="LLVMAVRDesc" />
      <config projectName="LLVM" targetName="install-LLVMMipsAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-licm" />
      <config projectName="LLVM" targetName="install-LLVMMC" />
      <config projectName="LLVM" targetName="check-llvm-transforms-attributor-argumentpromotion" />
      <config projectName="LLVM" targetName="install-llvm-xray-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-amdgpu" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce-nvptx" />
      <config projectName="LLVM" targetName="check-llvm-verifier-systemz" />
      <config projectName="LLVM" targetName="install-LLVMPasses-stripped" />
      <config projectName="LLVM" targetName="install-llvm-config-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-nvptx" />
      <config projectName="LLVM" targetName="check-llvm-assembler" />
      <config projectName="LLVM" targetName="check-llvm-tools-gold-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-sink" />
      <config projectName="LLVM" targetName="check-llvm-transforms-jumpthreading" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwarfdump" />
      <config projectName="LLVM" targetName="check-llvm-transforms-blockextractor" />
      <config projectName="LLVM" targetName="install-LLVMSparcDisassembler" />
      <config projectName="LLVM" targetName="LLVMX86Info" />
      <config projectName="LLVM" targetName="LLVMMIRParser" />
      <config projectName="LLVM" targetName="check-llvm-transforms-interleavedaccess-arm" />
      <config projectName="LLVM" targetName="check-llvm-tools-gold-x86-v1.12" />
      <config projectName="LLVM" targetName="install-llvm-ml" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation" />
      <config projectName="LLVM" targetName="check-llvm-examples-orcv2examples" />
      <config projectName="LLVM" targetName="LLVMARMCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-webassembly" />
      <config projectName="LLVM" targetName="install-llvm-dwp-stripped" />
      <config projectName="LLVM" targetName="install-llvm-mc" />
      <config projectName="LLVM" targetName="install-dsymutil" />
      <config projectName="LLVM" targetName="check-llvm-mc-amdgpu" />
      <config projectName="LLVM" targetName="install-LLVMSymbolize" />
      <config projectName="LLVM" targetName="LLVMWindowsManifest" />
      <config projectName="LLVM" targetName="LLVMMSP430Disassembler" />
      <config projectName="LLVM" targetName="install-LLVMARMUtils" />
      <config projectName="LLVM" targetName="install-LLVMCFGuard-stripped" />
      <config projectName="LLVM" targetName="install-LLVMHexagonDisassembler" />
      <config projectName="LLVM" targetName="install-llvm-mt" />
      <config projectName="LLVM" targetName="install-LLVMFuzzMutate" />
      <config projectName="LLVM" targetName="install-llvm-dis" />
      <config projectName="LLVM" targetName="check-llvm-codegen-thumb" />
      <config projectName="LLVM" targetName="LLVMRISCVAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-ar" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-as" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunswitch" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-ranlib" />
      <config projectName="LLVM" targetName="check-llvm-mc-macho" />
      <config projectName="LLVM" targetName="FileCheckTests" />
      <config projectName="LLVM" targetName="install-LLVMSystemZDesc" />
      <config projectName="LLVM" targetName="check-llvm-analysis-regioninfo" />
      <config projectName="LLVM" targetName="llvm-diff" />
      <config projectName="LLVM" targetName="install-LLVMBPFDesc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-globaldce" />
      <config projectName="LLVM" targetName="install-llvm-extract" />
      <config projectName="LLVM" targetName="install-LLVMHexagonInfo-stripped" />
      <config projectName="LLVM" targetName="ObjcopyOptsTableGen" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-barcelona" />
      <config projectName="LLVM" targetName="LLVMRISCVCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-codegen-bpf" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-runtimedyld-mips" />
      <config projectName="LLVM" targetName="DynamicLibraryLib" />
      <config projectName="LLVM" targetName="LLVMBPFDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand-mips" />
      <config projectName="LLVM" targetName="sanstats" />
      <config projectName="LLVM" targetName="llvm-bitcode-strip" />
      <config projectName="LLVM" targetName="install-llvm-nm" />
      <config projectName="LLVM" targetName="llvm-symbolizer" />
      <config projectName="LLVM" targetName="omp_cpp" />
      <config projectName="LLVM" targetName="ExampleIRTransforms" />
      <config projectName="LLVM" targetName="RISCVCommonTableGen" />
      <config projectName="LLVM" targetName="install-LLVMTableGen" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-aarch64-exynos" />
      <config projectName="LLVM" targetName="LLVMOption" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-mc-macho-arm" />
      <config projectName="LLVM" targetName="check-llvm-safepointirverifier" />
      <config projectName="LLVM" targetName="SLLVM" />
      <config projectName="LLVM" targetName="llvm-strings" />
      <config projectName="LLVM" targetName="install-distribution" />
      <config projectName="LLVM" targetName="install-LLVMExtensions" />
      <config projectName="LLVM" targetName="InstallNameToolOptsTableGen" />
      <config projectName="LLVM" targetName="check-llvm-codegen-bpf-core" />
      <config projectName="LLVM" targetName="check-llvm-transforms-mergefunc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-unifyloopexits" />
      <config projectName="LLVM" targetName="install-llvm-rc" />
      <config projectName="LLVM" targetName="install-LLVMPowerPCDisassembler" />
      <config projectName="LLVM" targetName="LLVMExtensions" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-readobj-coff" />
      <config projectName="LLVM" targetName="check-llvm-executionengine-jitlink-x86" />
      <config projectName="LLVM" targetName="install-LLVMSparcInfo-stripped" />
      <config projectName="LLVM" targetName="gtest_main" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-generic" />
      <config projectName="LLVM" targetName="check-llvm-executionengine" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-atom" />
      <config projectName="LLVM" targetName="check-llvm-codegen-riscv-intrinsics" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loadstorevectorizer-amdgpu" />
      <config projectName="LLVM" targetName="install-LLVMRemarks" />
      <config projectName="LLVM" targetName="check-llvm-transforms-interleavedaccess-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-newgvn" />
      <config projectName="LLVM" targetName="install-LLVMLanaiDesc-stripped" />
      <config projectName="LLVM" targetName="install-LLVMLanaiDesc" />
      <config projectName="LLVM" targetName="check-llvm-codegen-systemz-large" />
      <config projectName="LLVM" targetName="install-llvm-opt-report-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-ml" />
      <config projectName="LLVM" targetName="install-LLVMFrontendOpenACC-stripped" />
      <config projectName="LLVM" targetName="LLVMNVPTXCodeGen" />
      <config projectName="LLVM" targetName="install-LLVMHexagonDisassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-atomicexpand-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-codegen-hexagon-loop-idiom" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mc" />
      <config projectName="LLVM" targetName="install-SLLVM-stripped" />
      <config projectName="LLVM" targetName="install-LLVMBitWriter-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-globalisel-llvm-ir" />
      <config projectName="LLVM" targetName="install-LLVMAsmParser" />
      <config projectName="LLVM" targetName="Bye" />
      <config projectName="LLVM" targetName="check-llvm-objectyaml" />
      <config projectName="LLVM" targetName="install-LLVMCodeGen" />
      <config projectName="LLVM" targetName="BuildingAJIT-Ch2" />
      <config projectName="LLVM" targetName="BuildingAJIT-Ch1" />
      <config projectName="LLVM" targetName="check-llvm-transforms-thinltobitcodewriter-x86" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-riscv" />
      <config projectName="LLVM" targetName="BuildingAJIT-Ch4" />
      <config projectName="LLVM" targetName="check-llvm-analysis" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cxxdump-x86" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-instrprofiling-x86" />
      <config projectName="LLVM" targetName="BuildingAJIT-Ch3" />
      <config projectName="LLVM" targetName="install-llvm-stress" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-micromips-dspr2" />
      <config projectName="LLVM" targetName="install-llvm-mc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-micromips-dspr3" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-aarch64-cyclone" />
      <config projectName="LLVM" targetName="SparcCommonTableGen" />
      <config projectName="LLVM" targetName="LLVMFuzzMutate" />
      <config projectName="LLVM" targetName="check-llvm-mc-x86-keylocker" />
      <config projectName="LLVM" targetName="check-llvm-transforms-forcedfunctionattrs" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-macho-arm" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-nm-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-codegen-sparc" />
      <config projectName="LLVM" targetName="LLVMObjectYAML" />
      <config projectName="LLVM" targetName="check-llvm-codegen-nvptx" />
      <config projectName="LLVM" targetName="LLVMBitstreamReader" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips4" />
      <config projectName="LLVM" targetName="ocaml_make_directory" />
      <config projectName="LLVM" targetName="install-LLVMAVRDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips3" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips2" />
      <config projectName="LLVM" targetName="check-llvm-transforms-calledvaluepropagation" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-mips1" />
      <config projectName="LLVM" targetName="install-llvm-mca" />
      <config projectName="LLVM" targetName="InterfaceStubTests" />
      <config projectName="LLVM" targetName="check-llvm-machineverifier" />
      <config projectName="LLVM" targetName="yaml-bench" />
      <config projectName="LLVM" targetName="check-llvm-transforms-vectorcombine-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-elf-mips" />
      <config projectName="LLVM" targetName="check-llvm-mc-asmparser-aarch64" />
      <config projectName="LLVM" targetName="dsymutil" />
      <config projectName="LLVM" targetName="LLVMTarget" />
      <config projectName="LLVM" targetName="install-llvm-cxxdump" />
      <config projectName="LLVM" targetName="install-LLVMInterfaceStub" />
      <config projectName="LLVM" targetName="install-LLVMAVRAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-llvm-analysis-scopednoaliasaa" />
      <config projectName="LLVM" targetName="ARMCommonTableGen" />
      <config projectName="LLVM" targetName="Remarks_exports" />
      <config projectName="LLVM" targetName="install-LLVMSystemZAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwarfdump-riscv" />
      <config projectName="LLVM" targetName="llvm-profdata" />
      <config projectName="LLVM" targetName="install-llvm-ifs-stripped" />
      <config projectName="LLVM" targetName="install-llvm-undname" />
      <config projectName="LLVM" targetName="check-llvm-analysis-callgraph" />
      <config projectName="LLVM" targetName="acc_cpp" />
      <config projectName="LLVM" targetName="check-llvm-transforms-constraintelimination" />
      <config projectName="LLVM" targetName="AArch64CommonTableGen" />
      <config projectName="LLVM" targetName="install-LLVMXCoreDisassembler" />
      <config projectName="LLVM" targetName="llvm-objcopy" />
      <config projectName="LLVM" targetName="check-llvm-mc-ve" />
      <config projectName="LLVM" targetName="check-llvm-transforms-wholeprogramdevirt" />
      <config projectName="LLVM" targetName="install-LLVMGlobalISel-stripped" />
      <config projectName="LLVM" targetName="install-LLVMBitstreamReader-stripped" />
      <config projectName="LLVM" targetName="LLVMBPFAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-unit" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objcopy-elf" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-exegesis-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowerinvoke" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-diff" />
      <config projectName="LLVM" targetName="check-llvm-mc-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-typepromotion-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instnamer" />
      <config projectName="LLVM" targetName="verify-uselistorder" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-ml" />
      <config projectName="LLVM" targetName="LLVMHelloNew" />
      <config projectName="LLVM" targetName="llvm-ranlib" />
      <config projectName="LLVM" targetName="install-LLVMX86AsmParser" />
      <config projectName="LLVM" targetName="install-LLVMXCoreInfo" />
      <config projectName="LLVM" targetName="LLVMHexagonCodeGen" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-skylakeserver" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cfi-verify-unsupported" />
      <config projectName="LLVM" targetName="install-LLVMRISCVAsmParser-stripped" />
      <config projectName="LLVM" targetName="LLVMSparcDesc" />
      <config projectName="LLVM" targetName="check-llvm-tools" />
      <config projectName="LLVM" targetName="OrcV2CBindingsAddObjectFile" />
      <config projectName="LLVM" targetName="install-llvm-strip-stripped" />
      <config projectName="LLVM" targetName="install-LLVMHexagonAsmParser" />
      <config projectName="LLVM" targetName="install-verify-uselistorder-stripped" />
      <config projectName="LLVM" targetName="DebugInfoDWARFTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopstrengthreduce-aarch64" />
      <config projectName="LLVM" targetName="LLVMHello" />
      <config projectName="LLVM" targetName="llvm-tblgen" />
      <config projectName="LLVM" targetName="install-LLVMRuntimeDyld" />
      <config projectName="LLVM" targetName="check-llvm-transforms-functionattrs" />
      <config projectName="LLVM" targetName="check-llvm-tools-yaml2obj-elf-dwarf" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mir-webassembly" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mt" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86-haswell" />
      <config projectName="LLVM" targetName="install-LLVMMCParser" />
      <config projectName="LLVM" targetName="install-LLVMNVPTXInfo-stripped" />
      <config projectName="LLVM" targetName="CodeGenTests" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-tailcall" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-nm" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-modextract" />
      <config projectName="LLVM" targetName="check-llvm-verifier-arm" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-mips64r6" />
      <config projectName="LLVM" targetName="check-llvm-transforms-attributor-ipconstantprop" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopdataprefetch-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopunroll-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-analysis-dependenceanalysis" />
      <config projectName="LLVM" targetName="check-llvm-analysis-blockfrequencyinfo" />
      <config projectName="LLVM" targetName="check-llvm-mc-x86" />
      <config projectName="LLVM" targetName="check-all" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-globalisel-regbankselect" />
      <config projectName="LLVM" targetName="check-llvm-transforms-lowerwidenablecondition" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-coff" />
      <config projectName="LLVM" targetName="check-llvm-objectyaml-macho" />
      <config projectName="LLVM" targetName="install-LLVMMSP430Info-stripped" />
      <config projectName="LLVM" targetName="LLVMLibDriver" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-locstats" />
      <config projectName="LLVM" targetName="install-Remarks" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-msa" />
      <config projectName="LLVM" targetName="LanaiCommonTableGen" />
      <config projectName="LLVM" targetName="check-llvm-object-amdgpu" />
      <config projectName="LLVM" targetName="LTO" />
      <config projectName="LLVM" targetName="LLVMAArch64Info" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-memorysanitizer-systemz" />
      <config projectName="LLVM" targetName="CFIVerifyTests" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cxxfilt" />
      <config projectName="LLVM" targetName="install-LLVMObjectYAML-stripped" />
      <config projectName="LLVM" targetName="install-LLVMSelectionDAG-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-gold" />
      <config projectName="LLVM" targetName="install-llvm-ifs" />
      <config projectName="LLVM" targetName="llvm-dlltool" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips32" />
      <config projectName="LLVM" targetName="check-llvm-analysis-typebasedaliasanalysis" />
      <config projectName="LLVM" targetName="LLJITWithOptimizingIRTransform" />
      <config projectName="LLVM" targetName="check" />
      <config projectName="LLVM" targetName="check-llvm-transforms-globalsplit" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopdataprefetch" />
      <config projectName="LLVM" targetName="install-LLVMProfileData" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-macho" />
      <config projectName="LLVM" targetName="check-llvm-examples-irtransforms-simplifycfg" />
      <config projectName="LLVM" targetName="ObjectTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopidiom" />
      <config projectName="LLVM" targetName="check-llvm-codegen-powerpc-globalisel" />
      <config projectName="LLVM" targetName="install-LLVMTransformUtils" />
      <config projectName="LLVM" targetName="LLVMAVRDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-pdb-native" />
      <config projectName="LLVM" targetName="DebugInfoMSFTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-sparc" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo" />
      <config projectName="LLVM" targetName="install-LLVMScalarOpts-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-elf-powerpc" />
      <config projectName="LLVM" targetName="install-llc" />
      <config projectName="LLVM" targetName="LLVMAVRAsmParser" />
      <config projectName="LLVM" targetName="LLVMVectorize" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-rc" />
      <config projectName="LLVM" targetName="install-lli" />
      <config projectName="LLVM" targetName="check-llvm-object-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMScalarOpts" />
      <config projectName="LLVM" targetName="install-LLVMRISCVUtils-stripped" />
      <config projectName="LLVM" targetName="install-llvm-lipo" />
      <config projectName="LLVM" targetName="LLVMWebAssemblyDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwarfdump-aarch64" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips3d" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopdistribute" />
      <config projectName="LLVM" targetName="install-LLVMARMUtils-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-mca-x86" />
      <config projectName="LLVM" targetName="install-LLVMAsmParser-stripped" />
      <config projectName="LLVM" targetName="LLVMNVPTXInfo" />
      <config projectName="LLVM" targetName="check-llvm-transforms-attributor" />
      <config projectName="LLVM" targetName="install-llvm-dwp" />
      <config projectName="LLVM" targetName="check-llvm-codegen-aarch64-globalisel" />
      <config projectName="LLVM" targetName="LLVMDebugInfoDWARF" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-lanai" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-instrprofiling" />
      <config projectName="LLVM" targetName="check-llvm-transforms-deadargelim" />
      <config projectName="LLVM" targetName="install-llvm-objcopy-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-looptransformwarning" />
      <config projectName="LLVM" targetName="LLVMRuntimeDyld" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-elf-amdgpu" />
      <config projectName="LLVM" targetName="lli-child-target" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips64" />
      <config projectName="LLVM" targetName="install-LLVMHexagonDesc-stripped" />
      <config projectName="LLVM" targetName="install-LLVMMipsInfo-stripped" />
      <config projectName="LLVM" targetName="install-LLVMAVRInfo" />
      <config projectName="LLVM" targetName="install-LLVMMCDisassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-separateconstoffsetfromgep-nvptx" />
      <config projectName="LLVM" targetName="LLVMHexagonDisassembler" />
      <config projectName="LLVM" targetName="IPOTests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-straightlinestrengthreduce-nvptx" />
      <config projectName="LLVM" targetName="install-LLVMMSP430Disassembler-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-earlycse-amdgpu" />
      <config projectName="LLVM" targetName="LLVMX86AsmParser" />
      <config projectName="LLVM" targetName="check-llvm-mc" />
      <config projectName="LLVM" targetName="install-LLVMSparcDesc-stripped" />
      <config projectName="LLVM" targetName="check-llvm-codegen-generic-mirdebugify" />
      <config projectName="LLVM" targetName="install-llvm-headers" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoPDB" />
      <config projectName="LLVM" targetName="LipoOptsTableGen" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-lto2" />
      <config projectName="LLVM" targetName="install-llvm-readelf-stripped" />
      <config projectName="LLVM" targetName="install-llvm-as" />
      <config projectName="LLVM" targetName="install-llvm-ar" />
      <config projectName="LLVM" targetName="install-cmake-exports" />
      <config projectName="LLVM" targetName="check-llvm-transforms-deadstoreelimination-memdepanalysis-x86" />
      <config projectName="LLVM" targetName="LLJITWithTargetProcessControl" />
      <config projectName="LLVM" targetName="install-llvm-addr2line-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-xcore" />
      <config projectName="LLVM" targetName="install-LLVMARMDisassembler-stripped" />
      <config projectName="LLVM" targetName="LLVMInterfaceStub" />
      <config projectName="LLVM" targetName="install-llvm-libtool-darwin-stripped" />
      <config projectName="LLVM" targetName="LLVMExegesisAArch64Tests" />
      <config projectName="LLVM" targetName="check-llvm-transforms-vectorcombine-hexagon" />
      <config projectName="LLVM" targetName="install-llvm-addr2line" />
      <config projectName="LLVM" targetName="check-llvm-transforms-straightlinestrengthreduce" />
      <config projectName="LLVM" targetName="check-llvm-codegen-ve" />
      <config projectName="LLVM" targetName="check-llvm-transforms-adce" />
      <config projectName="LLVM" targetName="install-LLVMAArch64CodeGen-stripped" />
      <config projectName="LLVM" targetName="llvm-c-test" />
      <config projectName="LLVM" targetName="install-LLVMMipsDisassembler" />
      <config projectName="LLVM" targetName="install-LLVMX86AsmParser-stripped" />
      <config projectName="LLVM" targetName="install-bugpoint" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir-hexagon" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-threadsanitizer" />
      <config projectName="LLVM" targetName="LLVMARMDesc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simpleloopunswitch-arm" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-heapprofiler" />
      <config projectName="LLVM" targetName="llvm-readobj" />
      <config projectName="LLVM" targetName="install-LLVMBPFDesc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-slpvectorizer-arm" />
      <config projectName="LLVM" targetName="check-llvm-transforms-deadstoreelimination-memdepanalysis" />
      <config projectName="LLVM" targetName="install-llvm-cvtres-stripped" />
      <config projectName="LLVM" targetName="install-llvm-reduce" />
      <config projectName="LLVM" targetName="check-llvm-transforms-pruneeh" />
      <config projectName="LLVM" targetName="check-llvm-codegen-arc" />
      <config projectName="LLVM" targetName="check-llvm-tablegen" />
      <config projectName="LLVM" targetName="LLVMInterpreter" />
      <config projectName="LLVM" targetName="check-llvm-codegen-mips-micromips-sizereduction" />
      <config projectName="LLVM" targetName="obj2yaml" />
      <config projectName="LLVM" targetName="LLJITWithCustomObjectLinkingLayer" />
      <config projectName="LLVM" targetName="check-llvm-codegen-arm" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr-calling-conv" />
      <config projectName="LLVM" targetName="check-llvm-mc-arm" />
      <config projectName="LLVM" targetName="acc_gen" />
      <config projectName="LLVM" targetName="install-llvm-pdbutil" />
      <config projectName="LLVM" targetName="LLVMMipsAsmParser" />
      <config projectName="LLVM" targetName="install-llvm-rtdyld" />
      <config projectName="LLVM" targetName="LLVMHexagonAsmParser" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-poisonchecking" />
      <config projectName="LLVM" targetName="LLVMBitWriter" />
      <config projectName="LLVM" targetName="SupportTests" />
      <config projectName="LLVM" targetName="LLJITWithLazyReexports" />
      <config projectName="LLVM" targetName="XRayTests" />
      <config projectName="LLVM" targetName="install-LLVMRISCVDesc-stripped" />
      <config projectName="LLVM" targetName="install-LLVMMCJIT-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-mips-crc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopvectorize-systemz" />
      <config projectName="LLVM" targetName="check-llvm-mc-disassembler-sparc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-instcombine-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMBitstreamReader" />
      <config projectName="LLVM" targetName="OrcJITTests" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-cvtres" />
      <config projectName="LLVM" targetName="check-llvm-transforms-globalopt-powerpc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-codegenprepare-powerpc" />
      <config projectName="LLVM" targetName="LLVMHexagonDesc" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inline-amdgpu" />
      <config projectName="LLVM" targetName="LLVMTransformUtils" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-systemz" />
      <config projectName="LLVM" targetName="OrcV2CBindingsRemovableCode" />
      <config projectName="LLVM" targetName="install-LLVMMSP430Info" />
      <config projectName="LLVM" targetName="benchmark" />
      <config projectName="LLVM" targetName="Fibonacci" />
      <config projectName="LLVM" targetName="install-LLVMFuzzMutate-stripped" />
      <config projectName="LLVM" targetName="check-llvm-tools-obj2yaml" />
      <config projectName="LLVM" targetName="check-llvm-transforms-inferaddressspaces-amdgpu" />
      <config projectName="LLVM" targetName="install-LTO-stripped" />
      <config projectName="LLVM" targetName="check-llvm-analysis-dominancefrontier" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-objdump-wasm" />
      <config projectName="LLVM" targetName="install-llvm-split" />
      <config projectName="LLVM" targetName="check-llvm-instrumentation-memorysanitizer-mips" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Utils-stripped" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-dsp" />
      <config projectName="LLVM" targetName="check-llvm-mc-avr" />
      <config projectName="LLVM" targetName="check-llvm-codegen-avr" />
      <config projectName="LLVM" targetName="install-LLVMMipsInfo" />
      <config projectName="LLVM" targetName="install-llvm-link" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-micromips-dspr2" />
      <config projectName="LLVM" targetName="check-llvm-codegen-wineh" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-micromips-dspr3" />
      <config projectName="LLVM" targetName="install-llvm-size" />
      <config projectName="LLVM" targetName="check-llvm-transforms-licm-aarch64" />
      <config projectName="LLVM" targetName="install-LLVMAArch64Info-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-util-predicateinfo" />
      <config projectName="LLVM" targetName="install-LLVMObjCARCOpts" />
      <config projectName="LLVM" targetName="check-llvm-transforms-simplifycfg-riscv" />
      <config projectName="LLVM" targetName="install-LLVMARMInfo" />
      <config projectName="LLVM" targetName="LLVMPowerPCDesc" />
      <config projectName="LLVM" targetName="install-LLVMWebAssemblyDesc" />
      <config projectName="LLVM" targetName="install-distribution-stripped" />
      <config projectName="LLVM" targetName="LLVMExegesisMipsTests" />
      <config projectName="LLVM" targetName="install-LLVMDebugInfoGSYM-stripped" />
      <config projectName="LLVM" targetName="install-LLVMVectorize-stripped" />
      <config projectName="LLVM" targetName="Remarks" />
      <config projectName="LLVM" targetName="check-llvm-mc-mips-mips16" />
      <config projectName="LLVM" targetName="check-llvm-transforms-correlatedvaluepropagation" />
      <config projectName="LLVM" targetName="LLVMMSP430AsmParser" />
      <config projectName="LLVM" targetName="install-llvm-cvtres" />
      <config projectName="LLVM" targetName="check-llvm-tools-llvm-dwp-x86" />
      <config projectName="LLVM" targetName="check-llvm-transforms-partiallyinlinelibcalls-x86" />
      <config projectName="LLVM" targetName="LLVMPowerPCDisassembler" />
      <config projectName="LLVM" targetName="check-llvm-analysis-costmodel-systemz" />
      <config projectName="LLVM" targetName="check-llvm-debuginfo-mir-mips" />
      <config projectName="LLVM" targetName="install-LLVMHexagonAsmParser-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loadstorevectorizer" />
      <config projectName="LLVM" targetName="check-llvm-transforms-loopflatten" />
      <config projectName="LLVM" targetName="install-llvm-strings-stripped" />
      <config projectName="LLVM" targetName="check-llvm-transforms-structurizecfg-amdgpu" />
      <config projectName="LLVM" targetName="ExecutionEngineTests" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" ENABLED="true" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4fb31e14-dc0c-4cd8-94aa-0714372b0faf" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/sancus-main/sancus-core/core/sim/rtl_sim/src/sancus/gen_mem_trace.s43" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sancus-main/sancus-core/core/sim/rtl_sim/src/sancus/gen_mem_trace.v" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sancus-main/sancus-core/core/sim/rtl_sim/src/sancus/generate_mem_trace.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sllvm/llvm/lib/Target/MSP430/MSP430DMADefender.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/sllvm/llvm/lib/Target/MSP430/MSP430DMADefender.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sllvm/llvm/lib/Target/MSP430/MSP430InstrInfo.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/sllvm/llvm/lib/Target/MSP430/MSP430InstrInfo.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sllvm/llvm/utils/TableGen/MSP430InstrMemTraceInfo.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/sllvm/llvm/utils/TableGen/MSP430InstrMemTraceInfo.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sllvm/llvm/utils/TableGen/MemoryTraceGeneration/generate_memtrace_classes.py" beforeDir="false" afterPath="$PROJECT_DIR$/sllvm/llvm/utils/TableGen/MemoryTraceGeneration/generate_memtrace_classes.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/test/sancus/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_3_mov/Makefile.dmadef" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_3_mov/Makefile.nemdef" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_3_mov/Makefile.vulnerable" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_3_mov/data.ld" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_3_mov/indirect.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_3_mov/indirect.dmadef" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_3_mov/indirect.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_3_mov/indirect.nemdef" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_3_mov/indirect.vulnerable" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_3_mov/main.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_3_mov/text.ld" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_add/Makefile.dmadef" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_add/Makefile.nemdef" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_add/Makefile.vulnerable" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_add/data.ld" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_add/indirect.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_add/indirect.dmadef" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_add/indirect.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_add/indirect.vulnerable" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_add/main.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_add/text.ld" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_mov/Makefile.dmadef" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_mov/Makefile.nemdef" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_mov/Makefile.vulnerable" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_mov/data.ld" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_mov/indirect.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_mov/indirect.dmadef" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_mov/indirect.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_mov/indirect.vulnerable" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_mov/main.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/dma_class_5_mov/text.ld" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/test/indirect.c" beforeDir="false" afterPath="$PROJECT_DIR$/test/sancus/test/indirect.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/test/indirect.dmadef" beforeDir="false" afterPath="$PROJECT_DIR$/test/sancus/test/indirect.dmadef" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/test/indirect.h" beforeDir="false" afterPath="$PROJECT_DIR$/test/sancus/test/indirect.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/test/indirect.vulnerable" beforeDir="false" afterPath="$PROJECT_DIR$/test/sancus/test/indirect.vulnerable" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/sancus/test/main.c" beforeDir="false" afterPath="$PROJECT_DIR$/test/sancus/test/main.c" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/sllvm" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="ProjectId" id="1oINE05w29Ij7UO5CE5tN7xKcDO" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="OCFindUsagesOptions.isSearchForTextOccurrences" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="cf.advertisement.text.has.clang-format" value="true" />
    <property name="cf.first.check.clang-format" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../MEGA/KULeuven/2_Ma_Computerwetenschappen/Capita_Selecta/Program verification/tinyps" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/sllvm/llvm/lib/Target/MSP430" />
    </key>
  </component>
  <component name="RunManager" selected="CMake Application.check-all">
    <configuration name="AArch64Tests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AArch64Tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="AArch64Tests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ADTTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ADTTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ADTTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AMDGPUDwarfTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AMDGPUDwarfTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="AMDGPUDwarfTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AMDGPUTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AMDGPUTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="AMDGPUTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ARMTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ARMTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ARMTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AnalysisTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AnalysisTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="AnalysisTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AsmParserTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AsmParserTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="AsmParserTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BinaryFormatTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BinaryFormatTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BinaryFormatTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BitcodeTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BitcodeTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BitcodeTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BitstreamTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BitstreamTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BitstreamTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="CFIVerifyTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="CFIVerifyTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="CFIVerifyTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="CodeGenTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="CodeGenTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="CodeGenTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoCodeViewTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DebugInfoCodeViewTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DebugInfoCodeViewTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoDWARFTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DebugInfoDWARFTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DebugInfoDWARFTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoGSYMTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DebugInfoGSYMTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DebugInfoGSYMTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoMSFTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DebugInfoMSFTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DebugInfoMSFTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoPDBTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DebugInfoPDBTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DebugInfoPDBTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DemangleTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DemangleTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DemangleTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DynamicLibraryTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DynamicLibraryTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DynamicLibraryTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExecutionEngineTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ExecutionEngineTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ExecutionEngineTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="FileCheckTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="FileCheckTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="FileCheckTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="FuzzMutateTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="FuzzMutateTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="FuzzMutateTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="GlobalISelTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="GlobalISelTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="GlobalISelTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="IPOTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="IPOTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="IPOTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="IRTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="IRTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="IRTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="InterfaceStubTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="InterfaceStubTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="InterfaceStubTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="JITLinkTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="JITLinkTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="JITLinkTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisAArch64Tests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExegesisAArch64Tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLVMExegesisAArch64Tests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisARMTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExegesisARMTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLVMExegesisARMTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisMipsTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExegesisMipsTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLVMExegesisMipsTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisPowerPCTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExegesisPowerPCTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLVMExegesisPowerPCTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExegesisTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLVMExegesisTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisX86Tests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExegesisX86Tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLVMExegesisX86Tests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMFrontendTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMFrontendTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLVMFrontendTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LineEditorTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LineEditorTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LineEditorTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LinkerTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LinkerTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LinkerTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MCJITTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MCJITTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="MCJITTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MCTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MCTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="MCTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MITests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MITests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="MITests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ObjectTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ObjectTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ObjectTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ObjectYAMLTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ObjectYAMLTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ObjectYAMLTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OptionTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="OptionTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="OptionTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrcJITTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="OrcJITTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="OrcJITTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PluginsTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="PluginsTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="PluginsTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PowerPCTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="PowerPCTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="PowerPCTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProfileDataTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ProfileDataTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ProfileDataTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RemarksTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RemarksTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="RemarksTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ScalarTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ScalarTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ScalarTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SupportTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SupportTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="SupportTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TableGenTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TableGenTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="TableGenTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TextAPITests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TextAPITests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="TextAPITests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="UtilsTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="UtilsTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="UtilsTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="VectorizeTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="VectorizeTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="VectorizeTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="WebAssemblyTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="WebAssemblyTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="WebAssemblyTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="X86Tests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="X86Tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="X86Tests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="XRayTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="XRayTests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="XRayTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AArch64CommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AArch64CommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AMDGPUCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AMDGPUCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ARMCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ARMCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AVRCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AVRCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AutomataTestTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="AutomataTestTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BPFCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BPFCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BitcodeStripOptsTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BitcodeStripOptsTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BrainF" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BrainF" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BrainF">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BugpointPasses" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BugpointPasses" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BugpointPasses_exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BugpointPasses_exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch1" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BuildingAJIT-Ch1" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BuildingAJIT-Ch1">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BuildingAJIT-Ch2" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BuildingAJIT-Ch2">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BuildingAJIT-Ch3" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BuildingAJIT-Ch3">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch4" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="BuildingAJIT-Ch4" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="BuildingAJIT-Ch4">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Bye" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Bye" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="CvtResTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="CvtResTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DllOptionsTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DllOptionsTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DsymutilTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DsymutilTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DummyYAML" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DummyYAML" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="DummyYAML">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DynamicLibraryLib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="DynamicLibraryLib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExampleIRTransforms" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ExampleIRTransforms" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Fibonacci" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Fibonacci" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Fibonacci">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="FileCheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="FileCheck" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="FileCheck">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="HexagonCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="HexagonCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="HowToUseJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="HowToUseJIT" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="HowToUseJIT">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="HowToUseLLJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="HowToUseLLJIT" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="HowToUseLLJIT">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="InstCombineTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="InstCombineTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="InstallNameToolOptsTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="InstallNameToolOptsTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch2" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch2">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch3" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch3">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch4" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch4" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch4">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch5" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch5">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch6" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch6">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch7" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch7" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch7">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch8" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch8" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch8">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch9" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope-Ch9" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="Kaleidoscope-Ch9">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Kaleidoscope" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLJITDumpObjects" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLJITDumpObjects" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLJITDumpObjects">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLJITWithCustomObjectLinkingLayer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLJITWithCustomObjectLinkingLayer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLJITWithCustomObjectLinkingLayer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLJITWithGDBRegistrationListener" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLJITWithGDBRegistrationListener" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLJITWithGDBRegistrationListener">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLJITWithInitializers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLJITWithInitializers" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLJITWithInitializers">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLJITWithLazyReexports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLJITWithLazyReexports" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLJITWithLazyReexports">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLJITWithObjectCache" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLJITWithObjectCache" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLJITWithObjectCache">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLJITWithObjectLinkingLayerPlugin" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLJITWithObjectLinkingLayerPlugin" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLJITWithObjectLinkingLayerPlugin">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLJITWithOptimizingIRTransform" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLJITWithOptimizingIRTransform" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLJITWithOptimizingIRTransform">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLJITWithTargetProcessControl" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLJITWithTargetProcessControl" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLJITWithTargetProcessControl">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLJITWithThinLTOSummaries" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLJITWithThinLTOSummaries" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="LLJITWithThinLTOSummaries">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64AsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64AsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64Disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Utils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAArch64Utils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAMDGPUUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMARMUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAVRAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAVRAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAVRCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAVRCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAVRDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAVRDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAVRDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAVRDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAVRInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAVRInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAggressiveInstCombine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAggressiveInstCombine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAnalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAnalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBPFAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBPFCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBPFDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBPFDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBPFInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBinaryFormat" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBinaryFormat" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBitReader" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBitReader" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBitWriter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBitWriter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBitstreamReader" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMBitstreamReader" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCFGuard" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMCFGuard" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCFIVerify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMCFIVerify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMCore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCoroutines" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMCoroutines" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCoverage" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMCoverage" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDWARFLinker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDWARFLinker" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoCodeView" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDebugInfoCodeView" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoDWARF" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDebugInfoDWARF" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoGSYM" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDebugInfoGSYM" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoMSF" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDebugInfoMSF" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoPDB" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDebugInfoPDB" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDemangle" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDemangle" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDlltoolDriver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMDlltoolDriver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExecutionEngine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExecutionEngine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExegesis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisAArch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExegesisAArch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisMips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExegesisMips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisPowerPC" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExegesisPowerPC" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisX86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExegesisX86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExtensions" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMExtensions" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMFileCheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMFileCheck" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMFrontendOpenACC" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMFrontendOpenACC" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMFrontendOpenMP" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMFrontendOpenMP" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMFuzzMutate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMFuzzMutate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMGlobalISel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMGlobalISel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHello" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHello" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHelloNew" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHelloNew" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHello_exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHello_exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHexagonAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHexagonCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHexagonDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHexagonDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMHexagonInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMIRReader" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMIRReader" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMInstCombine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMInstCombine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMInstrumentation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMInstrumentation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMInterfaceStub" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMInterfaceStub" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMInterpreter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMInterpreter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMJITLink" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMJITLink" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLTO" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLTO" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLanaiAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLanaiCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLanaiDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLanaiDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLanaiInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLibDriver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLibDriver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLineEditor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLineEditor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLinker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMLinker" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMC" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMC" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMCA" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMCA" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMCDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMCDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMCJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMCJIT" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMCParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMCParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMIRParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMIRParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430AsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMSP430AsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMSP430CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMSP430Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430Disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMSP430Disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMSP430Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMipsAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMipsCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMipsDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMipsDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMMipsInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMNVPTXCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMNVPTXCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMNVPTXDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMNVPTXDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMNVPTXInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMNVPTXInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMObjCARCOpts" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMObjCARCOpts" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMObject" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMObject" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMObjectYAML" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMObjectYAML" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMOption" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMOption" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMOrcError" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMOrcError" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMOrcJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMOrcJIT" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPasses" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPasses" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPowerPCAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPowerPCCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPowerPCDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPowerPCDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMPowerPCInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMProfileData" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMProfileData" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMRISCVAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMRISCVAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMRISCVCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMRISCVCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMRISCVDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMRISCVDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMRISCVDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMRISCVDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMRISCVInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMRISCVInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMRISCVUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMRISCVUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMRemarks" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMRemarks" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMRuntimeDyld" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMRuntimeDyld" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMScalarOpts" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMScalarOpts" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSelectionDAG" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSelectionDAG" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSparcAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSparcCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSparcDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSparcDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSparcInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSupport" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSupport" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSymbolize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSymbolize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSystemZAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSystemZCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSystemZDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSystemZDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMSystemZInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTableGenGlobalISel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMTableGenGlobalISel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTarget" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMTarget" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTestingSupport" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMTestingSupport" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTextAPI" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMTextAPI" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTransformUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMTransformUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMVectorize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMVectorize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMWebAssemblyAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMWebAssemblyAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMWebAssemblyCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMWebAssemblyCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMWebAssemblyDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMWebAssemblyDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMWebAssemblyDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMWebAssemblyDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMWebAssemblyInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMWebAssemblyInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMWindowsManifest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMWindowsManifest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86AsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86AsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86Disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86Disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMX86Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMXCoreCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMXCoreDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMXCoreDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMXCoreInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXRay" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMXRay" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMipo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LLVMipo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LTO" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LTO" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LTO_exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LTO_exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LanaiCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LanaiCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LibOptionsTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LibOptionsTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LipoOptsTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="LipoOptsTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MSP430CommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MSP430CommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MipsCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MipsCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ModuleMaker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ModuleMaker" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ModuleMaker">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MtTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="MtTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NVPTXCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="NVPTXCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ObjcopyOptsTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ObjcopyOptsTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OptsTestTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="OptsTestTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrcV2CBindingsAddObjectFile" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="OrcV2CBindingsAddObjectFile" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="OrcV2CBindingsAddObjectFile">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrcV2CBindingsBasicUsage" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="OrcV2CBindingsBasicUsage" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="OrcV2CBindingsBasicUsage">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrcV2CBindingsReflectProcessSymbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="OrcV2CBindingsReflectProcessSymbols" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="OrcV2CBindingsReflectProcessSymbols">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrcV2CBindingsRemovableCode" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="OrcV2CBindingsRemovableCode" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="OrcV2CBindingsRemovableCode">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ParallelJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ParallelJIT" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="ParallelJIT">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PipSqueak" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="PipSqueak" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PowerPCCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="PowerPCCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RISCVCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RISCVCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RcTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="RcTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Remarks" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Remarks" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Remarks_exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="Remarks_exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SLLVM" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SLLVM" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SancusModuleCreator" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SancusModuleCreator" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SecondLib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SecondLib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SparcCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SparcCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SpeculativeJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SpeculativeJIT" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="SpeculativeJIT">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="StripOptsTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="StripOptsTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SymbolizerOptsTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SymbolizerOptsTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SystemZCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="SystemZCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestPlugin" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="TestPlugin" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="UnitTests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="UnitTests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="WebAssemblyCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="WebAssemblyCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="X86CommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="X86CommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="XCoreCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="XCoreCommonTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="acc_cpp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="acc_cpp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="acc_gen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="acc_gen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="benchmark" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="benchmark" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="benchmark_main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="benchmark_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="bugpoint" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="bugpoint" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="bugpoint">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-all" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-all" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-lit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-lit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-aliasset" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-aliasset" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-assumptioncache" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-assumptioncache" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-basicaa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-basicaa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-blockfrequencyinfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-blockfrequencyinfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-branchprobabilityinfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-branchprobabilityinfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-callgraph" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-callgraph" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-cflaliasanalysis-andersen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-cflaliasanalysis-andersen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-cflaliasanalysis-steensgaard" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-cflaliasanalysis-steensgaard" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-cflaliasanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-cflaliasanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-costmodel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-costmodel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-ddg" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-ddg" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-delinearization" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-delinearization" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-demandedbits" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-demandedbits" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-dependenceanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-dependenceanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-divergenceanalysis-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-divergenceanalysis-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-divergenceanalysis-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-divergenceanalysis-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-divergenceanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-divergenceanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-dominancefrontier" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-dominancefrontier" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-dominators" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-dominators" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-functionpropertiesanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-functionpropertiesanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-globalsmodref" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-globalsmodref" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-irsimilarityidentifier" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-irsimilarityidentifier" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-ivusers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-ivusers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-lazycallgraph" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-lazycallgraph" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-lazyvalueanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-lazyvalueanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-legacydivergenceanalysis-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-legacydivergenceanalysis-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-legacydivergenceanalysis-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-legacydivergenceanalysis-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-legacydivergenceanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-legacydivergenceanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-lint" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-lint" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-loopaccessanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-loopaccessanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-loopcacheanalysis-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-loopcacheanalysis-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-loopcacheanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-loopcacheanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-loopinfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-loopinfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-loopnestanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-loopnestanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-memorydependenceanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-memorydependenceanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-memoryssa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-memoryssa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-mustexecute" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-mustexecute" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-phivalues" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-phivalues" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-postdominators" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-postdominators" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-profilesummary" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-profilesummary" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-regioninfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-regioninfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-scalarevolution" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-scalarevolution" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-scopednoaliasaa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-scopednoaliasaa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-stacksafetyanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-stacksafetyanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-typebasedaliasanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-typebasedaliasanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis-valuetracking" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis-valuetracking" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-analysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-analysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-assembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-assembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings-go" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings-go" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings-llvm-c-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings-llvm-c-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings-llvm-c-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings-llvm-c-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings-llvm-c" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings-llvm-c" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings-ocaml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings-ocaml" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bindings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bindings" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bitcode" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bitcode" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-bugpoint" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-bugpoint" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-aarch64-globalisel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-aarch64-globalisel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-amdgpu-globalisel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-amdgpu-globalisel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-arc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-arc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-arm-globalisel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-arm-globalisel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-arm-paralleldsp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-arm-paralleldsp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-arm-windows" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-arm-windows" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-atomics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-atomics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-calling-conv-c" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-calling-conv-c" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-calling-conv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-calling-conv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-features" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-features" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-inline-asm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-inline-asm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-integration" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-integration" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-intrinsics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-intrinsics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-pseudo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-pseudo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr-relax-mem" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr-relax-mem" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-avr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-avr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-bpf-btf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-bpf-btf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-bpf-core" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-bpf-core" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-bpf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-bpf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-generic-mirdebugify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-generic-mirdebugify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-generic-mirstripdebug" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-generic-mirstripdebug" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-generic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-generic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-hexagon-autohvx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-hexagon-autohvx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-hexagon-intrinsics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-hexagon-intrinsics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-hexagon-loop-idiom" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-hexagon-loop-idiom" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-hexagon-pipeliner" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-hexagon-pipeliner" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-hexagon-vect" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-hexagon-vect" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-lanai" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-lanai" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-cconv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-cconv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-compactbranches" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-compactbranches" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-cstmaterialization" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-cstmaterialization" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-fast-isel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-fast-isel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-globalisel-instruction-select" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-globalisel-instruction-select" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-globalisel-irtranslator" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-globalisel-irtranslator" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-globalisel-legalizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-globalisel-legalizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-globalisel-llvm-ir" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-globalisel-llvm-ir" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-globalisel-mips-prelegalizer-combiner" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-globalisel-mips-prelegalizer-combiner" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-globalisel-regbankselect" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-globalisel-regbankselect" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-globalisel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-globalisel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-indirect-jump-hazard" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-indirect-jump-hazard" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-instverify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-instverify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-llvm-ir" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-llvm-ir" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-longbranch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-longbranch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-micromips-sizereduction" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-micromips-sizereduction" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-mips32r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-mips32r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-mips64r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-mips64r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-mirparser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-mirparser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-msa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-msa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips-tailcall" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips-tailcall" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-generic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-generic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-msp430" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-msp430" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-mir" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-mir" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-msp430" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-msp430" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-powerpc-globalisel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-powerpc-globalisel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-riscv-globalisel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-riscv-globalisel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-riscv-intrinsics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-riscv-intrinsics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-systemz-large" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-systemz-large" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-thumb" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-thumb" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-thumb2-lowoverheadloops" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-thumb2-lowoverheadloops" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-thumb2-mve-intrinsics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-thumb2-mve-intrinsics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-thumb2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-thumb2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-ve" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-ve" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-wincfguard" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-wincfguard" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-wineh" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-wineh" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-x86-amx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-x86-amx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-x86-avx512-shuffles" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-x86-avx512-shuffles" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-x86-gc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-x86-gc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-x86-globalisel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-x86-globalisel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen-xcore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen-xcore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-codegen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-codegen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-bpf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-bpf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-coff-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-coff-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-coff-armnt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-coff-armnt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-coff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-coff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-generic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-generic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-lanai" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-lanai" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir-instrref" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir-instrref" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-mir" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-mir" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-msp430" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-msp430" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-pdb-dia" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-pdb-dia" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-pdb-native" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-pdb-native" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-pdb" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-pdb" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-debuginfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-debuginfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-demangle" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-demangle" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-examples-irtransforms-simplifycfg" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-examples-irtransforms-simplifycfg" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-examples-irtransforms" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-examples-irtransforms" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-examples-kaleidoscope" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-examples-kaleidoscope" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-examples-orcv2examples" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-examples-orcv2examples" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-examples" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-examples" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-interpreter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-interpreter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-jitlink-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-jitlink-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-jitlink-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-jitlink-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-jitlink" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-jitlink" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-mcjit-remote" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-mcjit-remote" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-mcjit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-mcjit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-orclazy" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-orclazy" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine-runtimedyld" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine-runtimedyld" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-executionengine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-executionengine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-feature-operandbundles" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-feature-operandbundles" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-feature" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-feature" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-filecheck-comment" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-filecheck-comment" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-filecheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-filecheck" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-addresssanitizer-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-addresssanitizer-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-addresssanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-addresssanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-boundschecking" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-boundschecking" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-dataflowsanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-dataflowsanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-heapprofiler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-heapprofiler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-hwaddresssanitizer-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-hwaddresssanitizer-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-hwaddresssanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-hwaddresssanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-instrorderfile" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-instrorderfile" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-instrprofiling-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-instrprofiling-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-instrprofiling" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-instrprofiling" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-memorysanitizer-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-memorysanitizer-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-memorysanitizer-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-memorysanitizer-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-memorysanitizer-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-memorysanitizer-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-memorysanitizer-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-memorysanitizer-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-memorysanitizer-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-memorysanitizer-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-memorysanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-memorysanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-poisonchecking" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-poisonchecking" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-sanitizercoverage" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-sanitizercoverage" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation-threadsanitizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation-threadsanitizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-instrumentation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-instrumentation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-integer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-integer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-jitlistener" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-jitlistener" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-linker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-linker" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-lto-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-lto-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-lto-resolution-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-lto-resolution-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-lto-resolution" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-lto-resolution" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-lto-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-lto-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-lto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-lto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-machineverifier" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-machineverifier" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-aarch64-sve" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-aarch64-sve" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-aarch64-sve2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-aarch64-sve2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-amdgpu-regression" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-amdgpu-regression" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-arm-alignedbundling" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-arm-alignedbundling" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-arm-windows" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-arm-windows" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-asmparser-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-asmparser-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-asmparser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-asmparser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-avr-out-of-range-fixups" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-avr-out-of-range-fixups" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-avr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-avr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-bpf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-bpf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-coff-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-coff-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-coff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-coff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-arc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-arc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-lanai" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-lanai" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-crc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-crc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-dsp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-dsp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-dspr2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-dspr2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-eva" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-eva" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-ginv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-ginv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-micromips-dsp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-micromips-dsp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-micromips-dspr2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-micromips-dspr2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-micromips-dspr3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-micromips-dspr3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-micromips32r3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-micromips32r3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-micromips32r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-micromips32r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips1" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips1" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips32" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips32" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips32r2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips32r2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips32r3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips32r3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips32r5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips32r5" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips32r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips32r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips4" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips4" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips64r2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips64r2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips64r3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips64r3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips64r5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips64r5" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mips64r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mips64r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-msa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-msa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-mt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-mt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-octeon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-octeon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-octeonp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-octeonp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips-virt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips-virt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-msp430" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-msp430" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-x86-amx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-x86-amx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-x86-keylocker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-x86-keylocker" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler-xcore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler-xcore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-elf-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-elf-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-elf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-elf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-hexagon-extensions" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-hexagon-extensions" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-hexagon-instructions" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-hexagon-instructions" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-hexagon-packetrules" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-hexagon-packetrules" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-lanai" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-lanai" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-macho-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-macho-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-macho-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-macho-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-macho" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-macho" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-cnmips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-cnmips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-cnmipsp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-cnmipsp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-crc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-crc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-dsp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-dsp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-dspr2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-dspr2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-eva" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-eva" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-ginv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-ginv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-micromips-dsp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-micromips-dsp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-micromips-dspr2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-micromips-dspr2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-micromips-dspr3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-micromips-dspr3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-micromips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-micromips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-micromips32r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-micromips32r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips1" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips1" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips16" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips16" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips32" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips32" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips32r2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips32r2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips32r3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips32r3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips32r5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips32r5" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips32r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips32r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips3d" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips3d" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips4" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips4" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips5" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips64r2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips64r2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips64r3" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips64r3" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips64r5" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips64r5" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mips64r6" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mips64r6" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-msa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-msa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-mt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-mt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips-virt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips-virt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-msp430" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-msp430" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-riscv-rvv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-riscv-rvv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-ve" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-ve" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-x86-alignedbundling" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-x86-alignedbundling" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-x86-amx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-x86-amx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-x86-keylocker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-x86-keylocker" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-mc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-mc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-lanai" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-lanai" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-object" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-object" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-objectyaml-codeview" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-objectyaml-codeview" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-objectyaml-coff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-objectyaml-coff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-objectyaml-elf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-objectyaml-elf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-objectyaml-macho" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-objectyaml-macho" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-objectyaml-wasm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-objectyaml-wasm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-objectyaml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-objectyaml" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-other-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-other-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-other" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-other" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-reduce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-reduce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-safepointirverifier" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-safepointirverifier" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-support" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-support" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-symbolrewriter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-symbolrewriter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tablegen-common" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tablegen-common" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tablegen-fixedlendecoderemitter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tablegen-fixedlendecoderemitter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tablegen-gicombineremitter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tablegen-gicombineremitter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tablegen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tablegen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-thinlto-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-thinlto-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-thinlto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-thinlto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-dsymutil-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-dsymutil-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-dsymutil-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-dsymutil-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-dsymutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-dsymutil" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-gold-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-gold-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-gold-x86-v1.12" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-gold-x86-v1.12" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-gold-x86-v1.16" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-gold-x86-v1.16" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-gold-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-gold-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-gold" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-gold" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-ar" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-ar" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-as" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-as" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cfi-verify-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cfi-verify-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cfi-verify-unsupported" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cfi-verify-unsupported" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cfi-verify-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cfi-verify-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cfi-verify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cfi-verify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-config" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-config" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cov-gcov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cov-gcov" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cov" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cvtres" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cvtres" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cxxdump-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cxxdump-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cxxdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cxxdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cxxfilt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cxxfilt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-cxxmap" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-cxxmap" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-diff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-diff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dlltool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dlltool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwarfdump-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwarfdump-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwarfdump-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwarfdump-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwarfdump-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwarfdump-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwarfdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwarfdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwp-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwp-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-dwp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-dwp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-elfabi" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-elfabi" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-exegesis-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-exegesis-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-exegesis-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-exegesis-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-exegesis-x86-lbr" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-exegesis-x86-lbr" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-exegesis-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-exegesis-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-exegesis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-exegesis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-extract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-extract" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-gsymutil-arm_aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-gsymutil-arm_aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-gsymutil-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-gsymutil-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-gsymutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-gsymutil" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-ifs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-ifs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-isel-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-isel-fuzzer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-lib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-lib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-libtool-darwin" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-libtool-darwin" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-link" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-link" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-lipo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-lipo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-lit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-lit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-locstats" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-locstats" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-lto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-lto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-lto2-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-lto2-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-lto2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-lto2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-aarch64-cortex" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-aarch64-cortex" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-aarch64-cyclone" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-aarch64-cyclone" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-aarch64-exynos" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-aarch64-exynos" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-aarch64-falkor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-aarch64-falkor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-atom" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-atom" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-barcelona" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-barcelona" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-bdver2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-bdver2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-broadwell" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-broadwell" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-btver2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-btver2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-generic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-generic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-haswell" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-haswell" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-sandybridge" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-sandybridge" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-skylakeclient" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-skylakeclient" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-skylakeserver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-skylakeserver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-slm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-slm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-znver1" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-znver1" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86-znver2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86-znver2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mca" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mca" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-ml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-ml" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-modextract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-modextract" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-mt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-mt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-nm-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-nm-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-nm-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-nm-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-nm-wasm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-nm-wasm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-nm-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-nm-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-nm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-nm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objcopy-coff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objcopy-coff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objcopy-elf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objcopy-elf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objcopy-macho" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objcopy-macho" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objcopy-wasm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objcopy-wasm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objcopy" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objcopy" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-coff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-coff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-elf-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-elf-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-elf-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-elf-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-elf-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-elf-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-elf-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-elf-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-elf-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-elf-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-elf-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-elf-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-elf-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-elf-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-elf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-elf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-macho-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-macho-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-macho-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-macho-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-macho" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-macho" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-wasm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-wasm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump-xcoff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump-xcoff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-objdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-objdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-opt-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-opt-fuzzer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-opt-report" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-opt-report" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-pdbutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-pdbutil" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-profdata" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-profdata" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-ranlib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-ranlib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-rc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-rc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-readobj-coff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-readobj-coff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-readobj-elf-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-readobj-elf-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-readobj-elf-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-readobj-elf-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-readobj-elf-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-readobj-elf-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-readobj-elf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-readobj-elf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-readobj-macho" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-readobj-macho" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-readobj-wasm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-readobj-wasm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-readobj-xcoff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-readobj-xcoff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-readobj" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-readobj" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-size" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-size" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-split" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-split" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-strings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-strings" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-symbolizer-pdb" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-symbolizer-pdb" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-symbolizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-symbolizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-xray-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-xray-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-xray-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-xray-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-xray-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-xray-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-llvm-xray" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-llvm-xray" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-lto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-lto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-not" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-not" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-obj2yaml-coff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-obj2yaml-coff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-obj2yaml-elf-dwarf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-obj2yaml-elf-dwarf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-obj2yaml-elf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-obj2yaml-elf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-obj2yaml-macho" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-obj2yaml-macho" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-obj2yaml-minidump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-obj2yaml-minidump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-obj2yaml-xcoff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-obj2yaml-xcoff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-obj2yaml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-obj2yaml" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-opt-viewer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-opt-viewer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-sancov-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-sancov-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-sancov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-sancov" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-sanstats" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-sanstats" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-split-file" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-split-file" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-updatetestchecks-update_llc_test_checks" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-updatetestchecks-update_llc_test_checks" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-updatetestchecks-update_test_checks" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-updatetestchecks-update_test_checks" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-updatetestchecks" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-updatetestchecks" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-yaml2obj-coff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-yaml2obj-coff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-yaml2obj-elf-dwarf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-yaml2obj-elf-dwarf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-yaml2obj-elf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-yaml2obj-elf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-yaml2obj-minidump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-yaml2obj-minidump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools-yaml2obj" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools-yaml2obj" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-tools" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-tools" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-adce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-adce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-adddiscriminators" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-adddiscriminators" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-aggressiveinstcombine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-aggressiveinstcombine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-alignmentfromassumptions" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-alignmentfromassumptions" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-argumentpromotion-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-argumentpromotion-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-argumentpromotion" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-argumentpromotion" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-atomicexpand" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-atomicexpand" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-attributor-argumentpromotion-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-attributor-argumentpromotion-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-attributor-argumentpromotion" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-attributor-argumentpromotion" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-attributor-ipconstantprop" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-attributor-ipconstantprop" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-attributor-reduced" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-attributor-reduced" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-attributor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-attributor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-bdce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-bdce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-blockextractor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-blockextractor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-branchfolding" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-branchfolding" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-calledvaluepropagation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-calledvaluepropagation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-callsitesplitting" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-callsitesplitting" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-canonicalizealiases" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-canonicalizealiases" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-canonicalizefreezeinloops" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-canonicalizefreezeinloops" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codeextractor-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codeextractor-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codeextractor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codeextractor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-codegenprepare" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-codegenprepare" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constanthoisting-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constanthoisting-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constanthoisting-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constanthoisting-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constanthoisting-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constanthoisting-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constanthoisting-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constanthoisting-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constanthoisting-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constanthoisting-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constanthoisting" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constanthoisting" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constantmerge" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constantmerge" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-constraintelimination" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-constraintelimination" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-coroutines" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-coroutines" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-correlatedvaluepropagation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-correlatedvaluepropagation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-crossdsocfi" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-crossdsocfi" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-dce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-dce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-deadargelim" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-deadargelim" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-deadstoreelimination-memdepanalysis-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-deadstoreelimination-memdepanalysis-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-deadstoreelimination-memdepanalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-deadstoreelimination-memdepanalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-deadstoreelimination-mssa-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-deadstoreelimination-mssa-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-deadstoreelimination-mssa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-deadstoreelimination-mssa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-deadstoreelimination" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-deadstoreelimination" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-divrempairs-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-divrempairs-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-divrempairs-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-divrempairs-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-divrempairs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-divrempairs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-earlycse-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-earlycse-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-earlycse-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-earlycse-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-earlycse-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-earlycse-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-earlycse-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-earlycse-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-earlycse" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-earlycse" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-eliminateavailableexternally" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-eliminateavailableexternally" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-entryexitinstrumenter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-entryexitinstrumenter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-expandmemcmp-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-expandmemcmp-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-expandmemcmp-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-expandmemcmp-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-expandmemcmp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-expandmemcmp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-fixirreducible" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-fixirreducible" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-float2int" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-float2int" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-forcedfunctionattrs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-forcedfunctionattrs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-functionattrs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-functionattrs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-functionimport" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-functionimport" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-gcovprofiling" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-gcovprofiling" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-globaldce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-globaldce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-globalmerge" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-globalmerge" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-globalopt-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-globalopt-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-globalopt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-globalopt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-globalsplit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-globalsplit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-guardwidening" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-guardwidening" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-gvn-pre" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-gvn-pre" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-gvn" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-gvn" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-gvnhoist" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-gvnhoist" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-gvnsink" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-gvnsink" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-hardwareloops-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-hardwareloops-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-hardwareloops" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-hardwareloops" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-hellonew" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-hellonew" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-hotcoldsplit-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-hotcoldsplit-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-hotcoldsplit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-hotcoldsplit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-indirectbrexpand" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-indirectbrexpand" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-indvarsimplify-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-indvarsimplify-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-indvarsimplify-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-indvarsimplify-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-indvarsimplify-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-indvarsimplify-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-indvarsimplify-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-indvarsimplify-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-indvarsimplify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-indvarsimplify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inferaddressspaces-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inferaddressspaces-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inferaddressspaces-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inferaddressspaces-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inferaddressspaces" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inferaddressspaces" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inferfunctionattrs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inferfunctionattrs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-ml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-ml" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-inline" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-inline" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instcombine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instcombine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instmerge" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instmerge" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instnamer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instnamer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instsimplify-constprop-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instsimplify-constprop-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instsimplify-constprop-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instsimplify-constprop-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instsimplify-constprop-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instsimplify-constprop-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instsimplify-constprop" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instsimplify-constprop" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-instsimplify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-instsimplify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-interleavedaccess-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-interleavedaccess-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-interleavedaccess-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-interleavedaccess-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-interleavedaccess-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-interleavedaccess-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-interleavedaccess" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-interleavedaccess" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-internalize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-internalize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-irce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-irce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-jumpthreading" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-jumpthreading" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lcssa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lcssa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-licm-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-licm-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-licm-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-licm-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-licm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-licm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loadstorevectorizer-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loadstorevectorizer-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loadstorevectorizer-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loadstorevectorizer-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loadstorevectorizer-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loadstorevectorizer-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loadstorevectorizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loadstorevectorizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopdataprefetch-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopdataprefetch-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopdataprefetch-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopdataprefetch-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopdataprefetch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopdataprefetch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopdeletion" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopdeletion" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopdistribute" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopdistribute" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopflatten" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopflatten" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopfusion" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopfusion" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopidiom-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopidiom-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopidiom-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopidiom-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopidiom-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopidiom-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopidiom" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopidiom" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopinstsimplify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopinstsimplify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopinterchange" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopinterchange" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-looploadelim" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-looploadelim" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-looppredication" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-looppredication" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopreroll" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopreroll" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-looprotate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-looprotate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopsimplify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopsimplify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopsimplifycfg" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopsimplifycfg" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce-power" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce-power" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopstrengthreduce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopstrengthreduce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-looptransformwarning" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-looptransformwarning" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunroll" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunroll" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunrollandjam" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunrollandjam" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunswitch-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunswitch-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopunswitch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopunswitch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize-xcore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize-xcore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopvectorize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopvectorize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopversioning" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopversioning" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loopversioninglicm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loopversioninglicm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-loweratomic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-loweratomic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowerconstantintrinsics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowerconstantintrinsics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowerexpectintrinsic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowerexpectintrinsic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowerguardintrinsic" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowerguardintrinsic" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowerinvoke" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowerinvoke" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowermatrixintrinsics" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowermatrixintrinsics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowerswitch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowerswitch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowertypetests" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowertypetests" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-lowerwidenablecondition" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-lowerwidenablecondition" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-makeguardsexplicit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-makeguardsexplicit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-mem2reg" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-mem2reg" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-memcpyopt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-memcpyopt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-mergefunc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-mergefunc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-mergeicmps-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-mergeicmps-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-mergeicmps" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-mergeicmps" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-metarenamer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-metarenamer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-nameanonglobals" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-nameanonglobals" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-naryreassociate-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-naryreassociate-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-naryreassociate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-naryreassociate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-newgvn" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-newgvn" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-objcarc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-objcarc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-openmp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-openmp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-partialinlining" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-partialinlining" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-partiallyinlinelibcalls-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-partiallyinlinelibcalls-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-partiallyinlinelibcalls" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-partiallyinlinelibcalls" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-pgoprofile-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-pgoprofile-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-pgoprofile" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-pgoprofile" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-phaseordering-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-phaseordering-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-phaseordering" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-phaseordering" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-placesafepoints" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-placesafepoints" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-preiselintrinsiclowering" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-preiselintrinsiclowering" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-pruneeh" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-pruneeh" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-reassociate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-reassociate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-reg2mem" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-reg2mem" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-rewritestatepointsforgc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-rewritestatepointsforgc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-safestack-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-safestack-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-safestack-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-safestack-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-safestack-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-safestack-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-safestack" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-safestack" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-sampleprofile" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-sampleprofile" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-scalarizemaskedmemintrin-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-scalarizemaskedmemintrin-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-scalarizemaskedmemintrin-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-scalarizemaskedmemintrin-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-scalarizemaskedmemintrin" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-scalarizemaskedmemintrin" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-scalarizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-scalarizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-sccp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-sccp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-separateconstoffsetfromgep-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-separateconstoffsetfromgep-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-separateconstoffsetfromgep-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-separateconstoffsetfromgep-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-separateconstoffsetfromgep" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-separateconstoffsetfromgep" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simpleloopunswitch-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simpleloopunswitch-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simpleloopunswitch" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simpleloopunswitch" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-riscv" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-riscv" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-sparc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-sparc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-simplifycfg" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-simplifycfg" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-sink" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-sink" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-powerpc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-powerpc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-webassembly" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-webassembly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer-xcore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer-xcore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-slpvectorizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-slpvectorizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-speculatearoundphis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-speculatearoundphis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-speculativeexecution" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-speculativeexecution" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-sroa" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-sroa" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-straightlinestrengthreduce-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-straightlinestrengthreduce-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-straightlinestrengthreduce-nvptx" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-straightlinestrengthreduce-nvptx" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-straightlinestrengthreduce-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-straightlinestrengthreduce-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-straightlinestrengthreduce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-straightlinestrengthreduce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-stripdeadprototypes" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-stripdeadprototypes" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-stripsymbols" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-stripsymbols" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-structurizecfg-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-structurizecfg-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-structurizecfg-workarounds" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-structurizecfg-workarounds" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-structurizecfg" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-structurizecfg" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-syntheticcountspropagation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-syntheticcountspropagation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-tailcallelim" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-tailcallelim" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-thinltobitcodewriter-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-thinltobitcodewriter-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-thinltobitcodewriter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-thinltobitcodewriter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-typepromotion-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-typepromotion-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-typepromotion" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-typepromotion" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-unifyfunctionexitnodes" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-unifyfunctionexitnodes" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-unifyloopexits" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-unifyloopexits" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-uniqueinternallinkagenames" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-uniqueinternallinkagenames" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-util-debugify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-util-debugify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-util-predicateinfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-util-predicateinfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-util" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-util" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-vectorcombine-aarch64" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-vectorcombine-aarch64" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-vectorcombine-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-vectorcombine-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-vectorcombine-hexagon" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-vectorcombine-hexagon" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-vectorcombine-x86" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-vectorcombine-x86" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-vectorcombine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-vectorcombine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms-wholeprogramdevirt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms-wholeprogramdevirt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-transforms" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-transforms" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-unit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-unit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-verifier-amdgpu" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-verifier-amdgpu" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-verifier-arm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-verifier-arm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-verifier-mips" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-verifier-mips" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-verifier-systemz" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-verifier-systemz" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-verifier" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-verifier" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm-yamlparser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm-yamlparser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-llvm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check-llvm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="check" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cmake-exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="cmake-exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="count" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="count" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="count">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="distribution" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="distribution" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="dsymutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="dsymutil" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="dsymutil">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="gtest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="gtest_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64AsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64AsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64AsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64AsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64CodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64CodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Desc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Desc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Disassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Disassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Info-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Info-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Utils-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Utils-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAArch64Utils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAArch64Utils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUUtils-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUUtils-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAMDGPUUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAMDGPUUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMUtils-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMUtils-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMARMUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMARMUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAVRAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAVRAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAVRAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAVRAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAVRCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAVRCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAVRCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAVRCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAVRDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAVRDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAVRDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAVRDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAVRDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAVRDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAVRDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAVRDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAVRInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAVRInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAVRInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAVRInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAggressiveInstCombine-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAggressiveInstCombine-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAggressiveInstCombine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAggressiveInstCombine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAnalysis-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAnalysis-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAnalysis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAnalysis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAsmPrinter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAsmPrinter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMAsmPrinter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBPFInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBPFInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBinaryFormat-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBinaryFormat-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBinaryFormat" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBinaryFormat" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBitReader-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBitReader-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBitReader" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBitReader" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBitWriter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBitWriter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBitWriter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBitWriter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBitstreamReader-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBitstreamReader-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMBitstreamReader" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMBitstreamReader" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCFGuard-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCFGuard-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCFGuard" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCFGuard" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCore-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCore-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCore" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCore" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCoroutines-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCoroutines-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCoroutines" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCoroutines" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCoverage-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCoverage-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMCoverage" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMCoverage" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDWARFLinker-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDWARFLinker-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDWARFLinker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDWARFLinker" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoCodeView-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoCodeView-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoCodeView" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoCodeView" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoDWARF-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoDWARF-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoDWARF" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoDWARF" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoGSYM-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoGSYM-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoGSYM" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoGSYM" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoMSF-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoMSF-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoMSF" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoMSF" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoPDB-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoPDB-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDebugInfoPDB" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDebugInfoPDB" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDemangle-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDemangle-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDemangle" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDemangle" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDlltoolDriver-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDlltoolDriver-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMDlltoolDriver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMDlltoolDriver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMExecutionEngine-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMExecutionEngine-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMExecutionEngine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMExecutionEngine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMExtensions-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMExtensions-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMExtensions" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMExtensions" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMFileCheck-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMFileCheck-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMFileCheck" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMFileCheck" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMFrontendOpenACC-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMFrontendOpenACC-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMFrontendOpenACC" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMFrontendOpenACC" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMFrontendOpenMP-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMFrontendOpenMP-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMFrontendOpenMP" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMFrontendOpenMP" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMFuzzMutate-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMFuzzMutate-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMFuzzMutate" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMFuzzMutate" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMGlobalISel-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMGlobalISel-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMGlobalISel" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMGlobalISel" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHelloNew-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHelloNew-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHelloNew" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHelloNew" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMHexagonInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMHexagonInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMIRReader-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMIRReader-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMIRReader" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMIRReader" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInstCombine-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInstCombine-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInstCombine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInstCombine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInstrumentation-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInstrumentation-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInstrumentation" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInstrumentation" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInterfaceStub-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInterfaceStub-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInterfaceStub" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInterfaceStub" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInterpreter-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInterpreter-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMInterpreter" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMInterpreter" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMJITLink-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMJITLink-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMJITLink" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMJITLink" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLTO-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLTO-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLTO" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLTO" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLanaiInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLanaiInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLibDriver-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLibDriver-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLibDriver" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLibDriver" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLineEditor-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLineEditor-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLineEditor" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLineEditor" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLinker-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLinker-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMLinker" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMLinker" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMC-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMC-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMC" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMC" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCA-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCA-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCA" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCA" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCJIT-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCJIT-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCJIT" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMCParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMCParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMIRParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMIRParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMIRParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMIRParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430AsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430AsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430AsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430AsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430CodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430CodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430Desc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430Desc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430Disassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430Disassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430Disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430Disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430Info-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430Info-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMSP430Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMSP430Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMMipsInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMMipsInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMNVPTXInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMNVPTXInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObjCARCOpts-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObjCARCOpts-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObjCARCOpts" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObjCARCOpts" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObject-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObject-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObject" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObject" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObjectYAML-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObjectYAML-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMObjectYAML" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMObjectYAML" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMOption-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMOption-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMOption" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMOption" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMOrcError-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMOrcError-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMOrcError" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMOrcError" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMOrcJIT-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMOrcJIT-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMOrcJIT" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMOrcJIT" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPasses-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPasses-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPasses" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPasses" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMPowerPCInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMPowerPCInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMProfileData-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMProfileData-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMProfileData" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMProfileData" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVUtils-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVUtils-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRISCVUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRISCVUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRemarks-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRemarks-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRemarks" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRemarks" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRuntimeDyld-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRuntimeDyld-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMRuntimeDyld" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMRuntimeDyld" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMScalarOpts-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMScalarOpts-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMScalarOpts" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMScalarOpts" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSelectionDAG-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSelectionDAG-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSelectionDAG" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSelectionDAG" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSparcInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSparcInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSupport-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSupport-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSupport" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSupport" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSymbolize-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSymbolize-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSymbolize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSymbolize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMSystemZInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMSystemZInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTableGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTableGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTableGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTableGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTarget-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTarget-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTarget" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTarget" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTextAPI-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTextAPI-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTextAPI" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTextAPI" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTransformUtils-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTransformUtils-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMTransformUtils" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMTransformUtils" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMVectorize-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMVectorize-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMVectorize" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMVectorize" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWebAssemblyAsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWebAssemblyAsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWebAssemblyAsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWebAssemblyAsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWebAssemblyCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWebAssemblyCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWebAssemblyCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWebAssemblyCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWebAssemblyDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWebAssemblyDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWebAssemblyDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWebAssemblyDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWebAssemblyDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWebAssemblyDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWebAssemblyDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWebAssemblyDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWebAssemblyInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWebAssemblyInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWebAssemblyInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWebAssemblyInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWindowsManifest-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWindowsManifest-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMWindowsManifest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMWindowsManifest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86AsmParser-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86AsmParser-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86AsmParser" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86AsmParser" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86CodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86CodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86CodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86CodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Desc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Desc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Desc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Desc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Disassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Disassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Disassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Disassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Info-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Info-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMX86Info" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMX86Info" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreCodeGen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreCodeGen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreCodeGen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreCodeGen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreDesc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreDesc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreDesc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreDesc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreDisassembler-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreDisassembler-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreDisassembler" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreDisassembler" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreInfo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreInfo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXCoreInfo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXCoreInfo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXRay-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXRay-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMXRay" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMXRay" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMipo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMipo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LLVMipo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LLVMipo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LTO-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LTO-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-LTO" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-LTO" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-Remarks-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-Remarks-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-Remarks" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-Remarks" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-SLLVM-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-SLLVM-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-SLLVM" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-SLLVM" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-SancusModuleCreator-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-SancusModuleCreator-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-SancusModuleCreator" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-SancusModuleCreator" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-bugpoint-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-bugpoint-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-bugpoint" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-bugpoint" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-cmake-exports-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-cmake-exports-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-cmake-exports" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-cmake-exports" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-distribution-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-distribution-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-distribution" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-distribution" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-dsymutil-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-dsymutil-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-dsymutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-dsymutil" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-lli-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-lli-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-lli" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-lli" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-addr2line-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-addr2line-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-addr2line" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-addr2line" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ar-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ar-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ar" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ar" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-as-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-as-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-as" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-as" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-bcanalyzer-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-bcanalyzer-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-bcanalyzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-bcanalyzer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-bitcode-strip-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-bitcode-strip-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-bitcode-strip" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-bitcode-strip" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-c-test-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-c-test-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-c-test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-c-test" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cat-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cat-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cat" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cat" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cfi-verify-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cfi-verify-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cfi-verify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cfi-verify" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-config-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-config-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-config" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-config" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cov-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cov-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cov" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cvtres-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cvtres-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cvtres" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cvtres" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cxxdump-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cxxdump-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cxxdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cxxdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cxxfilt-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cxxfilt-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cxxfilt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cxxfilt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cxxmap-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cxxmap-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-cxxmap" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-cxxmap" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-diff-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-diff-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-diff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-diff" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dis-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dis-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dlltool-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dlltool-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dlltool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dlltool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dwarfdump-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dwarfdump-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dwarfdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dwarfdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dwp-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dwp-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-dwp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-dwp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-elfabi-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-elfabi-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-elfabi" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-elfabi" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-exegesis-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-exegesis-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-exegesis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-exegesis" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-extract-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-extract-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-extract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-extract" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-gsymutil-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-gsymutil-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-gsymutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-gsymutil" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-headers-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-headers-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ifs-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ifs-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ifs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ifs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-install-name-tool-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-install-name-tool-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-install-name-tool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-install-name-tool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-jitlink-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-jitlink-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-jitlink" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-jitlink" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lib-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lib-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-libraries-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-libraries-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-libraries" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-libraries" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-libtool-darwin-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-libtool-darwin-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-libtool-darwin" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-libtool-darwin" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-link-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-link-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-link" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-link" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lipo-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lipo-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lipo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lipo" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lto-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lto-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lto" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lto2-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lto2-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-lto2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-lto2" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mca-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mca-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mca" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mca" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ml-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ml-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ml" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-modextract-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-modextract-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-modextract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-modextract" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mt-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mt-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-mt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-mt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-nm-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-nm-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-nm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-nm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-objcopy-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-objcopy-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-objcopy" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-objcopy" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-objdump-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-objdump-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-objdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-objdump" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-opt-report-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-opt-report-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-opt-report" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-opt-report" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-pdbutil-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-pdbutil-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-pdbutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-pdbutil" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-profdata-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-profdata-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-profdata" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-profdata" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ranlib-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ranlib-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-ranlib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-ranlib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-rc-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-rc-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-rc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-rc" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-readelf-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-readelf-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-readelf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-readelf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-readobj-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-readobj-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-readobj" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-readobj" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-reduce-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-reduce-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-reduce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-reduce" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-rtdyld-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-rtdyld-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-rtdyld" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-rtdyld" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-size-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-size-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-size" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-size" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-split-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-split-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-split" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-split" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-stress-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-stress-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-stress" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-stress" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-strings-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-strings-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-strings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-strings" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-strip-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-strip-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-strip" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-strip" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-symbolizer-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-symbolizer-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-symbolizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-symbolizer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-tblgen-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-tblgen-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-tblgen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-tblgen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-undname-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-undname-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-undname" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-undname" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-xray-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-xray-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-xray" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-llvm-xray" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-opt-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-opt-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-opt-viewer-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-opt-viewer-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-opt-viewer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-opt-viewer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-opt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-opt" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-sancov-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-sancov-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-sancov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-sancov" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-sanstats-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-sanstats-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-sanstats" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-sanstats" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-split-file-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-split-file-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-split-file" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-split-file" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-verify-uselistorder-stripped" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-verify-uselistorder-stripped" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-verify-uselistorder" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="install-verify-uselistorder" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="intrinsics_gen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="intrinsics_gen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llc" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="lli-child-target" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="lli-child-target" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="lli-child-target">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="lli" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="lli" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="lli">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-PerfectShuffle" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-PerfectShuffle" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-PerfectShuffle">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-addr2line" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-addr2line" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-ar" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-ar" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-ar">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-as" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-as" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-as">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-bcanalyzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-bcanalyzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-bcanalyzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-bitcode-strip" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-bitcode-strip" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-c-test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-c-test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-c-test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cat" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cat" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cat">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cfi-verify" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cfi-verify" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cfi-verify">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-config" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-config" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-config">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cov" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cov">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cvtres" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cvtres" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cvtres">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cxxdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cxxdump" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cxxdump">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cxxfilt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cxxfilt" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cxxfilt">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cxxmap" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-cxxmap" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-cxxmap">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-diff" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-diff" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-diff">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-dis" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-dis">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dlltool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-dlltool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dwarfdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-dwarfdump" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-dwarfdump">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dwp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-dwp" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-dwp">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-elfabi" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-elfabi" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-elfabi">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-exegesis" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-exegesis" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-exegesis">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-extract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-extract" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-extract">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-gsymutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-gsymutil" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-gsymutil">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-headers" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-headers" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-ifs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-ifs" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-ifs">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-install-name-tool" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-install-name-tool" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-isel-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-isel-fuzzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-isel-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-itanium-demangle-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-itanium-demangle-fuzzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-itanium-demangle-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-jitlink" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-jitlink" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-jitlink">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-lib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-lib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-libraries" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-libraries" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-libtool-darwin" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-libtool-darwin" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-libtool-darwin">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-link" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-link" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-link">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-lipo" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-lipo" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-lipo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-locstats" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-locstats" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-lto" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-lto" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-lto">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-lto2" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-lto2" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-lto2">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-mc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-mc" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-mc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-mca" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-mca" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-mca">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-microsoft-demangle-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-microsoft-demangle-fuzzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-microsoft-demangle-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-ml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-ml" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-ml">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-modextract" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-modextract" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-modextract">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-mt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-mt" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-mt">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-nm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-nm" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-nm">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-objcopy" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-objcopy" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-objcopy">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-objdump" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-objdump" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-objdump">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-opt-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-opt-fuzzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-opt-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-opt-report" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-opt-report" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-opt-report">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-pdbutil" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-pdbutil" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-pdbutil">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-profdata" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-profdata" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-profdata">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-ranlib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-ranlib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-rc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-rc" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-rc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-readelf" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-readelf" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-readobj" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-readobj" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-readobj">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-reduce" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-reduce" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-reduce">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-rtdyld" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-rtdyld" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-rtdyld">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-size" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-size" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-size">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-special-case-list-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-special-case-list-fuzzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-special-case-list-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-split" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-split" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-split">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-stress" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-stress" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-stress">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-strings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-strings" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-strings">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-strip" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-strip" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-symbolizer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-symbolizer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-symbolizer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-tblgen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-tblgen" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-tblgen">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-test-depends" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-test-depends" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-undname" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-undname" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-undname">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-xray" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-xray" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-xray">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-yaml-numeric-parser-fuzzer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm-yaml-numeric-parser-fuzzer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="llvm-yaml-numeric-parser-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm_vcsrevision_h" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="llvm_vcsrevision_h" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="not" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="not" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="not">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="obj2yaml" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="obj2yaml" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="obj2yaml">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="obj.llvm-tblgen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="obj.llvm-tblgen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ocaml_all" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ocaml_all" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ocaml_make_directory" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="ocaml_make_directory" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="omp_cpp" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="omp_cpp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="omp_gen" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="omp_gen" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="opt-viewer" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="opt-viewer" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="opt" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="opt" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="opt">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="prepare-check-lit" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="prepare-check-lit" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sancov" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="sancov" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="sancov">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sanstats" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="sanstats" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="sanstats">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="split-file" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="split-file" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="split-file">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="srpm" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="srpm" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="test-depends" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="test-depends" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="verify-uselistorder" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="verify-uselistorder" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="verify-uselistorder">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="yaml-bench" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="yaml-bench" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="yaml-bench">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="yaml2obj" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="LLVM" TARGET_NAME="yaml2obj" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="LLVM" RUN_TARGET_NAME="yaml2obj">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.check-all" />
      <item itemvalue="CMake Application.distribution" />
      <item itemvalue="CMake Application.install-distribution" />
      <item itemvalue="CMake Application.install-distribution-stripped" />
      <item itemvalue="CMake Application.install-llvm-headers" />
      <item itemvalue="CMake Application.install-llvm-headers-stripped" />
      <item itemvalue="CMake Application.install-llvm-libraries" />
      <item itemvalue="CMake Application.install-llvm-libraries-stripped" />
      <item itemvalue="CMake Application.llvm-headers" />
      <item itemvalue="CMake Application.llvm-libraries" />
      <item itemvalue="CMake Application.ocaml_all" />
      <item itemvalue="CMake Application.ocaml_make_directory" />
      <item itemvalue="CMake Application.srpm" />
      <item itemvalue="CMake Application.test-depends" />
      <item itemvalue="CMake Application.DummyYAML" />
      <item itemvalue="CMake Application.cmake-exports" />
      <item itemvalue="CMake Application.install-cmake-exports" />
      <item itemvalue="CMake Application.install-cmake-exports-stripped" />
      <item itemvalue="CMake Application.BrainF" />
      <item itemvalue="CMake Application.Bye" />
      <item itemvalue="CMake Application.Fibonacci" />
      <item itemvalue="CMake Application.HowToUseJIT" />
      <item itemvalue="CMake Application.HowToUseLLJIT" />
      <item itemvalue="CMake Application.ExampleIRTransforms" />
      <item itemvalue="CMake Application.Kaleidoscope" />
      <item itemvalue="CMake Application.BuildingAJIT-Ch1" />
      <item itemvalue="CMake Application.BuildingAJIT-Ch2" />
      <item itemvalue="CMake Application.BuildingAJIT-Ch3" />
      <item itemvalue="CMake Application.BuildingAJIT-Ch4" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch2" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch3" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch4" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch5" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch6" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch7" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch8" />
      <item itemvalue="CMake Application.Kaleidoscope-Ch9" />
      <item itemvalue="CMake Application.ModuleMaker" />
      <item itemvalue="CMake Application.LLJITDumpObjects" />
      <item itemvalue="CMake Application.LLJITWithCustomObjectLinkingLayer" />
      <item itemvalue="CMake Application.LLJITWithGDBRegistrationListener" />
      <item itemvalue="CMake Application.LLJITWithInitializers" />
      <item itemvalue="CMake Application.LLJITWithLazyReexports" />
      <item itemvalue="CMake Application.LLJITWithObjectCache" />
      <item itemvalue="CMake Application.LLJITWithObjectLinkingLayerPlugin" />
      <item itemvalue="CMake Application.LLJITWithOptimizingIRTransform" />
      <item itemvalue="CMake Application.LLJITWithTargetProcessControl" />
      <item itemvalue="CMake Application.LLJITWithThinLTOSummaries" />
      <item itemvalue="CMake Application.OrcV2CBindingsAddObjectFile" />
      <item itemvalue="CMake Application.OrcV2CBindingsBasicUsage" />
      <item itemvalue="CMake Application.OrcV2CBindingsReflectProcessSymbols" />
      <item itemvalue="CMake Application.OrcV2CBindingsRemovableCode" />
      <item itemvalue="CMake Application.ParallelJIT" />
      <item itemvalue="CMake Application.SpeculativeJIT" />
      <item itemvalue="CMake Application.acc_gen" />
      <item itemvalue="CMake Application.omp_gen" />
      <item itemvalue="CMake Application.intrinsics_gen" />
      <item itemvalue="CMake Application.llvm_vcsrevision_h" />
      <item itemvalue="CMake Application.install-LLVMAnalysis" />
      <item itemvalue="CMake Application.install-LLVMAnalysis-stripped" />
      <item itemvalue="CMake Application.LLVMAnalysis" />
      <item itemvalue="CMake Application.install-LLVMAsmParser" />
      <item itemvalue="CMake Application.install-LLVMAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMAsmParser" />
      <item itemvalue="CMake Application.install-LLVMBinaryFormat" />
      <item itemvalue="CMake Application.install-LLVMBinaryFormat-stripped" />
      <item itemvalue="CMake Application.LLVMBinaryFormat" />
      <item itemvalue="CMake Application.install-LLVMBitReader" />
      <item itemvalue="CMake Application.install-LLVMBitReader-stripped" />
      <item itemvalue="CMake Application.LLVMBitReader" />
      <item itemvalue="CMake Application.install-LLVMBitWriter" />
      <item itemvalue="CMake Application.install-LLVMBitWriter-stripped" />
      <item itemvalue="CMake Application.LLVMBitWriter" />
      <item itemvalue="CMake Application.install-LLVMBitstreamReader" />
      <item itemvalue="CMake Application.install-LLVMBitstreamReader-stripped" />
      <item itemvalue="CMake Application.LLVMBitstreamReader" />
      <item itemvalue="CMake Application.install-LLVMCodeGen" />
      <item itemvalue="CMake Application.install-LLVMCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMCodeGen" />
      <item itemvalue="CMake Application.install-LLVMAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMAsmPrinter-stripped" />
      <item itemvalue="CMake Application.LLVMAsmPrinter" />
      <item itemvalue="CMake Application.install-LLVMGlobalISel" />
      <item itemvalue="CMake Application.install-LLVMGlobalISel-stripped" />
      <item itemvalue="CMake Application.LLVMGlobalISel" />
      <item itemvalue="CMake Application.install-LLVMMIRParser" />
      <item itemvalue="CMake Application.install-LLVMMIRParser-stripped" />
      <item itemvalue="CMake Application.LLVMMIRParser" />
      <item itemvalue="CMake Application.install-LLVMSelectionDAG" />
      <item itemvalue="CMake Application.install-LLVMSelectionDAG-stripped" />
      <item itemvalue="CMake Application.LLVMSelectionDAG" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoCodeView" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoCodeView-stripped" />
      <item itemvalue="CMake Application.LLVMDebugInfoCodeView" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoDWARF" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoDWARF-stripped" />
      <item itemvalue="CMake Application.LLVMDebugInfoDWARF" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoGSYM" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoGSYM-stripped" />
      <item itemvalue="CMake Application.LLVMDebugInfoGSYM" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoMSF" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoMSF-stripped" />
      <item itemvalue="CMake Application.LLVMDebugInfoMSF" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoPDB" />
      <item itemvalue="CMake Application.install-LLVMDebugInfoPDB-stripped" />
      <item itemvalue="CMake Application.LLVMDebugInfoPDB" />
      <item itemvalue="CMake Application.install-LLVMSymbolize" />
      <item itemvalue="CMake Application.install-LLVMSymbolize-stripped" />
      <item itemvalue="CMake Application.LLVMSymbolize" />
      <item itemvalue="CMake Application.install-LLVMDemangle" />
      <item itemvalue="CMake Application.install-LLVMDemangle-stripped" />
      <item itemvalue="CMake Application.LLVMDemangle" />
      <item itemvalue="CMake Application.install-LLVMDWARFLinker" />
      <item itemvalue="CMake Application.install-LLVMDWARFLinker-stripped" />
      <item itemvalue="CMake Application.LLVMDWARFLinker" />
      <item itemvalue="CMake Application.install-LLVMExecutionEngine" />
      <item itemvalue="CMake Application.install-LLVMExecutionEngine-stripped" />
      <item itemvalue="CMake Application.LLVMExecutionEngine" />
      <item itemvalue="CMake Application.install-LLVMInterpreter" />
      <item itemvalue="CMake Application.install-LLVMInterpreter-stripped" />
      <item itemvalue="CMake Application.LLVMInterpreter" />
      <item itemvalue="CMake Application.install-LLVMJITLink" />
      <item itemvalue="CMake Application.install-LLVMJITLink-stripped" />
      <item itemvalue="CMake Application.LLVMJITLink" />
      <item itemvalue="CMake Application.install-LLVMMCJIT" />
      <item itemvalue="CMake Application.install-LLVMMCJIT-stripped" />
      <item itemvalue="CMake Application.LLVMMCJIT" />
      <item itemvalue="CMake Application.install-LLVMOrcJIT" />
      <item itemvalue="CMake Application.install-LLVMOrcJIT-stripped" />
      <item itemvalue="CMake Application.LLVMOrcJIT" />
      <item itemvalue="CMake Application.install-LLVMOrcError" />
      <item itemvalue="CMake Application.install-LLVMOrcError-stripped" />
      <item itemvalue="CMake Application.LLVMOrcError" />
      <item itemvalue="CMake Application.install-LLVMRuntimeDyld" />
      <item itemvalue="CMake Application.install-LLVMRuntimeDyld-stripped" />
      <item itemvalue="CMake Application.LLVMRuntimeDyld" />
      <item itemvalue="CMake Application.install-LLVMExtensions" />
      <item itemvalue="CMake Application.install-LLVMExtensions-stripped" />
      <item itemvalue="CMake Application.LLVMExtensions" />
      <item itemvalue="CMake Application.install-LLVMFileCheck" />
      <item itemvalue="CMake Application.install-LLVMFileCheck-stripped" />
      <item itemvalue="CMake Application.LLVMFileCheck" />
      <item itemvalue="CMake Application.acc_cpp" />
      <item itemvalue="CMake Application.install-LLVMFrontendOpenACC" />
      <item itemvalue="CMake Application.install-LLVMFrontendOpenACC-stripped" />
      <item itemvalue="CMake Application.LLVMFrontendOpenACC" />
      <item itemvalue="CMake Application.install-LLVMFrontendOpenMP" />
      <item itemvalue="CMake Application.install-LLVMFrontendOpenMP-stripped" />
      <item itemvalue="CMake Application.LLVMFrontendOpenMP" />
      <item itemvalue="CMake Application.omp_cpp" />
      <item itemvalue="CMake Application.install-LLVMFuzzMutate" />
      <item itemvalue="CMake Application.install-LLVMFuzzMutate-stripped" />
      <item itemvalue="CMake Application.LLVMFuzzMutate" />
      <item itemvalue="CMake Application.install-LLVMInterfaceStub" />
      <item itemvalue="CMake Application.install-LLVMInterfaceStub-stripped" />
      <item itemvalue="CMake Application.LLVMInterfaceStub" />
      <item itemvalue="CMake Application.install-LLVMCore" />
      <item itemvalue="CMake Application.install-LLVMCore-stripped" />
      <item itemvalue="CMake Application.LLVMCore" />
      <item itemvalue="CMake Application.install-LLVMIRReader" />
      <item itemvalue="CMake Application.install-LLVMIRReader-stripped" />
      <item itemvalue="CMake Application.LLVMIRReader" />
      <item itemvalue="CMake Application.install-LLVMLineEditor" />
      <item itemvalue="CMake Application.install-LLVMLineEditor-stripped" />
      <item itemvalue="CMake Application.LLVMLineEditor" />
      <item itemvalue="CMake Application.install-LLVMLinker" />
      <item itemvalue="CMake Application.install-LLVMLinker-stripped" />
      <item itemvalue="CMake Application.LLVMLinker" />
      <item itemvalue="CMake Application.install-LLVMLTO" />
      <item itemvalue="CMake Application.install-LLVMLTO-stripped" />
      <item itemvalue="CMake Application.LLVMLTO" />
      <item itemvalue="CMake Application.install-LLVMMC" />
      <item itemvalue="CMake Application.install-LLVMMC-stripped" />
      <item itemvalue="CMake Application.LLVMMC" />
      <item itemvalue="CMake Application.install-LLVMMCDisassembler" />
      <item itemvalue="CMake Application.install-LLVMMCDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMMCDisassembler" />
      <item itemvalue="CMake Application.install-LLVMMCParser" />
      <item itemvalue="CMake Application.install-LLVMMCParser-stripped" />
      <item itemvalue="CMake Application.LLVMMCParser" />
      <item itemvalue="CMake Application.install-LLVMMCA" />
      <item itemvalue="CMake Application.install-LLVMMCA-stripped" />
      <item itemvalue="CMake Application.LLVMMCA" />
      <item itemvalue="CMake Application.install-LLVMObject" />
      <item itemvalue="CMake Application.install-LLVMObject-stripped" />
      <item itemvalue="CMake Application.LLVMObject" />
      <item itemvalue="CMake Application.install-LLVMObjectYAML" />
      <item itemvalue="CMake Application.install-LLVMObjectYAML-stripped" />
      <item itemvalue="CMake Application.LLVMObjectYAML" />
      <item itemvalue="CMake Application.install-LLVMOption" />
      <item itemvalue="CMake Application.install-LLVMOption-stripped" />
      <item itemvalue="CMake Application.LLVMOption" />
      <item itemvalue="CMake Application.install-LLVMPasses" />
      <item itemvalue="CMake Application.install-LLVMPasses-stripped" />
      <item itemvalue="CMake Application.LLVMPasses" />
      <item itemvalue="CMake Application.install-LLVMProfileData" />
      <item itemvalue="CMake Application.install-LLVMProfileData-stripped" />
      <item itemvalue="CMake Application.LLVMProfileData" />
      <item itemvalue="CMake Application.install-LLVMCoverage" />
      <item itemvalue="CMake Application.install-LLVMCoverage-stripped" />
      <item itemvalue="CMake Application.LLVMCoverage" />
      <item itemvalue="CMake Application.install-LLVMRemarks" />
      <item itemvalue="CMake Application.install-LLVMRemarks-stripped" />
      <item itemvalue="CMake Application.LLVMRemarks" />
      <item itemvalue="CMake Application.install-LLVMSupport" />
      <item itemvalue="CMake Application.install-LLVMSupport-stripped" />
      <item itemvalue="CMake Application.LLVMSupport" />
      <item itemvalue="CMake Application.install-LLVMTableGen" />
      <item itemvalue="CMake Application.install-LLVMTableGen-stripped" />
      <item itemvalue="CMake Application.LLVMTableGen" />
      <item itemvalue="CMake Application.install-LLVMTarget" />
      <item itemvalue="CMake Application.install-LLVMTarget-stripped" />
      <item itemvalue="CMake Application.LLVMTarget" />
      <item itemvalue="CMake Application.AArch64CommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMAArch64CodeGen" />
      <item itemvalue="CMake Application.install-LLVMAArch64CodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMAArch64CodeGen" />
      <item itemvalue="CMake Application.install-LLVMAArch64AsmParser" />
      <item itemvalue="CMake Application.install-LLVMAArch64AsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMAArch64AsmParser" />
      <item itemvalue="CMake Application.install-LLVMAArch64Disassembler" />
      <item itemvalue="CMake Application.install-LLVMAArch64Disassembler-stripped" />
      <item itemvalue="CMake Application.LLVMAArch64Disassembler" />
      <item itemvalue="CMake Application.install-LLVMAArch64Desc" />
      <item itemvalue="CMake Application.install-LLVMAArch64Desc-stripped" />
      <item itemvalue="CMake Application.LLVMAArch64Desc" />
      <item itemvalue="CMake Application.install-LLVMAArch64Info" />
      <item itemvalue="CMake Application.install-LLVMAArch64Info-stripped" />
      <item itemvalue="CMake Application.LLVMAArch64Info" />
      <item itemvalue="CMake Application.install-LLVMAArch64Utils" />
      <item itemvalue="CMake Application.install-LLVMAArch64Utils-stripped" />
      <item itemvalue="CMake Application.LLVMAArch64Utils" />
      <item itemvalue="CMake Application.AMDGPUCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUCodeGen" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUCodeGen-stripped" />
      <item itemvalue="CMake Application.InstCombineTableGen" />
      <item itemvalue="CMake Application.LLVMAMDGPUCodeGen" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUAsmParser" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMAMDGPUAsmParser" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUDisassembler" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMAMDGPUDisassembler" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUDesc" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUDesc-stripped" />
      <item itemvalue="CMake Application.LLVMAMDGPUDesc" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUInfo" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUInfo-stripped" />
      <item itemvalue="CMake Application.LLVMAMDGPUInfo" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUUtils" />
      <item itemvalue="CMake Application.install-LLVMAMDGPUUtils-stripped" />
      <item itemvalue="CMake Application.LLVMAMDGPUUtils" />
      <item itemvalue="CMake Application.ARMCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMARMCodeGen" />
      <item itemvalue="CMake Application.install-LLVMARMCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMARMCodeGen" />
      <item itemvalue="CMake Application.install-LLVMARMAsmParser" />
      <item itemvalue="CMake Application.install-LLVMARMAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMARMAsmParser" />
      <item itemvalue="CMake Application.install-LLVMARMDisassembler" />
      <item itemvalue="CMake Application.install-LLVMARMDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMARMDisassembler" />
      <item itemvalue="CMake Application.install-LLVMARMDesc" />
      <item itemvalue="CMake Application.install-LLVMARMDesc-stripped" />
      <item itemvalue="CMake Application.LLVMARMDesc" />
      <item itemvalue="CMake Application.install-LLVMARMInfo" />
      <item itemvalue="CMake Application.install-LLVMARMInfo-stripped" />
      <item itemvalue="CMake Application.LLVMARMInfo" />
      <item itemvalue="CMake Application.install-LLVMARMUtils" />
      <item itemvalue="CMake Application.install-LLVMARMUtils-stripped" />
      <item itemvalue="CMake Application.LLVMARMUtils" />
      <item itemvalue="CMake Application.AVRCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMAVRCodeGen" />
      <item itemvalue="CMake Application.install-LLVMAVRCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMAVRCodeGen" />
      <item itemvalue="CMake Application.install-LLVMAVRAsmParser" />
      <item itemvalue="CMake Application.install-LLVMAVRAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMAVRAsmParser" />
      <item itemvalue="CMake Application.install-LLVMAVRDisassembler" />
      <item itemvalue="CMake Application.install-LLVMAVRDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMAVRDisassembler" />
      <item itemvalue="CMake Application.install-LLVMAVRDesc" />
      <item itemvalue="CMake Application.install-LLVMAVRDesc-stripped" />
      <item itemvalue="CMake Application.LLVMAVRDesc" />
      <item itemvalue="CMake Application.install-LLVMAVRInfo" />
      <item itemvalue="CMake Application.install-LLVMAVRInfo-stripped" />
      <item itemvalue="CMake Application.LLVMAVRInfo" />
      <item itemvalue="CMake Application.BPFCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMBPFCodeGen" />
      <item itemvalue="CMake Application.install-LLVMBPFCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMBPFCodeGen" />
      <item itemvalue="CMake Application.install-LLVMBPFAsmParser" />
      <item itemvalue="CMake Application.install-LLVMBPFAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMBPFAsmParser" />
      <item itemvalue="CMake Application.install-LLVMBPFDisassembler" />
      <item itemvalue="CMake Application.install-LLVMBPFDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMBPFDisassembler" />
      <item itemvalue="CMake Application.install-LLVMBPFDesc" />
      <item itemvalue="CMake Application.install-LLVMBPFDesc-stripped" />
      <item itemvalue="CMake Application.LLVMBPFDesc" />
      <item itemvalue="CMake Application.install-LLVMBPFInfo" />
      <item itemvalue="CMake Application.install-LLVMBPFInfo-stripped" />
      <item itemvalue="CMake Application.LLVMBPFInfo" />
      <item itemvalue="CMake Application.HexagonCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMHexagonCodeGen" />
      <item itemvalue="CMake Application.install-LLVMHexagonCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMHexagonCodeGen" />
      <item itemvalue="CMake Application.install-LLVMHexagonAsmParser" />
      <item itemvalue="CMake Application.install-LLVMHexagonAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMHexagonAsmParser" />
      <item itemvalue="CMake Application.install-LLVMHexagonDisassembler" />
      <item itemvalue="CMake Application.install-LLVMHexagonDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMHexagonDisassembler" />
      <item itemvalue="CMake Application.install-LLVMHexagonDesc" />
      <item itemvalue="CMake Application.install-LLVMHexagonDesc-stripped" />
      <item itemvalue="CMake Application.LLVMHexagonDesc" />
      <item itemvalue="CMake Application.install-LLVMHexagonInfo" />
      <item itemvalue="CMake Application.install-LLVMHexagonInfo-stripped" />
      <item itemvalue="CMake Application.LLVMHexagonInfo" />
      <item itemvalue="CMake Application.install-LLVMLanaiCodeGen" />
      <item itemvalue="CMake Application.install-LLVMLanaiCodeGen-stripped" />
      <item itemvalue="CMake Application.LanaiCommonTableGen" />
      <item itemvalue="CMake Application.LLVMLanaiCodeGen" />
      <item itemvalue="CMake Application.install-LLVMLanaiAsmParser" />
      <item itemvalue="CMake Application.install-LLVMLanaiAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMLanaiAsmParser" />
      <item itemvalue="CMake Application.install-LLVMLanaiDisassembler" />
      <item itemvalue="CMake Application.install-LLVMLanaiDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMLanaiDisassembler" />
      <item itemvalue="CMake Application.install-LLVMLanaiDesc" />
      <item itemvalue="CMake Application.install-LLVMLanaiDesc-stripped" />
      <item itemvalue="CMake Application.LLVMLanaiDesc" />
      <item itemvalue="CMake Application.install-LLVMLanaiInfo" />
      <item itemvalue="CMake Application.install-LLVMLanaiInfo-stripped" />
      <item itemvalue="CMake Application.LLVMLanaiInfo" />
      <item itemvalue="CMake Application.install-LLVMMipsCodeGen" />
      <item itemvalue="CMake Application.install-LLVMMipsCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMMipsCodeGen" />
      <item itemvalue="CMake Application.MipsCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMMipsAsmParser" />
      <item itemvalue="CMake Application.install-LLVMMipsAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMMipsAsmParser" />
      <item itemvalue="CMake Application.install-LLVMMipsDisassembler" />
      <item itemvalue="CMake Application.install-LLVMMipsDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMMipsDisassembler" />
      <item itemvalue="CMake Application.install-LLVMMipsDesc" />
      <item itemvalue="CMake Application.install-LLVMMipsDesc-stripped" />
      <item itemvalue="CMake Application.LLVMMipsDesc" />
      <item itemvalue="CMake Application.install-LLVMMipsInfo" />
      <item itemvalue="CMake Application.install-LLVMMipsInfo-stripped" />
      <item itemvalue="CMake Application.LLVMMipsInfo" />
      <item itemvalue="CMake Application.install-LLVMMSP430CodeGen" />
      <item itemvalue="CMake Application.install-LLVMMSP430CodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMMSP430CodeGen" />
      <item itemvalue="CMake Application.MSP430CommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMMSP430AsmParser" />
      <item itemvalue="CMake Application.install-LLVMMSP430AsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMMSP430AsmParser" />
      <item itemvalue="CMake Application.install-LLVMMSP430Disassembler" />
      <item itemvalue="CMake Application.install-LLVMMSP430Disassembler-stripped" />
      <item itemvalue="CMake Application.LLVMMSP430Disassembler" />
      <item itemvalue="CMake Application.install-LLVMMSP430Desc" />
      <item itemvalue="CMake Application.install-LLVMMSP430Desc-stripped" />
      <item itemvalue="CMake Application.LLVMMSP430Desc" />
      <item itemvalue="CMake Application.install-LLVMMSP430Info" />
      <item itemvalue="CMake Application.install-LLVMMSP430Info-stripped" />
      <item itemvalue="CMake Application.LLVMMSP430Info" />
      <item itemvalue="CMake Application.install-LLVMNVPTXCodeGen" />
      <item itemvalue="CMake Application.install-LLVMNVPTXCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMNVPTXCodeGen" />
      <item itemvalue="CMake Application.NVPTXCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMNVPTXDesc" />
      <item itemvalue="CMake Application.install-LLVMNVPTXDesc-stripped" />
      <item itemvalue="CMake Application.LLVMNVPTXDesc" />
      <item itemvalue="CMake Application.install-LLVMNVPTXInfo" />
      <item itemvalue="CMake Application.install-LLVMNVPTXInfo-stripped" />
      <item itemvalue="CMake Application.LLVMNVPTXInfo" />
      <item itemvalue="CMake Application.install-LLVMPowerPCCodeGen" />
      <item itemvalue="CMake Application.install-LLVMPowerPCCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMPowerPCCodeGen" />
      <item itemvalue="CMake Application.PowerPCCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMPowerPCAsmParser" />
      <item itemvalue="CMake Application.install-LLVMPowerPCAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMPowerPCAsmParser" />
      <item itemvalue="CMake Application.install-LLVMPowerPCDisassembler" />
      <item itemvalue="CMake Application.install-LLVMPowerPCDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMPowerPCDisassembler" />
      <item itemvalue="CMake Application.install-LLVMPowerPCDesc" />
      <item itemvalue="CMake Application.install-LLVMPowerPCDesc-stripped" />
      <item itemvalue="CMake Application.LLVMPowerPCDesc" />
      <item itemvalue="CMake Application.install-LLVMPowerPCInfo" />
      <item itemvalue="CMake Application.install-LLVMPowerPCInfo-stripped" />
      <item itemvalue="CMake Application.LLVMPowerPCInfo" />
      <item itemvalue="CMake Application.install-LLVMRISCVCodeGen" />
      <item itemvalue="CMake Application.install-LLVMRISCVCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMRISCVCodeGen" />
      <item itemvalue="CMake Application.RISCVCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMRISCVAsmParser" />
      <item itemvalue="CMake Application.install-LLVMRISCVAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMRISCVAsmParser" />
      <item itemvalue="CMake Application.install-LLVMRISCVDisassembler" />
      <item itemvalue="CMake Application.install-LLVMRISCVDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMRISCVDisassembler" />
      <item itemvalue="CMake Application.install-LLVMRISCVDesc" />
      <item itemvalue="CMake Application.install-LLVMRISCVDesc-stripped" />
      <item itemvalue="CMake Application.LLVMRISCVDesc" />
      <item itemvalue="CMake Application.install-LLVMRISCVInfo" />
      <item itemvalue="CMake Application.install-LLVMRISCVInfo-stripped" />
      <item itemvalue="CMake Application.LLVMRISCVInfo" />
      <item itemvalue="CMake Application.install-LLVMRISCVUtils" />
      <item itemvalue="CMake Application.install-LLVMRISCVUtils-stripped" />
      <item itemvalue="CMake Application.LLVMRISCVUtils" />
      <item itemvalue="CMake Application.install-LLVMSparcCodeGen" />
      <item itemvalue="CMake Application.install-LLVMSparcCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMSparcCodeGen" />
      <item itemvalue="CMake Application.SparcCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMSparcAsmParser" />
      <item itemvalue="CMake Application.install-LLVMSparcAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMSparcAsmParser" />
      <item itemvalue="CMake Application.install-LLVMSparcDisassembler" />
      <item itemvalue="CMake Application.install-LLVMSparcDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMSparcDisassembler" />
      <item itemvalue="CMake Application.install-LLVMSparcDesc" />
      <item itemvalue="CMake Application.install-LLVMSparcDesc-stripped" />
      <item itemvalue="CMake Application.LLVMSparcDesc" />
      <item itemvalue="CMake Application.install-LLVMSparcInfo" />
      <item itemvalue="CMake Application.install-LLVMSparcInfo-stripped" />
      <item itemvalue="CMake Application.LLVMSparcInfo" />
      <item itemvalue="CMake Application.install-LLVMSystemZCodeGen" />
      <item itemvalue="CMake Application.install-LLVMSystemZCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMSystemZCodeGen" />
      <item itemvalue="CMake Application.SystemZCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMSystemZAsmParser" />
      <item itemvalue="CMake Application.install-LLVMSystemZAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMSystemZAsmParser" />
      <item itemvalue="CMake Application.install-LLVMSystemZDisassembler" />
      <item itemvalue="CMake Application.install-LLVMSystemZDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMSystemZDisassembler" />
      <item itemvalue="CMake Application.install-LLVMSystemZDesc" />
      <item itemvalue="CMake Application.install-LLVMSystemZDesc-stripped" />
      <item itemvalue="CMake Application.LLVMSystemZDesc" />
      <item itemvalue="CMake Application.install-LLVMSystemZInfo" />
      <item itemvalue="CMake Application.install-LLVMSystemZInfo-stripped" />
      <item itemvalue="CMake Application.LLVMSystemZInfo" />
      <item itemvalue="CMake Application.install-LLVMWebAssemblyCodeGen" />
      <item itemvalue="CMake Application.install-LLVMWebAssemblyCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMWebAssemblyCodeGen" />
      <item itemvalue="CMake Application.WebAssemblyCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMWebAssemblyAsmParser" />
      <item itemvalue="CMake Application.install-LLVMWebAssemblyAsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMWebAssemblyAsmParser" />
      <item itemvalue="CMake Application.install-LLVMWebAssemblyDisassembler" />
      <item itemvalue="CMake Application.install-LLVMWebAssemblyDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMWebAssemblyDisassembler" />
      <item itemvalue="CMake Application.install-LLVMWebAssemblyDesc" />
      <item itemvalue="CMake Application.install-LLVMWebAssemblyDesc-stripped" />
      <item itemvalue="CMake Application.LLVMWebAssemblyDesc" />
      <item itemvalue="CMake Application.install-LLVMWebAssemblyInfo" />
      <item itemvalue="CMake Application.install-LLVMWebAssemblyInfo-stripped" />
      <item itemvalue="CMake Application.LLVMWebAssemblyInfo" />
      <item itemvalue="CMake Application.install-LLVMX86CodeGen" />
      <item itemvalue="CMake Application.install-LLVMX86CodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMX86CodeGen" />
      <item itemvalue="CMake Application.X86CommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMX86AsmParser" />
      <item itemvalue="CMake Application.install-LLVMX86AsmParser-stripped" />
      <item itemvalue="CMake Application.LLVMX86AsmParser" />
      <item itemvalue="CMake Application.install-LLVMX86Disassembler" />
      <item itemvalue="CMake Application.install-LLVMX86Disassembler-stripped" />
      <item itemvalue="CMake Application.LLVMX86Disassembler" />
      <item itemvalue="CMake Application.install-LLVMX86Desc" />
      <item itemvalue="CMake Application.install-LLVMX86Desc-stripped" />
      <item itemvalue="CMake Application.LLVMX86Desc" />
      <item itemvalue="CMake Application.install-LLVMX86Info" />
      <item itemvalue="CMake Application.install-LLVMX86Info-stripped" />
      <item itemvalue="CMake Application.LLVMX86Info" />
      <item itemvalue="CMake Application.install-LLVMXCoreCodeGen" />
      <item itemvalue="CMake Application.install-LLVMXCoreCodeGen-stripped" />
      <item itemvalue="CMake Application.LLVMXCoreCodeGen" />
      <item itemvalue="CMake Application.XCoreCommonTableGen" />
      <item itemvalue="CMake Application.install-LLVMXCoreDisassembler" />
      <item itemvalue="CMake Application.install-LLVMXCoreDisassembler-stripped" />
      <item itemvalue="CMake Application.LLVMXCoreDisassembler" />
      <item itemvalue="CMake Application.install-LLVMXCoreDesc" />
      <item itemvalue="CMake Application.install-LLVMXCoreDesc-stripped" />
      <item itemvalue="CMake Application.LLVMXCoreDesc" />
      <item itemvalue="CMake Application.install-LLVMXCoreInfo" />
      <item itemvalue="CMake Application.install-LLVMXCoreInfo-stripped" />
      <item itemvalue="CMake Application.LLVMXCoreInfo" />
      <item itemvalue="CMake Application.LLVMTestingSupport" />
      <item itemvalue="CMake Application.install-LLVMTextAPI" />
      <item itemvalue="CMake Application.install-LLVMTextAPI-stripped" />
      <item itemvalue="CMake Application.LLVMTextAPI" />
      <item itemvalue="CMake Application.DllOptionsTableGen" />
      <item itemvalue="CMake Application.install-LLVMDlltoolDriver" />
      <item itemvalue="CMake Application.install-LLVMDlltoolDriver-stripped" />
      <item itemvalue="CMake Application.LLVMDlltoolDriver" />
      <item itemvalue="CMake Application.install-LLVMLibDriver" />
      <item itemvalue="CMake Application.install-LLVMLibDriver-stripped" />
      <item itemvalue="CMake Application.LibOptionsTableGen" />
      <item itemvalue="CMake Application.LLVMLibDriver" />
      <item itemvalue="CMake Application.install-LLVMAggressiveInstCombine" />
      <item itemvalue="CMake Application.install-LLVMAggressiveInstCombine-stripped" />
      <item itemvalue="CMake Application.LLVMAggressiveInstCombine" />
      <item itemvalue="CMake Application.install-LLVMCFGuard" />
      <item itemvalue="CMake Application.install-LLVMCFGuard-stripped" />
      <item itemvalue="CMake Application.LLVMCFGuard" />
      <item itemvalue="CMake Application.install-LLVMCoroutines" />
      <item itemvalue="CMake Application.install-LLVMCoroutines-stripped" />
      <item itemvalue="CMake Application.LLVMCoroutines" />
      <item itemvalue="CMake Application.LLVMHello" />
      <item itemvalue="CMake Application.LLVMHello_exports" />
      <item itemvalue="CMake Application.install-LLVMHelloNew" />
      <item itemvalue="CMake Application.install-LLVMHelloNew-stripped" />
      <item itemvalue="CMake Application.LLVMHelloNew" />
      <item itemvalue="CMake Application.install-LLVMInstCombine" />
      <item itemvalue="CMake Application.install-LLVMInstCombine-stripped" />
      <item itemvalue="CMake Application.LLVMInstCombine" />
      <item itemvalue="CMake Application.install-LLVMInstrumentation" />
      <item itemvalue="CMake Application.install-LLVMInstrumentation-stripped" />
      <item itemvalue="CMake Application.LLVMInstrumentation" />
      <item itemvalue="CMake Application.install-LLVMipo" />
      <item itemvalue="CMake Application.install-LLVMipo-stripped" />
      <item itemvalue="CMake Application.LLVMipo" />
      <item itemvalue="CMake Application.install-LLVMObjCARCOpts" />
      <item itemvalue="CMake Application.install-LLVMObjCARCOpts-stripped" />
      <item itemvalue="CMake Application.LLVMObjCARCOpts" />
      <item itemvalue="CMake Application.install-SancusModuleCreator" />
      <item itemvalue="CMake Application.install-SancusModuleCreator-stripped" />
      <item itemvalue="CMake Application.SancusModuleCreator" />
      <item itemvalue="CMake Application.install-LLVMScalarOpts" />
      <item itemvalue="CMake Application.install-LLVMScalarOpts-stripped" />
      <item itemvalue="CMake Application.LLVMScalarOpts" />
      <item itemvalue="CMake Application.install-SLLVM" />
      <item itemvalue="CMake Application.install-SLLVM-stripped" />
      <item itemvalue="CMake Application.SLLVM" />
      <item itemvalue="CMake Application.install-LLVMTransformUtils" />
      <item itemvalue="CMake Application.install-LLVMTransformUtils-stripped" />
      <item itemvalue="CMake Application.LLVMTransformUtils" />
      <item itemvalue="CMake Application.install-LLVMVectorize" />
      <item itemvalue="CMake Application.install-LLVMVectorize-stripped" />
      <item itemvalue="CMake Application.LLVMVectorize" />
      <item itemvalue="CMake Application.install-LLVMWindowsManifest" />
      <item itemvalue="CMake Application.install-LLVMWindowsManifest-stripped" />
      <item itemvalue="CMake Application.LLVMWindowsManifest" />
      <item itemvalue="CMake Application.install-LLVMXRay" />
      <item itemvalue="CMake Application.install-LLVMXRay-stripped" />
      <item itemvalue="CMake Application.LLVMXRay" />
      <item itemvalue="CMake Application.check" />
      <item itemvalue="CMake Application.check-llvm" />
      <item itemvalue="CMake Application.check-llvm-analysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-aliasset" />
      <item itemvalue="CMake Application.check-llvm-analysis-assumptioncache" />
      <item itemvalue="CMake Application.check-llvm-analysis-basicaa" />
      <item itemvalue="CMake Application.check-llvm-analysis-blockfrequencyinfo" />
      <item itemvalue="CMake Application.check-llvm-analysis-branchprobabilityinfo" />
      <item itemvalue="CMake Application.check-llvm-analysis-callgraph" />
      <item itemvalue="CMake Application.check-llvm-analysis-cflaliasanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-cflaliasanalysis-andersen" />
      <item itemvalue="CMake Application.check-llvm-analysis-cflaliasanalysis-steensgaard" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-aarch64" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-arm" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-powerpc" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-riscv" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-systemz" />
      <item itemvalue="CMake Application.check-llvm-analysis-costmodel-x86" />
      <item itemvalue="CMake Application.check-llvm-analysis-ddg" />
      <item itemvalue="CMake Application.check-llvm-analysis-delinearization" />
      <item itemvalue="CMake Application.check-llvm-analysis-demandedbits" />
      <item itemvalue="CMake Application.check-llvm-analysis-dependenceanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-divergenceanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-divergenceanalysis-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-analysis-divergenceanalysis-nvptx" />
      <item itemvalue="CMake Application.check-llvm-analysis-dominancefrontier" />
      <item itemvalue="CMake Application.check-llvm-analysis-dominators" />
      <item itemvalue="CMake Application.check-llvm-analysis-functionpropertiesanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-globalsmodref" />
      <item itemvalue="CMake Application.check-llvm-analysis-irsimilarityidentifier" />
      <item itemvalue="CMake Application.check-llvm-analysis-ivusers" />
      <item itemvalue="CMake Application.check-llvm-analysis-lazycallgraph" />
      <item itemvalue="CMake Application.check-llvm-analysis-lazyvalueanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-legacydivergenceanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-legacydivergenceanalysis-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-analysis-legacydivergenceanalysis-nvptx" />
      <item itemvalue="CMake Application.check-llvm-analysis-lint" />
      <item itemvalue="CMake Application.check-llvm-analysis-loopaccessanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-loopcacheanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-loopcacheanalysis-powerpc" />
      <item itemvalue="CMake Application.check-llvm-analysis-loopinfo" />
      <item itemvalue="CMake Application.check-llvm-analysis-loopnestanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-memorydependenceanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-memoryssa" />
      <item itemvalue="CMake Application.check-llvm-analysis-mustexecute" />
      <item itemvalue="CMake Application.check-llvm-analysis-phivalues" />
      <item itemvalue="CMake Application.check-llvm-analysis-postdominators" />
      <item itemvalue="CMake Application.check-llvm-analysis-profilesummary" />
      <item itemvalue="CMake Application.check-llvm-analysis-regioninfo" />
      <item itemvalue="CMake Application.check-llvm-analysis-scalarevolution" />
      <item itemvalue="CMake Application.check-llvm-analysis-scopednoaliasaa" />
      <item itemvalue="CMake Application.check-llvm-analysis-stacksafetyanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-typebasedaliasanalysis" />
      <item itemvalue="CMake Application.check-llvm-analysis-valuetracking" />
      <item itemvalue="CMake Application.check-llvm-assembler" />
      <item itemvalue="CMake Application.check-llvm-bindings" />
      <item itemvalue="CMake Application.check-llvm-bindings-go" />
      <item itemvalue="CMake Application.check-llvm-bindings-llvm-c" />
      <item itemvalue="CMake Application.check-llvm-bindings-llvm-c-arm" />
      <item itemvalue="CMake Application.check-llvm-bindings-llvm-c-x86" />
      <item itemvalue="CMake Application.check-llvm-bindings-ocaml" />
      <item itemvalue="CMake Application.check-llvm-bitcode" />
      <item itemvalue="CMake Application.check-llvm-bugpoint" />
      <item itemvalue="CMake Application.check-llvm-codegen" />
      <item itemvalue="CMake Application.check-llvm-codegen-aarch64" />
      <item itemvalue="CMake Application.check-llvm-codegen-aarch64-globalisel" />
      <item itemvalue="CMake Application.check-llvm-codegen-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-codegen-amdgpu-globalisel" />
      <item itemvalue="CMake Application.check-llvm-codegen-arc" />
      <item itemvalue="CMake Application.check-llvm-codegen-arm" />
      <item itemvalue="CMake Application.check-llvm-codegen-arm-globalisel" />
      <item itemvalue="CMake Application.check-llvm-codegen-arm-paralleldsp" />
      <item itemvalue="CMake Application.check-llvm-codegen-arm-windows" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-atomics" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-calling-conv" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-calling-conv-c" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-features" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-inline-asm" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-integration" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-intrinsics" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-pseudo" />
      <item itemvalue="CMake Application.check-llvm-codegen-avr-relax-mem" />
      <item itemvalue="CMake Application.check-llvm-codegen-bpf" />
      <item itemvalue="CMake Application.check-llvm-codegen-bpf-btf" />
      <item itemvalue="CMake Application.check-llvm-codegen-bpf-core" />
      <item itemvalue="CMake Application.check-llvm-codegen-generic" />
      <item itemvalue="CMake Application.check-llvm-codegen-generic-mirdebugify" />
      <item itemvalue="CMake Application.check-llvm-codegen-generic-mirstripdebug" />
      <item itemvalue="CMake Application.check-llvm-codegen-hexagon" />
      <item itemvalue="CMake Application.check-llvm-codegen-hexagon-autohvx" />
      <item itemvalue="CMake Application.check-llvm-codegen-hexagon-intrinsics" />
      <item itemvalue="CMake Application.check-llvm-codegen-hexagon-loop-idiom" />
      <item itemvalue="CMake Application.check-llvm-codegen-hexagon-pipeliner" />
      <item itemvalue="CMake Application.check-llvm-codegen-hexagon-vect" />
      <item itemvalue="CMake Application.check-llvm-codegen-lanai" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-cconv" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-compactbranches" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-cstmaterialization" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-fast-isel" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-globalisel" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-globalisel-instruction-select" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-globalisel-irtranslator" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-globalisel-legalizer" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-globalisel-llvm-ir" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-globalisel-mips-prelegalizer-combiner" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-globalisel-regbankselect" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-indirect-jump-hazard" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-instverify" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-llvm-ir" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-longbranch" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-micromips-sizereduction" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-mips32r6" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-mips64r6" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-mirparser" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-msa" />
      <item itemvalue="CMake Application.check-llvm-codegen-mips-tailcall" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-aarch64" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-arm" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-generic" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-hexagon" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-mips" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-msp430" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-nvptx" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-powerpc" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-webassembly" />
      <item itemvalue="CMake Application.check-llvm-codegen-mir-x86" />
      <item itemvalue="CMake Application.check-llvm-codegen-msp430" />
      <item itemvalue="CMake Application.check-llvm-codegen-nvptx" />
      <item itemvalue="CMake Application.check-llvm-codegen-powerpc" />
      <item itemvalue="CMake Application.check-llvm-codegen-powerpc-globalisel" />
      <item itemvalue="CMake Application.check-llvm-codegen-riscv" />
      <item itemvalue="CMake Application.check-llvm-codegen-riscv-globalisel" />
      <item itemvalue="CMake Application.check-llvm-codegen-riscv-intrinsics" />
      <item itemvalue="CMake Application.check-llvm-codegen-sparc" />
      <item itemvalue="CMake Application.check-llvm-codegen-systemz" />
      <item itemvalue="CMake Application.check-llvm-codegen-systemz-large" />
      <item itemvalue="CMake Application.check-llvm-codegen-thumb" />
      <item itemvalue="CMake Application.check-llvm-codegen-thumb2" />
      <item itemvalue="CMake Application.check-llvm-codegen-thumb2-lowoverheadloops" />
      <item itemvalue="CMake Application.check-llvm-codegen-thumb2-mve-intrinsics" />
      <item itemvalue="CMake Application.check-llvm-codegen-ve" />
      <item itemvalue="CMake Application.check-llvm-codegen-webassembly" />
      <item itemvalue="CMake Application.check-llvm-codegen-wincfguard" />
      <item itemvalue="CMake Application.check-llvm-codegen-wineh" />
      <item itemvalue="CMake Application.check-llvm-codegen-x86" />
      <item itemvalue="CMake Application.check-llvm-codegen-x86-amx" />
      <item itemvalue="CMake Application.check-llvm-codegen-x86-avx512-shuffles" />
      <item itemvalue="CMake Application.check-llvm-codegen-x86-gc" />
      <item itemvalue="CMake Application.check-llvm-codegen-x86-globalisel" />
      <item itemvalue="CMake Application.check-llvm-codegen-xcore" />
      <item itemvalue="CMake Application.check-llvm-debuginfo" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-aarch64" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-arm" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-bpf" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-coff" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-coff-aarch64" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-coff-armnt" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-generic" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-lanai" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mips" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir-aarch64" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir-arm" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir-hexagon" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir-instrref" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir-mips" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir-systemz" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-mir-x86" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-msp430" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-nvptx" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-pdb" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-pdb-dia" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-pdb-native" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-powerpc" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-riscv" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-sparc" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-systemz" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-webassembly" />
      <item itemvalue="CMake Application.check-llvm-debuginfo-x86" />
      <item itemvalue="CMake Application.check-llvm-demangle" />
      <item itemvalue="CMake Application.check-llvm-examples" />
      <item itemvalue="CMake Application.check-llvm-examples-irtransforms" />
      <item itemvalue="CMake Application.check-llvm-examples-irtransforms-simplifycfg" />
      <item itemvalue="CMake Application.check-llvm-examples-kaleidoscope" />
      <item itemvalue="CMake Application.check-llvm-examples-orcv2examples" />
      <item itemvalue="CMake Application.check-llvm-executionengine" />
      <item itemvalue="CMake Application.check-llvm-executionengine-interpreter" />
      <item itemvalue="CMake Application.check-llvm-executionengine-jitlink" />
      <item itemvalue="CMake Application.check-llvm-executionengine-jitlink-aarch64" />
      <item itemvalue="CMake Application.check-llvm-executionengine-jitlink-x86" />
      <item itemvalue="CMake Application.check-llvm-executionengine-mcjit" />
      <item itemvalue="CMake Application.check-llvm-executionengine-mcjit-remote" />
      <item itemvalue="CMake Application.check-llvm-executionengine-orclazy" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-aarch64" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-arm" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-mips" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-powerpc" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-systemz" />
      <item itemvalue="CMake Application.check-llvm-executionengine-runtimedyld-x86" />
      <item itemvalue="CMake Application.check-llvm-feature" />
      <item itemvalue="CMake Application.check-llvm-feature-operandbundles" />
      <item itemvalue="CMake Application.check-llvm-filecheck" />
      <item itemvalue="CMake Application.check-llvm-filecheck-comment" />
      <item itemvalue="CMake Application.check-llvm-instrumentation" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-addresssanitizer" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-addresssanitizer-x86" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-boundschecking" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-dataflowsanitizer" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-heapprofiler" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-hwaddresssanitizer" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-hwaddresssanitizer-x86" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-instrorderfile" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-instrprofiling" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-instrprofiling-x86" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-memorysanitizer" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-memorysanitizer-aarch64" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-memorysanitizer-mips" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-memorysanitizer-powerpc" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-memorysanitizer-systemz" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-memorysanitizer-x86" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-poisonchecking" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-sanitizercoverage" />
      <item itemvalue="CMake Application.check-llvm-instrumentation-threadsanitizer" />
      <item itemvalue="CMake Application.check-llvm-integer" />
      <item itemvalue="CMake Application.check-llvm-jitlistener" />
      <item itemvalue="CMake Application.check-llvm-linker" />
      <item itemvalue="CMake Application.check-llvm-lto" />
      <item itemvalue="CMake Application.check-llvm-lto-arm" />
      <item itemvalue="CMake Application.check-llvm-lto-resolution" />
      <item itemvalue="CMake Application.check-llvm-lto-resolution-x86" />
      <item itemvalue="CMake Application.check-llvm-lto-x86" />
      <item itemvalue="CMake Application.check-llvm-machineverifier" />
      <item itemvalue="CMake Application.check-llvm-mc" />
      <item itemvalue="CMake Application.check-llvm-mc-aarch64" />
      <item itemvalue="CMake Application.check-llvm-mc-aarch64-sve" />
      <item itemvalue="CMake Application.check-llvm-mc-aarch64-sve2" />
      <item itemvalue="CMake Application.check-llvm-mc-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-mc-amdgpu-regression" />
      <item itemvalue="CMake Application.check-llvm-mc-arm" />
      <item itemvalue="CMake Application.check-llvm-mc-arm-alignedbundling" />
      <item itemvalue="CMake Application.check-llvm-mc-arm-windows" />
      <item itemvalue="CMake Application.check-llvm-mc-asmparser" />
      <item itemvalue="CMake Application.check-llvm-mc-asmparser-aarch64" />
      <item itemvalue="CMake Application.check-llvm-mc-avr" />
      <item itemvalue="CMake Application.check-llvm-mc-avr-out-of-range-fixups" />
      <item itemvalue="CMake Application.check-llvm-mc-bpf" />
      <item itemvalue="CMake Application.check-llvm-mc-coff" />
      <item itemvalue="CMake Application.check-llvm-mc-coff-arm" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-aarch64" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-arc" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-arm" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-hexagon" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-lanai" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-crc" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-dsp" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-dspr2" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-eva" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-ginv" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-micromips-dsp" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-micromips-dspr2" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-micromips-dspr3" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-micromips32r3" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-micromips32r6" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips1" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips2" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips3" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips32" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips32r2" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips32r3" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips32r5" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips32r6" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips4" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips64" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips64r2" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips64r3" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips64r5" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mips64r6" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-msa" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-mt" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-octeon" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-octeonp" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-mips-virt" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-msp430" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-powerpc" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-riscv" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-sparc" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-systemz" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-webassembly" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-x86" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-x86-amx" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-x86-keylocker" />
      <item itemvalue="CMake Application.check-llvm-mc-disassembler-xcore" />
      <item itemvalue="CMake Application.check-llvm-mc-elf" />
      <item itemvalue="CMake Application.check-llvm-mc-elf-arm" />
      <item itemvalue="CMake Application.check-llvm-mc-hexagon" />
      <item itemvalue="CMake Application.check-llvm-mc-hexagon-extensions" />
      <item itemvalue="CMake Application.check-llvm-mc-hexagon-instructions" />
      <item itemvalue="CMake Application.check-llvm-mc-hexagon-packetrules" />
      <item itemvalue="CMake Application.check-llvm-mc-lanai" />
      <item itemvalue="CMake Application.check-llvm-mc-macho" />
      <item itemvalue="CMake Application.check-llvm-mc-macho-aarch64" />
      <item itemvalue="CMake Application.check-llvm-mc-macho-arm" />
      <item itemvalue="CMake Application.check-llvm-mc-mips" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-cnmips" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-cnmipsp" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-crc" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-dsp" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-dspr2" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-eva" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-ginv" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-micromips" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-micromips-dsp" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-micromips-dspr2" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-micromips-dspr3" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-micromips32r6" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips1" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips16" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips2" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips3" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips32" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips32r2" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips32r3" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips32r5" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips32r6" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips3d" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips4" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips5" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips64" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips64r2" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips64r3" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips64r5" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mips64r6" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-msa" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-mt" />
      <item itemvalue="CMake Application.check-llvm-mc-mips-virt" />
      <item itemvalue="CMake Application.check-llvm-mc-msp430" />
      <item itemvalue="CMake Application.check-llvm-mc-powerpc" />
      <item itemvalue="CMake Application.check-llvm-mc-riscv" />
      <item itemvalue="CMake Application.check-llvm-mc-riscv-rvv" />
      <item itemvalue="CMake Application.check-llvm-mc-sparc" />
      <item itemvalue="CMake Application.check-llvm-mc-systemz" />
      <item itemvalue="CMake Application.check-llvm-mc-ve" />
      <item itemvalue="CMake Application.check-llvm-mc-webassembly" />
      <item itemvalue="CMake Application.check-llvm-mc-x86" />
      <item itemvalue="CMake Application.check-llvm-mc-x86-alignedbundling" />
      <item itemvalue="CMake Application.check-llvm-mc-x86-amx" />
      <item itemvalue="CMake Application.check-llvm-mc-x86-keylocker" />
      <item itemvalue="CMake Application.check-llvm-object" />
      <item itemvalue="CMake Application.check-llvm-object-aarch64" />
      <item itemvalue="CMake Application.check-llvm-object-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-object-arm" />
      <item itemvalue="CMake Application.check-llvm-object-lanai" />
      <item itemvalue="CMake Application.check-llvm-object-mips" />
      <item itemvalue="CMake Application.check-llvm-object-riscv" />
      <item itemvalue="CMake Application.check-llvm-object-x86" />
      <item itemvalue="CMake Application.check-llvm-objectyaml" />
      <item itemvalue="CMake Application.check-llvm-objectyaml-codeview" />
      <item itemvalue="CMake Application.check-llvm-objectyaml-coff" />
      <item itemvalue="CMake Application.check-llvm-objectyaml-elf" />
      <item itemvalue="CMake Application.check-llvm-objectyaml-macho" />
      <item itemvalue="CMake Application.check-llvm-objectyaml-wasm" />
      <item itemvalue="CMake Application.check-llvm-other" />
      <item itemvalue="CMake Application.check-llvm-other-x86" />
      <item itemvalue="CMake Application.check-llvm-reduce" />
      <item itemvalue="CMake Application.check-llvm-safepointirverifier" />
      <item itemvalue="CMake Application.check-llvm-support" />
      <item itemvalue="CMake Application.check-llvm-symbolrewriter" />
      <item itemvalue="CMake Application.check-llvm-tablegen" />
      <item itemvalue="CMake Application.check-llvm-tablegen-common" />
      <item itemvalue="CMake Application.check-llvm-tablegen-fixedlendecoderemitter" />
      <item itemvalue="CMake Application.check-llvm-tablegen-gicombineremitter" />
      <item itemvalue="CMake Application.check-llvm-thinlto" />
      <item itemvalue="CMake Application.check-llvm-thinlto-x86" />
      <item itemvalue="CMake Application.check-llvm-tools" />
      <item itemvalue="CMake Application.check-llvm-tools-dsymutil" />
      <item itemvalue="CMake Application.check-llvm-tools-dsymutil-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-dsymutil-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-gold" />
      <item itemvalue="CMake Application.check-llvm-tools-gold-powerpc" />
      <item itemvalue="CMake Application.check-llvm-tools-gold-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-gold-x86-v1.12" />
      <item itemvalue="CMake Application.check-llvm-tools-gold-x86-v1.16" />
      <item itemvalue="CMake Application.check-llvm-tools-llc" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-ar" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-as" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cfi-verify" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cfi-verify-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cfi-verify-unsupported" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cfi-verify-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-config" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cov" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cov-gcov" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cvtres" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cxxdump" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cxxdump-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cxxfilt" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-cxxmap" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-diff" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dlltool" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwarfdump" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwarfdump-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwarfdump-riscv" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwarfdump-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwp" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-dwp-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-elfabi" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-exegesis" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-exegesis-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-exegesis-mips" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-exegesis-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-exegesis-x86-lbr" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-extract" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-gsymutil" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-gsymutil-arm_aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-gsymutil-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-ifs" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-isel-fuzzer" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-lib" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-libtool-darwin" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-link" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-lipo" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-lit" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-locstats" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-lto" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-lto2" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-lto2-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mc" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-aarch64-cortex" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-aarch64-cyclone" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-aarch64-exynos" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-aarch64-falkor" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-systemz" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-atom" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-barcelona" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-bdver2" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-broadwell" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-btver2" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-generic" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-haswell" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-sandybridge" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-skylakeclient" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-skylakeserver" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-slm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-znver1" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mca-x86-znver2" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-ml" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-modextract" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-mt" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-nm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-nm-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-nm-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-nm-wasm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-nm-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objcopy" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objcopy-coff" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objcopy-elf" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objcopy-macho" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objcopy-wasm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-coff" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-elf" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-elf-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-elf-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-elf-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-elf-hexagon" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-elf-mips" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-elf-powerpc" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-elf-riscv" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-macho" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-macho-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-macho-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-wasm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-objdump-xcoff" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-opt-fuzzer" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-opt-report" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-pdbutil" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-profdata" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-ranlib" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-rc" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-readobj" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-readobj-coff" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-readobj-elf" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-readobj-elf-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-readobj-elf-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-readobj-elf-riscv" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-readobj-macho" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-readobj-wasm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-readobj-xcoff" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-size" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-split" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-strings" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-symbolizer" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-symbolizer-pdb" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-xray" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-xray-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-xray-arm" />
      <item itemvalue="CMake Application.check-llvm-tools-llvm-xray-x86" />
      <item itemvalue="CMake Application.check-llvm-tools-lto" />
      <item itemvalue="CMake Application.check-llvm-tools-not" />
      <item itemvalue="CMake Application.check-llvm-tools-obj2yaml" />
      <item itemvalue="CMake Application.check-llvm-tools-obj2yaml-coff" />
      <item itemvalue="CMake Application.check-llvm-tools-obj2yaml-elf" />
      <item itemvalue="CMake Application.check-llvm-tools-obj2yaml-elf-dwarf" />
      <item itemvalue="CMake Application.check-llvm-tools-obj2yaml-macho" />
      <item itemvalue="CMake Application.check-llvm-tools-obj2yaml-minidump" />
      <item itemvalue="CMake Application.check-llvm-tools-obj2yaml-xcoff" />
      <item itemvalue="CMake Application.check-llvm-tools-opt-viewer" />
      <item itemvalue="CMake Application.check-llvm-tools-sancov" />
      <item itemvalue="CMake Application.check-llvm-tools-sancov-aarch64" />
      <item itemvalue="CMake Application.check-llvm-tools-sanstats" />
      <item itemvalue="CMake Application.check-llvm-tools-split-file" />
      <item itemvalue="CMake Application.check-llvm-tools-updatetestchecks" />
      <item itemvalue="CMake Application.check-llvm-tools-updatetestchecks-update_llc_test_checks" />
      <item itemvalue="CMake Application.check-llvm-tools-updatetestchecks-update_test_checks" />
      <item itemvalue="CMake Application.check-llvm-tools-yaml2obj" />
      <item itemvalue="CMake Application.check-llvm-tools-yaml2obj-coff" />
      <item itemvalue="CMake Application.check-llvm-tools-yaml2obj-elf" />
      <item itemvalue="CMake Application.check-llvm-tools-yaml2obj-elf-dwarf" />
      <item itemvalue="CMake Application.check-llvm-tools-yaml2obj-minidump" />
      <item itemvalue="CMake Application.check-llvm-transforms" />
      <item itemvalue="CMake Application.check-llvm-transforms-adce" />
      <item itemvalue="CMake Application.check-llvm-transforms-adddiscriminators" />
      <item itemvalue="CMake Application.check-llvm-transforms-aggressiveinstcombine" />
      <item itemvalue="CMake Application.check-llvm-transforms-alignmentfromassumptions" />
      <item itemvalue="CMake Application.check-llvm-transforms-argumentpromotion" />
      <item itemvalue="CMake Application.check-llvm-transforms-argumentpromotion-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand-hexagon" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand-mips" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand-riscv" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand-sparc" />
      <item itemvalue="CMake Application.check-llvm-transforms-atomicexpand-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-attributor" />
      <item itemvalue="CMake Application.check-llvm-transforms-attributor-argumentpromotion" />
      <item itemvalue="CMake Application.check-llvm-transforms-attributor-argumentpromotion-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-attributor-ipconstantprop" />
      <item itemvalue="CMake Application.check-llvm-transforms-attributor-reduced" />
      <item itemvalue="CMake Application.check-llvm-transforms-bdce" />
      <item itemvalue="CMake Application.check-llvm-transforms-blockextractor" />
      <item itemvalue="CMake Application.check-llvm-transforms-branchfolding" />
      <item itemvalue="CMake Application.check-llvm-transforms-calledvaluepropagation" />
      <item itemvalue="CMake Application.check-llvm-transforms-callsitesplitting" />
      <item itemvalue="CMake Application.check-llvm-transforms-canonicalizealiases" />
      <item itemvalue="CMake Application.check-llvm-transforms-canonicalizefreezeinloops" />
      <item itemvalue="CMake Application.check-llvm-transforms-codeextractor" />
      <item itemvalue="CMake Application.check-llvm-transforms-codeextractor-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-mips" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-sparc" />
      <item itemvalue="CMake Application.check-llvm-transforms-codegenprepare-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-constanthoisting" />
      <item itemvalue="CMake Application.check-llvm-transforms-constanthoisting-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-constanthoisting-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-constanthoisting-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-constanthoisting-riscv" />
      <item itemvalue="CMake Application.check-llvm-transforms-constanthoisting-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-constantmerge" />
      <item itemvalue="CMake Application.check-llvm-transforms-constraintelimination" />
      <item itemvalue="CMake Application.check-llvm-transforms-coroutines" />
      <item itemvalue="CMake Application.check-llvm-transforms-correlatedvaluepropagation" />
      <item itemvalue="CMake Application.check-llvm-transforms-crossdsocfi" />
      <item itemvalue="CMake Application.check-llvm-transforms-dce" />
      <item itemvalue="CMake Application.check-llvm-transforms-deadargelim" />
      <item itemvalue="CMake Application.check-llvm-transforms-deadstoreelimination" />
      <item itemvalue="CMake Application.check-llvm-transforms-deadstoreelimination-memdepanalysis" />
      <item itemvalue="CMake Application.check-llvm-transforms-deadstoreelimination-memdepanalysis-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-deadstoreelimination-mssa" />
      <item itemvalue="CMake Application.check-llvm-transforms-deadstoreelimination-mssa-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-divrempairs" />
      <item itemvalue="CMake Application.check-llvm-transforms-divrempairs-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-divrempairs-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-earlycse" />
      <item itemvalue="CMake Application.check-llvm-transforms-earlycse-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-earlycse-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-earlycse-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-earlycse-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-eliminateavailableexternally" />
      <item itemvalue="CMake Application.check-llvm-transforms-entryexitinstrumenter" />
      <item itemvalue="CMake Application.check-llvm-transforms-expandmemcmp" />
      <item itemvalue="CMake Application.check-llvm-transforms-expandmemcmp-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-expandmemcmp-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-fixirreducible" />
      <item itemvalue="CMake Application.check-llvm-transforms-float2int" />
      <item itemvalue="CMake Application.check-llvm-transforms-forcedfunctionattrs" />
      <item itemvalue="CMake Application.check-llvm-transforms-functionattrs" />
      <item itemvalue="CMake Application.check-llvm-transforms-functionimport" />
      <item itemvalue="CMake Application.check-llvm-transforms-gcovprofiling" />
      <item itemvalue="CMake Application.check-llvm-transforms-globaldce" />
      <item itemvalue="CMake Application.check-llvm-transforms-globalmerge" />
      <item itemvalue="CMake Application.check-llvm-transforms-globalopt" />
      <item itemvalue="CMake Application.check-llvm-transforms-globalopt-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-globalsplit" />
      <item itemvalue="CMake Application.check-llvm-transforms-guardwidening" />
      <item itemvalue="CMake Application.check-llvm-transforms-gvn" />
      <item itemvalue="CMake Application.check-llvm-transforms-gvn-pre" />
      <item itemvalue="CMake Application.check-llvm-transforms-gvnhoist" />
      <item itemvalue="CMake Application.check-llvm-transforms-gvnsink" />
      <item itemvalue="CMake Application.check-llvm-transforms-hardwareloops" />
      <item itemvalue="CMake Application.check-llvm-transforms-hardwareloops-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-hellonew" />
      <item itemvalue="CMake Application.check-llvm-transforms-hotcoldsplit" />
      <item itemvalue="CMake Application.check-llvm-transforms-hotcoldsplit-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-indirectbrexpand" />
      <item itemvalue="CMake Application.check-llvm-transforms-indvarsimplify" />
      <item itemvalue="CMake Application.check-llvm-transforms-indvarsimplify-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-indvarsimplify-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-indvarsimplify-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-indvarsimplify-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-inferaddressspaces" />
      <item itemvalue="CMake Application.check-llvm-transforms-inferaddressspaces-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-inferaddressspaces-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-inferfunctionattrs" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-ml" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-webassembly" />
      <item itemvalue="CMake Application.check-llvm-transforms-inline-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-hexagon" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-instcombine-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-instmerge" />
      <item itemvalue="CMake Application.check-llvm-transforms-instnamer" />
      <item itemvalue="CMake Application.check-llvm-transforms-instsimplify" />
      <item itemvalue="CMake Application.check-llvm-transforms-instsimplify-constprop" />
      <item itemvalue="CMake Application.check-llvm-transforms-instsimplify-constprop-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-instsimplify-constprop-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-instsimplify-constprop-webassembly" />
      <item itemvalue="CMake Application.check-llvm-transforms-interleavedaccess" />
      <item itemvalue="CMake Application.check-llvm-transforms-interleavedaccess-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-interleavedaccess-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-interleavedaccess-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-internalize" />
      <item itemvalue="CMake Application.check-llvm-transforms-irce" />
      <item itemvalue="CMake Application.check-llvm-transforms-jumpthreading" />
      <item itemvalue="CMake Application.check-llvm-transforms-lcssa" />
      <item itemvalue="CMake Application.check-llvm-transforms-licm" />
      <item itemvalue="CMake Application.check-llvm-transforms-licm-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-licm-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loadstorevectorizer" />
      <item itemvalue="CMake Application.check-llvm-transforms-loadstorevectorizer-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loadstorevectorizer-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-loadstorevectorizer-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopdataprefetch" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopdataprefetch-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopdataprefetch-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopdeletion" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopdistribute" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopflatten" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopfusion" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopidiom" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopidiom-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopidiom-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopidiom-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopinstsimplify" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopinterchange" />
      <item itemvalue="CMake Application.check-llvm-transforms-looploadelim" />
      <item itemvalue="CMake Application.check-llvm-transforms-looppredication" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopreroll" />
      <item itemvalue="CMake Application.check-llvm-transforms-looprotate" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopsimplify" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopsimplifycfg" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce-power" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopstrengthreduce-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-looptransformwarning" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll-hexagon" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunroll-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunrollandjam" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunswitch" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopunswitch-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-hexagon" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-systemz" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopvectorize-xcore" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopversioning" />
      <item itemvalue="CMake Application.check-llvm-transforms-loopversioninglicm" />
      <item itemvalue="CMake Application.check-llvm-transforms-loweratomic" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowerconstantintrinsics" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowerexpectintrinsic" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowerguardintrinsic" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowerinvoke" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowermatrixintrinsics" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowerswitch" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowertypetests" />
      <item itemvalue="CMake Application.check-llvm-transforms-lowerwidenablecondition" />
      <item itemvalue="CMake Application.check-llvm-transforms-makeguardsexplicit" />
      <item itemvalue="CMake Application.check-llvm-transforms-mem2reg" />
      <item itemvalue="CMake Application.check-llvm-transforms-memcpyopt" />
      <item itemvalue="CMake Application.check-llvm-transforms-mergefunc" />
      <item itemvalue="CMake Application.check-llvm-transforms-mergeicmps" />
      <item itemvalue="CMake Application.check-llvm-transforms-mergeicmps-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-metarenamer" />
      <item itemvalue="CMake Application.check-llvm-transforms-nameanonglobals" />
      <item itemvalue="CMake Application.check-llvm-transforms-naryreassociate" />
      <item itemvalue="CMake Application.check-llvm-transforms-naryreassociate-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-newgvn" />
      <item itemvalue="CMake Application.check-llvm-transforms-objcarc" />
      <item itemvalue="CMake Application.check-llvm-transforms-openmp" />
      <item itemvalue="CMake Application.check-llvm-transforms-partialinlining" />
      <item itemvalue="CMake Application.check-llvm-transforms-partiallyinlinelibcalls" />
      <item itemvalue="CMake Application.check-llvm-transforms-partiallyinlinelibcalls-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-pgoprofile" />
      <item itemvalue="CMake Application.check-llvm-transforms-pgoprofile-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-phaseordering" />
      <item itemvalue="CMake Application.check-llvm-transforms-phaseordering-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-placesafepoints" />
      <item itemvalue="CMake Application.check-llvm-transforms-preiselintrinsiclowering" />
      <item itemvalue="CMake Application.check-llvm-transforms-pruneeh" />
      <item itemvalue="CMake Application.check-llvm-transforms-reassociate" />
      <item itemvalue="CMake Application.check-llvm-transforms-reg2mem" />
      <item itemvalue="CMake Application.check-llvm-transforms-rewritestatepointsforgc" />
      <item itemvalue="CMake Application.check-llvm-transforms-safestack" />
      <item itemvalue="CMake Application.check-llvm-transforms-safestack-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-safestack-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-safestack-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-sampleprofile" />
      <item itemvalue="CMake Application.check-llvm-transforms-scalarizemaskedmemintrin" />
      <item itemvalue="CMake Application.check-llvm-transforms-scalarizemaskedmemintrin-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-scalarizemaskedmemintrin-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-scalarizer" />
      <item itemvalue="CMake Application.check-llvm-transforms-sccp" />
      <item itemvalue="CMake Application.check-llvm-transforms-separateconstoffsetfromgep" />
      <item itemvalue="CMake Application.check-llvm-transforms-separateconstoffsetfromgep-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-separateconstoffsetfromgep-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-simpleloopunswitch" />
      <item itemvalue="CMake Application.check-llvm-transforms-simpleloopunswitch-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-hexagon" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-mips" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-riscv" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-sparc" />
      <item itemvalue="CMake Application.check-llvm-transforms-simplifycfg-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-sink" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-powerpc" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-systemz" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-webassembly" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-slpvectorizer-xcore" />
      <item itemvalue="CMake Application.check-llvm-transforms-speculatearoundphis" />
      <item itemvalue="CMake Application.check-llvm-transforms-speculativeexecution" />
      <item itemvalue="CMake Application.check-llvm-transforms-sroa" />
      <item itemvalue="CMake Application.check-llvm-transforms-straightlinestrengthreduce" />
      <item itemvalue="CMake Application.check-llvm-transforms-straightlinestrengthreduce-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-straightlinestrengthreduce-nvptx" />
      <item itemvalue="CMake Application.check-llvm-transforms-straightlinestrengthreduce-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-stripdeadprototypes" />
      <item itemvalue="CMake Application.check-llvm-transforms-stripsymbols" />
      <item itemvalue="CMake Application.check-llvm-transforms-structurizecfg" />
      <item itemvalue="CMake Application.check-llvm-transforms-structurizecfg-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-structurizecfg-workarounds" />
      <item itemvalue="CMake Application.check-llvm-transforms-syntheticcountspropagation" />
      <item itemvalue="CMake Application.check-llvm-transforms-tailcallelim" />
      <item itemvalue="CMake Application.check-llvm-transforms-thinltobitcodewriter" />
      <item itemvalue="CMake Application.check-llvm-transforms-thinltobitcodewriter-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-typepromotion" />
      <item itemvalue="CMake Application.check-llvm-transforms-typepromotion-arm" />
      <item itemvalue="CMake Application.check-llvm-transforms-unifyfunctionexitnodes" />
      <item itemvalue="CMake Application.check-llvm-transforms-unifyloopexits" />
      <item itemvalue="CMake Application.check-llvm-transforms-uniqueinternallinkagenames" />
      <item itemvalue="CMake Application.check-llvm-transforms-util" />
      <item itemvalue="CMake Application.check-llvm-transforms-util-debugify" />
      <item itemvalue="CMake Application.check-llvm-transforms-util-predicateinfo" />
      <item itemvalue="CMake Application.check-llvm-transforms-vectorcombine" />
      <item itemvalue="CMake Application.check-llvm-transforms-vectorcombine-aarch64" />
      <item itemvalue="CMake Application.check-llvm-transforms-vectorcombine-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-transforms-vectorcombine-hexagon" />
      <item itemvalue="CMake Application.check-llvm-transforms-vectorcombine-x86" />
      <item itemvalue="CMake Application.check-llvm-transforms-wholeprogramdevirt" />
      <item itemvalue="CMake Application.check-llvm-unit" />
      <item itemvalue="CMake Application.check-llvm-verifier" />
      <item itemvalue="CMake Application.check-llvm-verifier-amdgpu" />
      <item itemvalue="CMake Application.check-llvm-verifier-arm" />
      <item itemvalue="CMake Application.check-llvm-verifier-mips" />
      <item itemvalue="CMake Application.check-llvm-verifier-systemz" />
      <item itemvalue="CMake Application.check-llvm-yamlparser" />
      <item itemvalue="CMake Application.llvm-test-depends" />
      <item itemvalue="CMake Application.BugpointPasses" />
      <item itemvalue="CMake Application.BugpointPasses_exports" />
      <item itemvalue="CMake Application.bugpoint" />
      <item itemvalue="CMake Application.install-bugpoint" />
      <item itemvalue="CMake Application.install-bugpoint-stripped" />
      <item itemvalue="CMake Application.dsymutil" />
      <item itemvalue="CMake Application.DsymutilTableGen" />
      <item itemvalue="CMake Application.install-dsymutil" />
      <item itemvalue="CMake Application.install-dsymutil-stripped" />
      <item itemvalue="CMake Application.install-llc" />
      <item itemvalue="CMake Application.install-llc-stripped" />
      <item itemvalue="CMake Application.llc" />
      <item itemvalue="CMake Application.install-lli" />
      <item itemvalue="CMake Application.install-lli-stripped" />
      <item itemvalue="CMake Application.lli" />
      <item itemvalue="CMake Application.lli-child-target" />
      <item itemvalue="CMake Application.install-llvm-ar" />
      <item itemvalue="CMake Application.install-llvm-ar-stripped" />
      <item itemvalue="CMake Application.install-llvm-dlltool" />
      <item itemvalue="CMake Application.install-llvm-dlltool-stripped" />
      <item itemvalue="CMake Application.install-llvm-lib" />
      <item itemvalue="CMake Application.install-llvm-lib-stripped" />
      <item itemvalue="CMake Application.install-llvm-ranlib" />
      <item itemvalue="CMake Application.install-llvm-ranlib-stripped" />
      <item itemvalue="CMake Application.llvm-ar" />
      <item itemvalue="CMake Application.llvm-dlltool" />
      <item itemvalue="CMake Application.llvm-lib" />
      <item itemvalue="CMake Application.llvm-ranlib" />
      <item itemvalue="CMake Application.install-llvm-as" />
      <item itemvalue="CMake Application.install-llvm-as-stripped" />
      <item itemvalue="CMake Application.llvm-as" />
      <item itemvalue="CMake Application.install-llvm-bcanalyzer" />
      <item itemvalue="CMake Application.install-llvm-bcanalyzer-stripped" />
      <item itemvalue="CMake Application.llvm-bcanalyzer" />
      <item itemvalue="CMake Application.install-llvm-c-test" />
      <item itemvalue="CMake Application.install-llvm-c-test-stripped" />
      <item itemvalue="CMake Application.llvm-c-test" />
      <item itemvalue="CMake Application.install-llvm-cat" />
      <item itemvalue="CMake Application.install-llvm-cat-stripped" />
      <item itemvalue="CMake Application.llvm-cat" />
      <item itemvalue="CMake Application.install-llvm-cfi-verify" />
      <item itemvalue="CMake Application.install-llvm-cfi-verify-stripped" />
      <item itemvalue="CMake Application.llvm-cfi-verify" />
      <item itemvalue="CMake Application.LLVMCFIVerify" />
      <item itemvalue="CMake Application.install-llvm-config" />
      <item itemvalue="CMake Application.install-llvm-config-stripped" />
      <item itemvalue="CMake Application.llvm-config" />
      <item itemvalue="CMake Application.install-llvm-cov" />
      <item itemvalue="CMake Application.install-llvm-cov-stripped" />
      <item itemvalue="CMake Application.llvm-cov" />
      <item itemvalue="CMake Application.CvtResTableGen" />
      <item itemvalue="CMake Application.install-llvm-cvtres" />
      <item itemvalue="CMake Application.install-llvm-cvtres-stripped" />
      <item itemvalue="CMake Application.llvm-cvtres" />
      <item itemvalue="CMake Application.install-llvm-cxxdump" />
      <item itemvalue="CMake Application.install-llvm-cxxdump-stripped" />
      <item itemvalue="CMake Application.llvm-cxxdump" />
      <item itemvalue="CMake Application.install-llvm-cxxfilt" />
      <item itemvalue="CMake Application.install-llvm-cxxfilt-stripped" />
      <item itemvalue="CMake Application.llvm-cxxfilt" />
      <item itemvalue="CMake Application.install-llvm-cxxmap" />
      <item itemvalue="CMake Application.install-llvm-cxxmap-stripped" />
      <item itemvalue="CMake Application.llvm-cxxmap" />
      <item itemvalue="CMake Application.install-llvm-diff" />
      <item itemvalue="CMake Application.install-llvm-diff-stripped" />
      <item itemvalue="CMake Application.llvm-diff" />
      <item itemvalue="CMake Application.install-llvm-dis" />
      <item itemvalue="CMake Application.install-llvm-dis-stripped" />
      <item itemvalue="CMake Application.llvm-dis" />
      <item itemvalue="CMake Application.install-llvm-dwarfdump" />
      <item itemvalue="CMake Application.install-llvm-dwarfdump-stripped" />
      <item itemvalue="CMake Application.llvm-dwarfdump" />
      <item itemvalue="CMake Application.install-llvm-dwp" />
      <item itemvalue="CMake Application.install-llvm-dwp-stripped" />
      <item itemvalue="CMake Application.llvm-dwp" />
      <item itemvalue="CMake Application.install-llvm-elfabi" />
      <item itemvalue="CMake Application.install-llvm-elfabi-stripped" />
      <item itemvalue="CMake Application.llvm-elfabi" />
      <item itemvalue="CMake Application.install-llvm-exegesis" />
      <item itemvalue="CMake Application.install-llvm-exegesis-stripped" />
      <item itemvalue="CMake Application.llvm-exegesis" />
      <item itemvalue="CMake Application.LLVMExegesis" />
      <item itemvalue="CMake Application.LLVMExegesisAArch64" />
      <item itemvalue="CMake Application.LLVMExegesisMips" />
      <item itemvalue="CMake Application.LLVMExegesisPowerPC" />
      <item itemvalue="CMake Application.LLVMExegesisX86" />
      <item itemvalue="CMake Application.install-llvm-extract" />
      <item itemvalue="CMake Application.install-llvm-extract-stripped" />
      <item itemvalue="CMake Application.llvm-extract" />
      <item itemvalue="CMake Application.install-llvm-gsymutil" />
      <item itemvalue="CMake Application.install-llvm-gsymutil-stripped" />
      <item itemvalue="CMake Application.llvm-gsymutil" />
      <item itemvalue="CMake Application.install-llvm-ifs" />
      <item itemvalue="CMake Application.install-llvm-ifs-stripped" />
      <item itemvalue="CMake Application.llvm-ifs" />
      <item itemvalue="CMake Application.llvm-isel-fuzzer" />
      <item itemvalue="CMake Application.llvm-itanium-demangle-fuzzer" />
      <item itemvalue="CMake Application.install-llvm-jitlink" />
      <item itemvalue="CMake Application.install-llvm-jitlink-stripped" />
      <item itemvalue="CMake Application.llvm-jitlink" />
      <item itemvalue="CMake Application.install-llvm-libtool-darwin" />
      <item itemvalue="CMake Application.install-llvm-libtool-darwin-stripped" />
      <item itemvalue="CMake Application.llvm-libtool-darwin" />
      <item itemvalue="CMake Application.install-llvm-link" />
      <item itemvalue="CMake Application.install-llvm-link-stripped" />
      <item itemvalue="CMake Application.llvm-link" />
      <item itemvalue="CMake Application.install-llvm-lipo" />
      <item itemvalue="CMake Application.install-llvm-lipo-stripped" />
      <item itemvalue="CMake Application.LipoOptsTableGen" />
      <item itemvalue="CMake Application.llvm-lipo" />
      <item itemvalue="CMake Application.install-llvm-lto" />
      <item itemvalue="CMake Application.install-llvm-lto-stripped" />
      <item itemvalue="CMake Application.llvm-lto" />
      <item itemvalue="CMake Application.install-llvm-lto2" />
      <item itemvalue="CMake Application.install-llvm-lto2-stripped" />
      <item itemvalue="CMake Application.llvm-lto2" />
      <item itemvalue="CMake Application.install-llvm-mc" />
      <item itemvalue="CMake Application.install-llvm-mc-stripped" />
      <item itemvalue="CMake Application.llvm-mc" />
      <item itemvalue="CMake Application.install-llvm-mca" />
      <item itemvalue="CMake Application.install-llvm-mca-stripped" />
      <item itemvalue="CMake Application.llvm-mca" />
      <item itemvalue="CMake Application.llvm-microsoft-demangle-fuzzer" />
      <item itemvalue="CMake Application.install-llvm-ml" />
      <item itemvalue="CMake Application.install-llvm-ml-stripped" />
      <item itemvalue="CMake Application.llvm-ml" />
      <item itemvalue="CMake Application.install-llvm-modextract" />
      <item itemvalue="CMake Application.install-llvm-modextract-stripped" />
      <item itemvalue="CMake Application.llvm-modextract" />
      <item itemvalue="CMake Application.install-llvm-mt" />
      <item itemvalue="CMake Application.install-llvm-mt-stripped" />
      <item itemvalue="CMake Application.llvm-mt" />
      <item itemvalue="CMake Application.MtTableGen" />
      <item itemvalue="CMake Application.install-llvm-nm" />
      <item itemvalue="CMake Application.install-llvm-nm-stripped" />
      <item itemvalue="CMake Application.llvm-nm" />
      <item itemvalue="CMake Application.BitcodeStripOptsTableGen" />
      <item itemvalue="CMake Application.install-llvm-bitcode-strip" />
      <item itemvalue="CMake Application.install-llvm-bitcode-strip-stripped" />
      <item itemvalue="CMake Application.install-llvm-install-name-tool" />
      <item itemvalue="CMake Application.install-llvm-install-name-tool-stripped" />
      <item itemvalue="CMake Application.install-llvm-objcopy" />
      <item itemvalue="CMake Application.install-llvm-objcopy-stripped" />
      <item itemvalue="CMake Application.install-llvm-strip" />
      <item itemvalue="CMake Application.install-llvm-strip-stripped" />
      <item itemvalue="CMake Application.InstallNameToolOptsTableGen" />
      <item itemvalue="CMake Application.llvm-bitcode-strip" />
      <item itemvalue="CMake Application.llvm-install-name-tool" />
      <item itemvalue="CMake Application.llvm-objcopy" />
      <item itemvalue="CMake Application.llvm-strip" />
      <item itemvalue="CMake Application.ObjcopyOptsTableGen" />
      <item itemvalue="CMake Application.StripOptsTableGen" />
      <item itemvalue="CMake Application.install-llvm-objdump" />
      <item itemvalue="CMake Application.install-llvm-objdump-stripped" />
      <item itemvalue="CMake Application.llvm-objdump" />
      <item itemvalue="CMake Application.llvm-opt-fuzzer" />
      <item itemvalue="CMake Application.install-llvm-opt-report" />
      <item itemvalue="CMake Application.install-llvm-opt-report-stripped" />
      <item itemvalue="CMake Application.llvm-opt-report" />
      <item itemvalue="CMake Application.install-llvm-pdbutil" />
      <item itemvalue="CMake Application.install-llvm-pdbutil-stripped" />
      <item itemvalue="CMake Application.llvm-pdbutil" />
      <item itemvalue="CMake Application.install-llvm-profdata" />
      <item itemvalue="CMake Application.install-llvm-profdata-stripped" />
      <item itemvalue="CMake Application.llvm-profdata" />
      <item itemvalue="CMake Application.install-llvm-rc" />
      <item itemvalue="CMake Application.install-llvm-rc-stripped" />
      <item itemvalue="CMake Application.llvm-rc" />
      <item itemvalue="CMake Application.RcTableGen" />
      <item itemvalue="CMake Application.install-llvm-readelf" />
      <item itemvalue="CMake Application.install-llvm-readelf-stripped" />
      <item itemvalue="CMake Application.install-llvm-readobj" />
      <item itemvalue="CMake Application.install-llvm-readobj-stripped" />
      <item itemvalue="CMake Application.llvm-readelf" />
      <item itemvalue="CMake Application.llvm-readobj" />
      <item itemvalue="CMake Application.install-llvm-reduce" />
      <item itemvalue="CMake Application.install-llvm-reduce-stripped" />
      <item itemvalue="CMake Application.llvm-reduce" />
      <item itemvalue="CMake Application.install-llvm-rtdyld" />
      <item itemvalue="CMake Application.install-llvm-rtdyld-stripped" />
      <item itemvalue="CMake Application.llvm-rtdyld" />
      <item itemvalue="CMake Application.install-llvm-size" />
      <item itemvalue="CMake Application.install-llvm-size-stripped" />
      <item itemvalue="CMake Application.llvm-size" />
      <item itemvalue="CMake Application.llvm-special-case-list-fuzzer" />
      <item itemvalue="CMake Application.install-llvm-split" />
      <item itemvalue="CMake Application.install-llvm-split-stripped" />
      <item itemvalue="CMake Application.llvm-split" />
      <item itemvalue="CMake Application.install-llvm-stress" />
      <item itemvalue="CMake Application.install-llvm-stress-stripped" />
      <item itemvalue="CMake Application.llvm-stress" />
      <item itemvalue="CMake Application.install-llvm-strings" />
      <item itemvalue="CMake Application.install-llvm-strings-stripped" />
      <item itemvalue="CMake Application.llvm-strings" />
      <item itemvalue="CMake Application.install-llvm-addr2line" />
      <item itemvalue="CMake Application.install-llvm-addr2line-stripped" />
      <item itemvalue="CMake Application.install-llvm-symbolizer" />
      <item itemvalue="CMake Application.install-llvm-symbolizer-stripped" />
      <item itemvalue="CMake Application.llvm-addr2line" />
      <item itemvalue="CMake Application.llvm-symbolizer" />
      <item itemvalue="CMake Application.SymbolizerOptsTableGen" />
      <item itemvalue="CMake Application.install-llvm-undname" />
      <item itemvalue="CMake Application.install-llvm-undname-stripped" />
      <item itemvalue="CMake Application.llvm-undname" />
      <item itemvalue="CMake Application.install-llvm-xray" />
      <item itemvalue="CMake Application.install-llvm-xray-stripped" />
      <item itemvalue="CMake Application.llvm-xray" />
      <item itemvalue="CMake Application.llvm-yaml-numeric-parser-fuzzer" />
      <item itemvalue="CMake Application.install-LTO" />
      <item itemvalue="CMake Application.install-LTO-stripped" />
      <item itemvalue="CMake Application.LTO" />
      <item itemvalue="CMake Application.LTO_exports" />
      <item itemvalue="CMake Application.obj2yaml" />
      <item itemvalue="CMake Application.install-opt-viewer" />
      <item itemvalue="CMake Application.install-opt-viewer-stripped" />
      <item itemvalue="CMake Application.opt-viewer" />
      <item itemvalue="CMake Application.install-opt" />
      <item itemvalue="CMake Application.install-opt-stripped" />
      <item itemvalue="CMake Application.opt" />
      <item itemvalue="CMake Application.install-Remarks" />
      <item itemvalue="CMake Application.install-Remarks-stripped" />
      <item itemvalue="CMake Application.Remarks" />
      <item itemvalue="CMake Application.Remarks_exports" />
      <item itemvalue="CMake Application.install-sancov" />
      <item itemvalue="CMake Application.install-sancov-stripped" />
      <item itemvalue="CMake Application.sancov" />
      <item itemvalue="CMake Application.install-sanstats" />
      <item itemvalue="CMake Application.install-sanstats-stripped" />
      <item itemvalue="CMake Application.sanstats" />
      <item itemvalue="CMake Application.install-split-file" />
      <item itemvalue="CMake Application.install-split-file-stripped" />
      <item itemvalue="CMake Application.split-file" />
      <item itemvalue="CMake Application.install-verify-uselistorder" />
      <item itemvalue="CMake Application.install-verify-uselistorder-stripped" />
      <item itemvalue="CMake Application.verify-uselistorder" />
      <item itemvalue="CMake Application.yaml2obj" />
      <item itemvalue="CMake Application.UnitTests" />
      <item itemvalue="CMake Application.OptsTestTableGen" />
      <item itemvalue="CMake Application.TestPlugin" />
      <item itemvalue="CMake Application.DynamicLibraryLib" />
      <item itemvalue="CMake Application.PipSqueak" />
      <item itemvalue="CMake Application.SecondLib" />
      <item itemvalue="CMake Application.AutomataTestTableGen" />
      <item itemvalue="CMake Application.benchmark" />
      <item itemvalue="CMake Application.benchmark_main" />
      <item itemvalue="CMake Application.count" />
      <item itemvalue="CMake Application.FileCheck" />
      <item itemvalue="CMake Application.check-lit" />
      <item itemvalue="CMake Application.prepare-check-lit" />
      <item itemvalue="CMake Application.llvm-locstats" />
      <item itemvalue="CMake Application.not" />
      <item itemvalue="CMake Application.llvm-PerfectShuffle" />
      <item itemvalue="CMake Application.install-llvm-tblgen" />
      <item itemvalue="CMake Application.install-llvm-tblgen-stripped" />
      <item itemvalue="CMake Application.llvm-tblgen" />
      <item itemvalue="CMake Application.obj.llvm-tblgen" />
      <item itemvalue="CMake Application.LLVMTableGenGlobalISel" />
      <item itemvalue="CMake Application.gtest" />
      <item itemvalue="CMake Application.gtest_main" />
      <item itemvalue="CMake Application.yaml-bench" />
      <item itemvalue="Google Test.ADTTests" />
      <item itemvalue="Google Test.AnalysisTests" />
      <item itemvalue="Google Test.AsmParserTests" />
      <item itemvalue="Google Test.BinaryFormatTests" />
      <item itemvalue="Google Test.BitcodeTests" />
      <item itemvalue="Google Test.BitstreamTests" />
      <item itemvalue="Google Test.CodeGenTests" />
      <item itemvalue="Google Test.GlobalISelTests" />
      <item itemvalue="Google Test.DebugInfoCodeViewTests" />
      <item itemvalue="Google Test.DebugInfoDWARFTests" />
      <item itemvalue="Google Test.DebugInfoGSYMTests" />
      <item itemvalue="Google Test.DebugInfoMSFTests" />
      <item itemvalue="Google Test.DebugInfoPDBTests" />
      <item itemvalue="Google Test.DemangleTests" />
      <item itemvalue="Google Test.ExecutionEngineTests" />
      <item itemvalue="Google Test.JITLinkTests" />
      <item itemvalue="Google Test.MCJITTests" />
      <item itemvalue="Google Test.OrcJITTests" />
      <item itemvalue="Google Test.FileCheckTests" />
      <item itemvalue="Google Test.LLVMFrontendTests" />
      <item itemvalue="Google Test.FuzzMutateTests" />
      <item itemvalue="Google Test.InterfaceStubTests" />
      <item itemvalue="Google Test.IRTests" />
      <item itemvalue="Google Test.LineEditorTests" />
      <item itemvalue="Google Test.LinkerTests" />
      <item itemvalue="Google Test.MCTests" />
      <item itemvalue="Google Test.AMDGPUDwarfTests" />
      <item itemvalue="Google Test.MITests" />
      <item itemvalue="Google Test.ObjectTests" />
      <item itemvalue="Google Test.ObjectYAMLTests" />
      <item itemvalue="Google Test.OptionTests" />
      <item itemvalue="Google Test.PluginsTests" />
      <item itemvalue="Google Test.ProfileDataTests" />
      <item itemvalue="Google Test.RemarksTests" />
      <item itemvalue="Google Test.SupportTests" />
      <item itemvalue="Google Test.DynamicLibraryTests" />
      <item itemvalue="Google Test.TableGenTests" />
      <item itemvalue="Google Test.AArch64Tests" />
      <item itemvalue="Google Test.AMDGPUTests" />
      <item itemvalue="Google Test.ARMTests" />
      <item itemvalue="Google Test.PowerPCTests" />
      <item itemvalue="Google Test.WebAssemblyTests" />
      <item itemvalue="Google Test.X86Tests" />
      <item itemvalue="Google Test.TextAPITests" />
      <item itemvalue="Google Test.CFIVerifyTests" />
      <item itemvalue="Google Test.LLVMExegesisTests" />
      <item itemvalue="Google Test.LLVMExegesisAArch64Tests" />
      <item itemvalue="Google Test.LLVMExegesisARMTests" />
      <item itemvalue="Google Test.LLVMExegesisMipsTests" />
      <item itemvalue="Google Test.LLVMExegesisPowerPCTests" />
      <item itemvalue="Google Test.LLVMExegesisX86Tests" />
      <item itemvalue="Google Test.IPOTests" />
      <item itemvalue="Google Test.ScalarTests" />
      <item itemvalue="Google Test.UtilsTests" />
      <item itemvalue="Google Test.VectorizeTests" />
      <item itemvalue="Google Test.XRayTests" />
    </list>
  </component>
  <component name="SbtLocalSettings">
    <option name="projectSyncType">
      <map>
        <entry key="$PROJECT_DIR$/../MEGAsync/Documents/KULeuven/Thesis/Capita selecta/SpinalTest" value="PREVIEW" />
        <entry key="$PROJECT_DIR$/../MEGAsync/Documents/KULeuven/Thesis/Capita selecta/Spinaltest_self" value="PREVIEW" />
      </map>
    </option>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4fb31e14-dc0c-4cd8-94aa-0714372b0faf" name="Default Changelist" comment="" />
      <created>1612970028475</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1612970028475</updated>
      <workItem from="1612970031559" duration="2953000" />
      <workItem from="1613120719207" duration="1777000" />
      <workItem from="1613340032096" duration="743000" />
      <workItem from="1613386923726" duration="3896000" />
      <workItem from="1613467876470" duration="220000" />
      <workItem from="1613468879974" duration="225000" />
      <workItem from="1613469430399" duration="2304000" />
      <workItem from="1613485460135" duration="2052000" />
      <workItem from="1613488037731" duration="14206000" />
      <workItem from="1613551615264" duration="3621000" />
      <workItem from="1613911989753" duration="27847000" />
      <workItem from="1614154703395" duration="24025000" />
      <workItem from="1614419646766" duration="7581000" />
      <workItem from="1614510470797" duration="5438000" />
      <workItem from="1614535394461" duration="1279000" />
      <workItem from="1614598554305" duration="30601000" />
      <workItem from="1614933413727" duration="13296000" />
      <workItem from="1615448193828" duration="5086000" />
      <workItem from="1615479772320" duration="639000" />
      <workItem from="1615555880917" duration="82593000" />
      <workItem from="1616174071378" duration="836000" />
      <workItem from="1616325321239" duration="94000" />
      <workItem from="1616325476995" duration="6376000" />
      <workItem from="1616421717203" duration="4072000" />
      <workItem from="1616571718688" duration="5273000" />
      <workItem from="1616604366746" duration="700000" />
      <workItem from="1616763332189" duration="599000" />
      <workItem from="1616836810002" duration="10324000" />
      <workItem from="1617003333617" duration="10759000" />
      <workItem from="1617032590422" duration="14000" />
      <workItem from="1617089122670" duration="2355000" />
      <workItem from="1617185345578" duration="1152000" />
      <workItem from="1617199335409" duration="7406000" />
      <workItem from="1617222112805" duration="75000" />
      <workItem from="1617259525112" duration="29842000" />
      <workItem from="1617459301751" duration="18688000" />
      <workItem from="1617904296616" duration="3395000" />
      <workItem from="1617980995602" duration="22545000" />
      <workItem from="1618327978492" duration="18879000" />
      <workItem from="1618474226747" duration="1211000" />
      <workItem from="1618566677108" duration="644000" />
      <workItem from="1618813977144" duration="9378000" />
      <workItem from="1618920102435" duration="276000" />
      <workItem from="1619093437185" duration="1244000" />
      <workItem from="1619161085734" duration="2630000" />
      <workItem from="1619163749503" duration="15550000" />
      <workItem from="1619267467493" duration="8633000" />
      <workItem from="1619337131252" duration="8821000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>