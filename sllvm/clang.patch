Index: include/clang/Basic/Attr.td
===================================================================
--- include/clang/Basic/Attr.td	(revision 346644)
+++ include/clang/Basic/Attr.td	(working copy)
@@ -1542,6 +1542,12 @@
   let Documentation = [AssumeAlignedDocs];
 }
 
+def EEntry : InheritableAttr {
+  let Spellings = [GCC<"eentry">, Keyword<"eentry">];
+  let Subjects = SubjectList<[Function]>;
+  let Documentation = [Undocumented];
+}
+
 def AllocAlign : InheritableAttr {
   let Spellings = [GCC<"alloc_align">];
   let Subjects = SubjectList<[HasFunctionProto]>;
@@ -1549,6 +1555,7 @@
   let Documentation = [AllocAlignDocs];
 }
 
+
 def NoReturn : InheritableAttr {
   let Spellings = [GCC<"noreturn">, Declspec<"noreturn">];
   // FIXME: Does GCC allow this on the function instead?
Index: lib/CodeGen/CodeGenModule.cpp
===================================================================
--- lib/CodeGen/CodeGenModule.cpp	(revision 346644)
+++ lib/CodeGen/CodeGenModule.cpp	(working copy)
@@ -1572,6 +1572,10 @@
   setLinkageForGV(F, FD);
   setGVProperties(F, FD);
 
+  if (FD->getAttr<EEntryAttr>()) {
+    F->addFnAttr("sllvm-eentry", "true");
+  }
+
   if (const auto *CSA = FD->getAttr<CodeSegAttr>())
     F->setSection(CSA->getName());
   else if (const auto *SA = FD->getAttr<SectionAttr>())
Index: lib/Sema/SemaDeclAttr.cpp
===================================================================
--- lib/Sema/SemaDeclAttr.cpp	(revision 346644)
+++ lib/Sema/SemaDeclAttr.cpp	(working copy)
@@ -6110,6 +6110,9 @@
   case ParsedAttr::AT_IFunc:
     handleIFuncAttr(S, D, AL);
     break;
+  case AttributeList::AT_EEntry:
+    handleSimpleAttribute<EEntryAttr>(S, D, AL);
+    break;
   case ParsedAttr::AT_Alias:
     handleAliasAttr(S, D, AL);
     break;
